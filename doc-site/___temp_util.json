{
  "id": 0,
  "name": "@prestojs/util",
  "kind": 1,
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1,
      "name": "Labeled",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 716,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 987,
              "name": "Component",
              "kind": 128,
              "kindString": "Class",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 989,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 488,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 990,
                      "name": "new Component",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 992,
                          "name": "P",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "default": {
                            "type": "reflection",
                            "declaration": {
                              "id": 991,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              }
                            }
                          }
                        },
                        {
                          "id": 994,
                          "name": "S",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "default": {
                            "type": "reflection",
                            "declaration": {
                              "id": 993,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              }
                            }
                          }
                        },
                        {
                          "id": 995,
                          "name": "SS",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "default": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 996,
                          "name": "props",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 987,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 992,
                            "qualifiedName": "React.Component.P",
                            "package": "@types/react",
                            "name": "P"
                          },
                          {
                            "type": "reference",
                            "id": 994,
                            "qualifiedName": "React.Component.S",
                            "package": "@types/react",
                            "name": "S"
                          },
                          {
                            "type": "reference",
                            "id": 995,
                            "qualifiedName": "React.Component.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        ],
                        "qualifiedName": "React.Component",
                        "package": "@types/react",
                        "name": "Component"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "ComponentLifecycle<P, S, SS>.constructor"
                      }
                    },
                    {
                      "id": 997,
                      "name": "new Component",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": ""
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/docs/legacy-context.html\n"
                          }
                        ]
                      },
                      "typeParameter": [
                        {
                          "id": 999,
                          "name": "P",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "default": {
                            "type": "reflection",
                            "declaration": {
                              "id": 998,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              }
                            }
                          }
                        },
                        {
                          "id": 1001,
                          "name": "S",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "default": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1000,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              }
                            }
                          }
                        },
                        {
                          "id": 1002,
                          "name": "SS",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "default": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1003,
                          "name": "props",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 992,
                            "qualifiedName": "React.Component.P",
                            "package": "@types/react",
                            "name": "P"
                          }
                        },
                        {
                          "id": 1004,
                          "name": "context",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 987,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 992,
                            "qualifiedName": "React.Component.P",
                            "package": "@types/react",
                            "name": "P"
                          },
                          {
                            "type": "reference",
                            "id": 994,
                            "qualifiedName": "React.Component.S",
                            "package": "@types/react",
                            "name": "S"
                          },
                          {
                            "type": "reference",
                            "id": 995,
                            "qualifiedName": "React.Component.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        ],
                        "qualifiedName": "React.Component",
                        "package": "@types/react",
                        "name": "Component"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "ComponentLifecycle<P, S, SS>.constructor"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "ComponentLifecycle<P, S, SS>.constructor"
                  }
                },
                {
                  "id": 1005,
                  "name": "context",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.",
                    "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n",
                    "tags": [
                      {
                        "tag": "see",
                        "text": "https://reactjs.org/docs/context.html\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 486,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 1024,
                  "name": "props",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 511,
                      "character": 17
                    }
                  ],
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "id": 1159,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 992,
                            "qualifiedName": "React.Component.P",
                            "package": "@types/react",
                            "name": "P"
                          }
                        ],
                        "qualifiedName": "Readonly",
                        "package": "typescript",
                        "name": "Readonly"
                      },
                      {
                        "type": "reference",
                        "id": 1159,
                        "typeArguments": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1025,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "children": [
                                {
                                  "id": 1026,
                                  "name": "children",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isExternal": true,
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "node_modules/@types/react/index.d.ts",
                                      "line": 511,
                                      "character": 49
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 717,
                                    "qualifiedName": "React.ReactNode",
                                    "package": "@types/react",
                                    "name": "ReactNode"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1026]
                                }
                              ]
                            }
                          }
                        ],
                        "qualifiedName": "Readonly",
                        "package": "typescript",
                        "name": "Readonly"
                      }
                    ]
                  }
                },
                {
                  "id": 1028,
                  "name": "refs",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 517,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1029,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "indexSignature": {
                        "id": 1030,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {
                          "isExternal": true
                        },
                        "parameters": [
                          {
                            "id": 1031,
                            "name": "key",
                            "kind": 32768,
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "id": 1167,
                          "qualifiedName": "React.ReactInstance",
                          "package": "@types/react",
                          "name": "ReactInstance"
                        }
                      }
                    }
                  }
                },
                {
                  "id": 1027,
                  "name": "state",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 512,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1159,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 994,
                        "qualifiedName": "React.Component.S",
                        "package": "@types/react",
                        "name": "S"
                      }
                    ],
                    "qualifiedName": "Readonly",
                    "package": "typescript",
                    "name": "Readonly"
                  }
                },
                {
                  "id": 988,
                  "name": "contextType",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isStatic": true,
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "If set, `this.context` will be set at runtime to the current value of the given Context.",
                    "text": "Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n",
                    "tags": [
                      {
                        "tag": "see",
                        "text": "https://reactjs.org/docs/context.html#classcontexttype\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 468,
                      "character": 15
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1154,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "React.Context",
                    "package": "@types/react",
                    "name": "Context"
                  }
                },
                {
                  "id": 1056,
                  "name": "UNSAFE_componentWillMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1057,
                      "name": "UNSAFE_componentWillMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
                        "text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use componentDidMount or the constructor instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1132,
                        "name": "ComponentLifecycle.UNSAFE_componentWillMount"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1131,
                    "name": "ComponentLifecycle.UNSAFE_componentWillMount"
                  }
                },
                {
                  "id": 1062,
                  "name": "UNSAFE_componentWillReceiveProps",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1063,
                      "name": "UNSAFE_componentWillReceiveProps",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
                        "text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use static getDerivedStateFromProps instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1064,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1065,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1138,
                        "name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1137,
                    "name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
                  }
                },
                {
                  "id": 1071,
                  "name": "UNSAFE_componentWillUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1072,
                      "name": "UNSAFE_componentWillUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
                        "text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use getSnapshotBeforeUpdate instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1073,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1074,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 994,
                                "qualifiedName": "React.Component.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1075,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1147,
                        "name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1146,
                    "name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
                  }
                },
                {
                  "id": 1041,
                  "name": "componentDidCatch",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1042,
                      "name": "componentDidCatch",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                      },
                      "parameters": [
                        {
                          "id": 1043,
                          "name": "error",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1168,
                            "qualifiedName": "Error",
                            "package": "typescript",
                            "name": "Error"
                          }
                        },
                        {
                          "id": 1044,
                          "name": "errorInfo",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1173,
                            "qualifiedName": "React.ErrorInfo",
                            "package": "@types/react",
                            "name": "ErrorInfo"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1117,
                        "name": "ComponentLifecycle.componentDidCatch"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1116,
                    "name": "ComponentLifecycle.componentDidCatch"
                  }
                },
                {
                  "id": 1032,
                  "name": "componentDidMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1033,
                      "name": "componentDidMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1108,
                        "name": "ComponentLifecycle.componentDidMount"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1107,
                    "name": "ComponentLifecycle.componentDidMount"
                  }
                },
                {
                  "id": 1049,
                  "name": "componentDidUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1050,
                      "name": "componentDidUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately after updating occurs. Not called for the initial render.",
                        "text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
                      },
                      "parameters": [
                        {
                          "id": 1051,
                          "name": "prevProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1052,
                          "name": "prevState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 994,
                                "qualifiedName": "React.Component.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1053,
                          "name": "snapshot",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 995,
                            "qualifiedName": "React.Component.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1125,
                        "name": "ComponentLifecycle.componentDidUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1124,
                    "name": "ComponentLifecycle.componentDidUpdate"
                  }
                },
                {
                  "id": 1054,
                  "name": "componentWillMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1055,
                      "name": "componentWillMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
                        "text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1130,
                        "name": "ComponentLifecycle.componentWillMount"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1129,
                    "name": "ComponentLifecycle.componentWillMount"
                  }
                },
                {
                  "id": 1058,
                  "name": "componentWillReceiveProps",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1059,
                      "name": "componentWillReceiveProps",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
                        "text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1060,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1061,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1134,
                        "name": "ComponentLifecycle.componentWillReceiveProps"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1133,
                    "name": "ComponentLifecycle.componentWillReceiveProps"
                  }
                },
                {
                  "id": 1039,
                  "name": "componentWillUnmount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1040,
                      "name": "componentWillUnmount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1115,
                        "name": "ComponentLifecycle.componentWillUnmount"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1114,
                    "name": "ComponentLifecycle.componentWillUnmount"
                  }
                },
                {
                  "id": 1066,
                  "name": "componentWillUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1067,
                      "name": "componentWillUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
                        "text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1068,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1069,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 994,
                                "qualifiedName": "React.Component.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1070,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1142,
                        "name": "ComponentLifecycle.componentWillUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1141,
                    "name": "ComponentLifecycle.componentWillUpdate"
                  }
                },
                {
                  "id": 1017,
                  "name": "forceUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 503,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1018,
                      "name": "forceUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1019,
                          "name": "callback",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1020,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1021,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1045,
                  "name": "getSnapshotBeforeUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1046,
                      "name": "getSnapshotBeforeUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
                        "text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
                      },
                      "parameters": [
                        {
                          "id": 1047,
                          "name": "prevProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1048,
                          "name": "prevState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 994,
                                "qualifiedName": "React.Component.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 995,
                            "qualifiedName": "React.Component.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        ]
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1121,
                        "name": "ComponentLifecycle.getSnapshotBeforeUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1120,
                    "name": "ComponentLifecycle.getSnapshotBeforeUpdate"
                  }
                },
                {
                  "id": 1022,
                  "name": "render",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 504,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1023,
                      "name": "render",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      }
                    }
                  ]
                },
                {
                  "id": 1006,
                  "name": "setState",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 498,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1007,
                      "name": "setState",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1008,
                          "name": "K",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "number"
                              },
                              {
                                "type": "intrinsic",
                                "name": "symbol"
                              }
                            ]
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1009,
                          "name": "state",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 994,
                                "qualifiedName": "React.Component.S",
                                "package": "@types/react",
                                "name": "S"
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1010,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "signatures": [
                                    {
                                      "id": 1011,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "parameters": [
                                        {
                                          "id": 1012,
                                          "name": "prevState",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isExternal": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "id": 1159,
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 994,
                                                "qualifiedName": "React.Component.S",
                                                "package": "@types/react",
                                                "name": "S"
                                              }
                                            ],
                                            "qualifiedName": "Readonly",
                                            "package": "typescript",
                                            "name": "Readonly"
                                          }
                                        },
                                        {
                                          "id": 1013,
                                          "name": "props",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isExternal": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "id": 1159,
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 992,
                                                "qualifiedName": "React.Component.P",
                                                "package": "@types/react",
                                                "name": "P"
                                              }
                                            ],
                                            "qualifiedName": "Readonly",
                                            "package": "typescript",
                                            "name": "Readonly"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "reference",
                                            "id": 994,
                                            "qualifiedName": "React.Component.S",
                                            "package": "@types/react",
                                            "name": "S"
                                          },
                                          {
                                            "type": "reference",
                                            "id": 1164,
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 994,
                                                "qualifiedName": "React.Component.S",
                                                "package": "@types/react",
                                                "name": "S"
                                              },
                                              {
                                                "type": "reference",
                                                "id": 1008,
                                                "qualifiedName": "K",
                                                "package": "@types/react",
                                                "name": "K"
                                              }
                                            ],
                                            "qualifiedName": "Pick",
                                            "package": "typescript",
                                            "name": "Pick"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reference",
                                "id": 1164,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 994,
                                    "qualifiedName": "React.Component.S",
                                    "package": "@types/react",
                                    "name": "S"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 1008,
                                    "qualifiedName": "K",
                                    "package": "@types/react",
                                    "name": "K"
                                  }
                                ],
                                "qualifiedName": "Pick",
                                "package": "typescript",
                                "name": "Pick"
                              }
                            ]
                          }
                        },
                        {
                          "id": 1014,
                          "name": "callback",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1015,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1016,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1034,
                  "name": "shouldComponentUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1035,
                      "name": "shouldComponentUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called to determine whether the change in props and state should trigger a re-render.",
                        "text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
                      },
                      "parameters": [
                        {
                          "id": 1036,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 992,
                                "qualifiedName": "React.Component.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1037,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 994,
                                "qualifiedName": "React.Component.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1038,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1110,
                        "name": "ComponentLifecycle.shouldComponentUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1109,
                    "name": "ComponentLifecycle.shouldComponentUpdate"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [989]
                },
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1005, 1024, 1028, 1027, 988]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    1056, 1062, 1071, 1041, 1032, 1049, 1054, 1058, 1039, 1066, 1017, 1045, 1022,
                    1006, 1034
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 446,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1077,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1076,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 445,
                          "character": 28
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1079,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1078,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 445,
                          "character": 36
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1080,
                  "name": "SS",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 1106,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 992,
                      "qualifiedName": "React.Component.P",
                      "package": "@types/react",
                      "name": "P"
                    },
                    {
                      "type": "reference",
                      "id": 994,
                      "qualifiedName": "React.Component.S",
                      "package": "@types/react",
                      "name": "S"
                    },
                    {
                      "type": "reference",
                      "id": 995,
                      "qualifiedName": "React.Component.SS",
                      "package": "@types/react",
                      "name": "SS"
                    }
                  ],
                  "qualifiedName": "React.ComponentLifecycle",
                  "package": "@types/react",
                  "name": "ComponentLifecycle"
                }
              ]
            },
            {
              "id": 1106,
              "name": "ComponentLifecycle",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1131,
                  "name": "UNSAFE_componentWillMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1132,
                      "name": "UNSAFE_componentWillMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
                        "text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use componentDidMount or the constructor instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1192,
                        "name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1191,
                    "name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
                  }
                },
                {
                  "id": 1137,
                  "name": "UNSAFE_componentWillReceiveProps",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1138,
                      "name": "UNSAFE_componentWillReceiveProps",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
                        "text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use static getDerivedStateFromProps instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1139,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1151,
                                "qualifiedName": "React.ComponentLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1140,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1198,
                        "name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1197,
                    "name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
                  }
                },
                {
                  "id": 1146,
                  "name": "UNSAFE_componentWillUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1147,
                      "name": "UNSAFE_componentWillUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
                        "text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use getSnapshotBeforeUpdate instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1148,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1151,
                                "qualifiedName": "React.ComponentLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1149,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1152,
                                "qualifiedName": "React.ComponentLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1150,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1207,
                        "name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1206,
                    "name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
                  }
                },
                {
                  "id": 1116,
                  "name": "componentDidCatch",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1117,
                      "name": "componentDidCatch",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                      },
                      "parameters": [
                        {
                          "id": 1118,
                          "name": "error",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1168,
                            "qualifiedName": "Error",
                            "package": "typescript",
                            "name": "Error"
                          }
                        },
                        {
                          "id": 1119,
                          "name": "errorInfo",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1173,
                            "qualifiedName": "React.ErrorInfo",
                            "package": "@types/react",
                            "name": "ErrorInfo"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1107,
                  "name": "componentDidMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1108,
                      "name": "componentDidMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1124,
                  "name": "componentDidUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1125,
                      "name": "componentDidUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately after updating occurs. Not called for the initial render.",
                        "text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
                      },
                      "parameters": [
                        {
                          "id": 1126,
                          "name": "prevProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1151,
                                "qualifiedName": "React.ComponentLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1127,
                          "name": "prevState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1152,
                                "qualifiedName": "React.ComponentLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1128,
                          "name": "snapshot",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1153,
                            "qualifiedName": "React.ComponentLifecycle.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1181,
                        "name": "NewLifecycle.componentDidUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1180,
                    "name": "NewLifecycle.componentDidUpdate"
                  }
                },
                {
                  "id": 1129,
                  "name": "componentWillMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1130,
                      "name": "componentWillMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
                        "text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1190,
                        "name": "DeprecatedLifecycle.componentWillMount"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1189,
                    "name": "DeprecatedLifecycle.componentWillMount"
                  }
                },
                {
                  "id": 1133,
                  "name": "componentWillReceiveProps",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1134,
                      "name": "componentWillReceiveProps",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
                        "text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1135,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1151,
                                "qualifiedName": "React.ComponentLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1136,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1194,
                        "name": "DeprecatedLifecycle.componentWillReceiveProps"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1193,
                    "name": "DeprecatedLifecycle.componentWillReceiveProps"
                  }
                },
                {
                  "id": 1114,
                  "name": "componentWillUnmount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1115,
                      "name": "componentWillUnmount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1141,
                  "name": "componentWillUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1142,
                      "name": "componentWillUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
                        "text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1143,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1151,
                                "qualifiedName": "React.ComponentLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1144,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1152,
                                "qualifiedName": "React.ComponentLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1145,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1202,
                        "name": "DeprecatedLifecycle.componentWillUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1201,
                    "name": "DeprecatedLifecycle.componentWillUpdate"
                  }
                },
                {
                  "id": 1120,
                  "name": "getSnapshotBeforeUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1121,
                      "name": "getSnapshotBeforeUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
                        "text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
                      },
                      "parameters": [
                        {
                          "id": 1122,
                          "name": "prevProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1151,
                                "qualifiedName": "React.ComponentLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1123,
                          "name": "prevState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1152,
                                "qualifiedName": "React.ComponentLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 1153,
                            "qualifiedName": "React.ComponentLifecycle.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        ]
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1177,
                        "name": "NewLifecycle.getSnapshotBeforeUpdate"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1176,
                    "name": "NewLifecycle.getSnapshotBeforeUpdate"
                  }
                },
                {
                  "id": 1109,
                  "name": "shouldComponentUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1110,
                      "name": "shouldComponentUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called to determine whether the change in props and state should trigger a re-render.",
                        "text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
                      },
                      "parameters": [
                        {
                          "id": 1111,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1151,
                                "qualifiedName": "React.ComponentLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1112,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1152,
                                "qualifiedName": "React.ComponentLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1113,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    1131, 1137, 1146, 1116, 1107, 1124, 1129, 1133, 1114, 1141, 1120, 1109
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 616,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1151,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1152,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1153,
                  "name": "SS",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 1175,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 1151,
                      "qualifiedName": "React.ComponentLifecycle.P",
                      "package": "@types/react",
                      "name": "P"
                    },
                    {
                      "type": "reference",
                      "id": 1152,
                      "qualifiedName": "React.ComponentLifecycle.S",
                      "package": "@types/react",
                      "name": "S"
                    },
                    {
                      "type": "reference",
                      "id": 1153,
                      "qualifiedName": "React.ComponentLifecycle.SS",
                      "package": "@types/react",
                      "name": "SS"
                    }
                  ],
                  "qualifiedName": "React.NewLifecycle",
                  "package": "@types/react",
                  "name": "NewLifecycle"
                },
                {
                  "type": "reference",
                  "id": 1188,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 1151,
                      "qualifiedName": "React.ComponentLifecycle.P",
                      "package": "@types/react",
                      "name": "P"
                    },
                    {
                      "type": "reference",
                      "id": 1152,
                      "qualifiedName": "React.ComponentLifecycle.S",
                      "package": "@types/react",
                      "name": "S"
                    }
                  ],
                  "qualifiedName": "React.DeprecatedLifecycle",
                  "package": "@types/react",
                  "name": "DeprecatedLifecycle"
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 987,
                  "name": "Component"
                }
              ]
            },
            {
              "id": 1081,
              "name": "ConcatArray",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1082,
                  "name": "length",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1263,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1083,
                  "name": "join",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1084,
                      "name": "join",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1085,
                          "name": "separator",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                },
                {
                  "id": 1086,
                  "name": "slice",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1087,
                      "name": "slice",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1088,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 1089,
                          "name": "end",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 1090,
                          "qualifiedName": "ConcatArray.T",
                          "package": "typescript",
                          "name": "T"
                        }
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1082]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1083, 1086]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1262,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1090,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "indexSignature": {
                "id": 1091,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 1092,
                    "name": "n",
                    "kind": 32768,
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 1090,
                  "qualifiedName": "ConcatArray.T",
                  "package": "typescript",
                  "name": "T"
                }
              }
            },
            {
              "id": 1241,
              "name": "ConsumerProps",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1245,
                  "name": "unstable_observedBits",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 345,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1242,
                  "name": "children",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 344,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1243,
                      "name": "children",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1244,
                          "name": "value",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1246,
                            "qualifiedName": "React.ConsumerProps.T",
                            "package": "@types/react",
                            "name": "T"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1245]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1242]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 343,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1246,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ]
            },
            {
              "id": 1154,
              "name": "Context",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1156,
                  "name": "Consumer",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 382,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1223,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1158,
                        "qualifiedName": "React.Context.T",
                        "package": "@types/react",
                        "name": "T"
                      }
                    ],
                    "qualifiedName": "React.Consumer",
                    "package": "@types/react",
                    "name": "Consumer"
                  }
                },
                {
                  "id": 1155,
                  "name": "Provider",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 381,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1221,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1158,
                        "qualifiedName": "React.Context.T",
                        "package": "@types/react",
                        "name": "T"
                      }
                    ],
                    "qualifiedName": "React.Provider",
                    "package": "@types/react",
                    "name": "Provider"
                  }
                },
                {
                  "id": 1157,
                  "name": "displayName",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 383,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1156, 1155, 1157]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 380,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1158,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ]
            },
            {
              "id": 1188,
              "name": "DeprecatedLifecycle",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1191,
                  "name": "UNSAFE_componentWillMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1192,
                      "name": "UNSAFE_componentWillMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
                        "text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use componentDidMount or the constructor instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1197,
                  "name": "UNSAFE_componentWillReceiveProps",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1198,
                      "name": "UNSAFE_componentWillReceiveProps",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
                        "text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use static getDerivedStateFromProps instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1199,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1211,
                                "qualifiedName": "React.DeprecatedLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1200,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1206,
                  "name": "UNSAFE_componentWillUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1207,
                      "name": "UNSAFE_componentWillUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
                        "text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use getSnapshotBeforeUpdate instead"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1208,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1211,
                                "qualifiedName": "React.DeprecatedLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1209,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1212,
                                "qualifiedName": "React.DeprecatedLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1210,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1189,
                  "name": "componentWillMount",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1190,
                      "name": "componentWillMount",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
                        "text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1193,
                  "name": "componentWillReceiveProps",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1194,
                      "name": "componentWillReceiveProps",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
                        "text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1195,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1211,
                                "qualifiedName": "React.DeprecatedLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1196,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1201,
                  "name": "componentWillUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1202,
                      "name": "componentWillUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
                        "text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                          },
                          {
                            "tag": "see",
                            "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 1203,
                          "name": "nextProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1211,
                                "qualifiedName": "React.DeprecatedLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1204,
                          "name": "nextState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1212,
                                "qualifiedName": "React.DeprecatedLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1205,
                          "name": "nextContext",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1191, 1197, 1206, 1189, 1193, 1201]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 686,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1211,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1212,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 1106,
                  "name": "ComponentLifecycle"
                }
              ]
            },
            {
              "id": 1169,
              "name": "Error",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1171,
                  "name": "message",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1023,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1170,
                  "name": "name",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1022,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1172,
                  "name": "stack",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1024,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1171, 1170, 1172]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1021,
                  "character": 10
                }
              ]
            },
            {
              "id": 1173,
              "name": "ErrorInfo",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1174,
                  "name": "componentStack",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Captures which component contained the exception, and its ancestors."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 2897,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1174]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 2893,
                  "character": 14
                }
              ]
            },
            {
              "id": 1235,
              "name": "ExoticComponent",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1236,
                  "name": "$$typeof",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 363,
                      "character": 17
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "symbol"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1236]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 358,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1238,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1237,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 358,
                          "character": 34
                        }
                      ]
                    }
                  }
                }
              ],
              "signatures": [
                {
                  "id": 1239,
                  "name": "ExoticComponent",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "**NOTE**: Exotic components are not callable."
                  },
                  "parameters": [
                    {
                      "id": 1240,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 1238,
                        "qualifiedName": "React.ExoticComponent.P",
                        "package": "@types/react",
                        "name": "P"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 726,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "id": 966,
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                ],
                                "qualifiedName": "React.JSXElementConstructor",
                                "package": "@types/react",
                                "name": "JSXElementConstructor"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "React.ReactElement",
                        "package": "@types/react",
                        "name": "ReactElement"
                      }
                    ]
                  }
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 1225,
                  "name": "ProviderExoticComponent"
                }
              ]
            },
            {
              "id": 974,
              "name": "IterableIterator",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 975,
                  "name": "[iterator]",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 976,
                      "name": "[iterator]",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 974,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 986,
                            "qualifiedName": "IterableIterator.T",
                            "package": "typescript",
                            "name": "T"
                          }
                        ],
                        "qualifiedName": "IterableIterator",
                        "package": "typescript",
                        "name": "IterableIterator"
                      }
                    }
                  ]
                },
                {
                  "id": 977,
                  "name": "next",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 978,
                      "name": "next",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 979,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isRest": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "tuple"
                              },
                              {
                                "type": "tuple",
                                "elements": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1161,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 986,
                            "qualifiedName": "IterableIterator.T",
                            "package": "typescript",
                            "name": "T"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "IteratorResult",
                        "package": "typescript",
                        "name": "IteratorResult"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1095,
                        "name": "Iterator.next"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1094,
                    "name": "Iterator.next"
                  }
                },
                {
                  "id": 980,
                  "name": "return",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 981,
                      "name": "return",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 982,
                          "name": "value",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1161,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 986,
                            "qualifiedName": "IterableIterator.T",
                            "package": "typescript",
                            "name": "T"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "IteratorResult",
                        "package": "typescript",
                        "name": "IteratorResult"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1098,
                        "name": "Iterator.return"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1097,
                    "name": "Iterator.return"
                  }
                },
                {
                  "id": 983,
                  "name": "throw",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 984,
                      "name": "throw",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 985,
                          "name": "e",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1161,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 986,
                            "qualifiedName": "IterableIterator.T",
                            "package": "typescript",
                            "name": "T"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "IteratorResult",
                        "package": "typescript",
                        "name": "IteratorResult"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1101,
                        "name": "Iterator.throw"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1100,
                    "name": "Iterator.throw"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [975, 977, 980, 983]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                  "line": 54,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 986,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 1093,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 986,
                      "qualifiedName": "IterableIterator.T",
                      "package": "typescript",
                      "name": "T"
                    }
                  ],
                  "qualifiedName": "Iterator",
                  "package": "typescript",
                  "name": "Iterator"
                }
              ]
            },
            {
              "id": 1093,
              "name": "Iterator",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1094,
                  "name": "next",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1095,
                      "name": "next",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1096,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isRest": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "tuple"
                              },
                              {
                                "type": "tuple",
                                "elements": [
                                  {
                                    "type": "reference",
                                    "id": 1105,
                                    "qualifiedName": "Iterator.TNext",
                                    "package": "typescript",
                                    "name": "TNext"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1161,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1103,
                            "qualifiedName": "Iterator.T",
                            "package": "typescript",
                            "name": "T"
                          },
                          {
                            "type": "reference",
                            "id": 1104,
                            "qualifiedName": "Iterator.TReturn",
                            "package": "typescript",
                            "name": "TReturn"
                          }
                        ],
                        "qualifiedName": "IteratorResult",
                        "package": "typescript",
                        "name": "IteratorResult"
                      }
                    }
                  ]
                },
                {
                  "id": 1097,
                  "name": "return",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1098,
                      "name": "return",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1099,
                          "name": "value",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1104,
                            "qualifiedName": "Iterator.TReturn",
                            "package": "typescript",
                            "name": "TReturn"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1161,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1103,
                            "qualifiedName": "Iterator.T",
                            "package": "typescript",
                            "name": "T"
                          },
                          {
                            "type": "reference",
                            "id": 1104,
                            "qualifiedName": "Iterator.TReturn",
                            "package": "typescript",
                            "name": "TReturn"
                          }
                        ],
                        "qualifiedName": "IteratorResult",
                        "package": "typescript",
                        "name": "IteratorResult"
                      }
                    }
                  ]
                },
                {
                  "id": 1100,
                  "name": "throw",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1101,
                      "name": "throw",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1102,
                          "name": "e",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1161,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1103,
                            "qualifiedName": "Iterator.T",
                            "package": "typescript",
                            "name": "T"
                          },
                          {
                            "type": "reference",
                            "id": 1104,
                            "qualifiedName": "Iterator.TReturn",
                            "package": "typescript",
                            "name": "TReturn"
                          }
                        ],
                        "qualifiedName": "IteratorResult",
                        "package": "typescript",
                        "name": "IteratorResult"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1094, 1097, 1100]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                  "line": 43,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1103,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1104,
                  "name": "TReturn",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 1105,
                  "name": "TNext",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 974,
                  "name": "IterableIterator"
                }
              ]
            },
            {
              "id": 1217,
              "name": "IteratorReturnResult",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1218,
                  "name": "done",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                      "line": 37,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": true
                  }
                },
                {
                  "id": 1219,
                  "name": "value",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                      "line": 38,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1220,
                    "qualifiedName": "IteratorReturnResult.TReturn",
                    "package": "typescript",
                    "name": "TReturn"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1218, 1219]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                  "line": 36,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1220,
                  "name": "TReturn",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ]
            },
            {
              "id": 1213,
              "name": "IteratorYieldResult",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1214,
                  "name": "done",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                      "line": 32,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": false
                  }
                },
                {
                  "id": 1215,
                  "name": "value",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                      "line": 33,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1216,
                    "qualifiedName": "IteratorYieldResult.TYield",
                    "package": "typescript",
                    "name": "TYield"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1214, 1215]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                  "line": 31,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1216,
                  "name": "TYield",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ]
            },
            {
              "id": 1175,
              "name": "NewLifecycle",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1180,
                  "name": "componentDidUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1181,
                      "name": "componentDidUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Called immediately after updating occurs. Not called for the initial render.",
                        "text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
                      },
                      "parameters": [
                        {
                          "id": 1182,
                          "name": "prevProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1185,
                                "qualifiedName": "React.NewLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1183,
                          "name": "prevState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1186,
                                "qualifiedName": "React.NewLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1184,
                          "name": "snapshot",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1187,
                            "qualifiedName": "React.NewLifecycle.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1176,
                  "name": "getSnapshotBeforeUpdate",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "signatures": [
                    {
                      "id": 1177,
                      "name": "getSnapshotBeforeUpdate",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
                        "text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
                      },
                      "parameters": [
                        {
                          "id": 1178,
                          "name": "prevProps",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1185,
                                "qualifiedName": "React.NewLifecycle.P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        },
                        {
                          "id": 1179,
                          "name": "prevState",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1159,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1186,
                                "qualifiedName": "React.NewLifecycle.S",
                                "package": "@types/react",
                                "name": "S"
                              }
                            ],
                            "qualifiedName": "Readonly",
                            "package": "typescript",
                            "name": "Readonly"
                          }
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 1187,
                            "qualifiedName": "React.NewLifecycle.SS",
                            "package": "@types/react",
                            "name": "SS"
                          }
                        ]
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1180, 1176]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 668,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1185,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1186,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1187,
                  "name": "SS",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 1106,
                  "name": "ComponentLifecycle"
                }
              ]
            },
            {
              "id": 1225,
              "name": "ProviderExoticComponent",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1227,
                  "name": "$$typeof",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 363,
                      "character": 17
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "symbol"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1236,
                    "name": "ExoticComponent.$$typeof"
                  }
                },
                {
                  "id": 1226,
                  "name": "propTypes",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 371,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1247,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1228,
                        "qualifiedName": "React.ProviderExoticComponent.P",
                        "package": "@types/react",
                        "name": "P"
                      }
                    ],
                    "qualifiedName": "React.WeakValidationMap",
                    "package": "@types/react",
                    "name": "WeakValidationMap"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1227, 1226]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 370,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1228,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "signatures": [
                {
                  "id": 1229,
                  "name": "ProviderExoticComponent",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "**NOTE**: Exotic components are not callable."
                  },
                  "parameters": [
                    {
                      "id": 1230,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 1228,
                        "qualifiedName": "React.ProviderExoticComponent.P",
                        "package": "@types/react",
                        "name": "P"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 726,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "id": 966,
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                ],
                                "qualifiedName": "React.JSXElementConstructor",
                                "package": "@types/react",
                                "name": "JSXElementConstructor"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "React.ReactElement",
                        "package": "@types/react",
                        "name": "ReactElement"
                      }
                    ]
                  }
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 1235,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 1228,
                      "qualifiedName": "React.ProviderExoticComponent.P",
                      "package": "@types/react",
                      "name": "P"
                    }
                  ],
                  "qualifiedName": "React.ExoticComponent",
                  "package": "@types/react",
                  "name": "ExoticComponent"
                }
              ]
            },
            {
              "id": 1231,
              "name": "ProviderProps",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1233,
                  "name": "children",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 340,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 717,
                    "qualifiedName": "React.ReactNode",
                    "package": "@types/react",
                    "name": "ReactNode"
                  }
                },
                {
                  "id": 1232,
                  "name": "value",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 339,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1234,
                    "qualifiedName": "React.ProviderProps.T",
                    "package": "@types/react",
                    "name": "T"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1233, 1232]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 338,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 1234,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ]
            },
            {
              "id": 726,
              "name": "ReactElement",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 729,
                  "name": "key",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 151,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 965,
                        "qualifiedName": "React.Key",
                        "package": "@types/react",
                        "name": "Key"
                      }
                    ]
                  }
                },
                {
                  "id": 728,
                  "name": "props",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 150,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 730,
                    "qualifiedName": "React.ReactElement.P",
                    "package": "@types/react",
                    "name": "P"
                  }
                },
                {
                  "id": 727,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 149,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 731,
                    "qualifiedName": "React.ReactElement.T",
                    "package": "@types/react",
                    "name": "T"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [729, 728, 727]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 148,
                  "character": 14
                }
              ],
              "typeParameter": [
                {
                  "id": 730,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 731,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "id": 966,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react",
                        "name": "JSXElementConstructor"
                      }
                    ]
                  },
                  "default": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "id": 966,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react",
                        "name": "JSXElementConstructor"
                      }
                    ]
                  }
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 721,
                  "name": "ReactPortal"
                }
              ]
            },
            {
              "id": 733,
              "name": "ReactNodeArray",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 734,
                  "name": "length",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1273,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.length"
                  }
                },
                {
                  "id": 953,
                  "name": "[iterator]",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 954,
                      "name": "[iterator]",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Iterator"
                      },
                      "type": {
                        "type": "reference",
                        "id": 974,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        ],
                        "qualifiedName": "IterableIterator",
                        "package": "typescript",
                        "name": "IterableIterator"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.__@iterator@79"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.__@iterator@79"
                  }
                },
                {
                  "id": 955,
                  "name": "[unscopables]",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 956,
                      "name": "[unscopables]",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 957,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "children": [
                            {
                              "id": 958,
                              "name": "copyWithin",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                                  "line": 100,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 959,
                              "name": "entries",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                                  "line": 101,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 960,
                              "name": "fill",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                                  "line": 102,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 961,
                              "name": "find",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                                  "line": 103,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 962,
                              "name": "findIndex",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                                  "line": 104,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 963,
                              "name": "keys",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                                  "line": 105,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 964,
                              "name": "values",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                                  "line": 106,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [958, 959, 960, 961, 962, 963, 964]
                            }
                          ]
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.__@unscopables@103"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.__@unscopables@103"
                  }
                },
                {
                  "id": 744,
                  "name": "concat",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 745,
                      "name": "concat",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
                      },
                      "parameters": [
                        {
                          "id": 746,
                          "name": "items",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isRest": true
                          },
                          "comment": {
                            "shortText": "Additional arrays and/or items to add to the end of the array.\n"
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 1081,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "id": 717,
                                  "qualifiedName": "React.ReactNode",
                                  "package": "@types/react",
                                  "name": "ReactNode"
                                }
                              ],
                              "qualifiedName": "ConcatArray",
                              "package": "typescript",
                              "name": "ConcatArray"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 717,
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react",
                          "name": "ReactNode"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.concat"
                      }
                    },
                    {
                      "id": 747,
                      "name": "concat",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
                      },
                      "parameters": [
                        {
                          "id": 748,
                          "name": "items",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isRest": true
                          },
                          "comment": {
                            "shortText": "Additional arrays and/or items to add to the end of the array.\n"
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "reference",
                                  "id": 717,
                                  "qualifiedName": "React.ReactNode",
                                  "package": "@types/react",
                                  "name": "ReactNode"
                                },
                                {
                                  "type": "reference",
                                  "id": 1081,
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "id": 717,
                                      "qualifiedName": "React.ReactNode",
                                      "package": "@types/react",
                                      "name": "ReactNode"
                                    }
                                  ],
                                  "qualifiedName": "ConcatArray",
                                  "package": "typescript",
                                  "name": "ConcatArray"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 717,
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react",
                          "name": "ReactNode"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.concat"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.concat"
                  }
                },
                {
                  "id": 938,
                  "name": "copyWithin",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 939,
                      "name": "copyWithin",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
                      },
                      "parameters": [
                        {
                          "id": 940,
                          "name": "target",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "If target is negative, it is treated as length+target where length is the\nlength of the array."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 941,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 942,
                          "name": "end",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If not specified, length of the this object is used as its default value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 733,
                        "qualifiedName": "React.ReactNodeArray",
                        "package": "@types/react",
                        "name": "ReactNodeArray"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.copyWithin"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.copyWithin"
                  }
                },
                {
                  "id": 943,
                  "name": "entries",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 944,
                      "name": "entries",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns an iterable of key, value pairs for every entry in the array"
                      },
                      "type": {
                        "type": "reference",
                        "id": 974,
                        "typeArguments": [
                          {
                            "type": "tuple",
                            "elements": [
                              {
                                "type": "intrinsic",
                                "name": "number"
                              },
                              {
                                "type": "reference",
                                "id": 717,
                                "qualifiedName": "React.ReactNode",
                                "package": "@types/react",
                                "name": "ReactNode"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "IterableIterator",
                        "package": "typescript",
                        "name": "IterableIterator"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.entries"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.entries"
                  }
                },
                {
                  "id": 786,
                  "name": "every",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 787,
                      "name": "every",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Determines whether all the members of an array satisfy the specified test."
                      },
                      "typeParameter": [
                        {
                          "id": 788,
                          "name": "S",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 789,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 790,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 791,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 792,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 793,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 794,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "predicate",
                                    "name": "value",
                                    "asserts": false,
                                    "targetType": {
                                      "type": "reference",
                                      "id": 788,
                                      "qualifiedName": "S",
                                      "package": "typescript",
                                      "name": "S"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 795,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "predicate",
                        "name": "this",
                        "asserts": false,
                        "targetType": {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "id": 788,
                            "qualifiedName": "S",
                            "package": "typescript",
                            "name": "S"
                          }
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.every"
                      }
                    },
                    {
                      "id": 796,
                      "name": "every",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Determines whether all the members of an array satisfy the specified test."
                      },
                      "parameters": [
                        {
                          "id": 797,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 798,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 799,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 800,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 801,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 802,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 803,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.every"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.every"
                  }
                },
                {
                  "id": 933,
                  "name": "fill",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 934,
                      "name": "fill",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array"
                      },
                      "parameters": [
                        {
                          "id": 935,
                          "name": "value",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "value to fill array section with"
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        },
                        {
                          "id": 936,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 937,
                          "name": "end",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "index to stop filling the array at. If end is negative, it is treated as\nlength+end.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 733,
                        "qualifiedName": "React.ReactNodeArray",
                        "package": "@types/react",
                        "name": "ReactNodeArray"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.fill"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.fill"
                  }
                },
                {
                  "id": 832,
                  "name": "filter",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 833,
                      "name": "filter",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the elements of an array that meet the condition specified in a callback function."
                      },
                      "typeParameter": [
                        {
                          "id": 834,
                          "name": "S",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 835,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 836,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 837,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 838,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 839,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 840,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "predicate",
                                    "name": "value",
                                    "asserts": false,
                                    "targetType": {
                                      "type": "reference",
                                      "id": 834,
                                      "qualifiedName": "S",
                                      "package": "typescript",
                                      "name": "S"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 841,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 834,
                          "qualifiedName": "S",
                          "package": "typescript",
                          "name": "S"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.filter"
                      }
                    },
                    {
                      "id": 842,
                      "name": "filter",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the elements of an array that meet the condition specified in a callback function."
                      },
                      "parameters": [
                        {
                          "id": 843,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 844,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 845,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 846,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 847,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 848,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 849,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 717,
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react",
                          "name": "ReactNode"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.filter"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.filter"
                  }
                },
                {
                  "id": 906,
                  "name": "find",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 907,
                      "name": "find",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
                      },
                      "typeParameter": [
                        {
                          "id": 908,
                          "name": "S",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 909,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 910,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 911,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 912,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 913,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 914,
                                      "name": "obj",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "predicate",
                                    "name": "value",
                                    "asserts": false,
                                    "targetType": {
                                      "type": "reference",
                                      "id": 908,
                                      "qualifiedName": "S",
                                      "package": "typescript",
                                      "name": "S"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 915,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "id": 908,
                            "qualifiedName": "S",
                            "package": "typescript",
                            "name": "S"
                          }
                        ]
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.find"
                      }
                    },
                    {
                      "id": 916,
                      "name": "find",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 917,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 918,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 919,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 920,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 921,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 922,
                                      "name": "obj",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 923,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.find"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.find"
                  }
                },
                {
                  "id": 924,
                  "name": "findIndex",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 925,
                      "name": "findIndex",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
                      },
                      "parameters": [
                        {
                          "id": 926,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 927,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 928,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 929,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 930,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 931,
                                      "name": "obj",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 932,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.findIndex"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.findIndex"
                  }
                },
                {
                  "id": 813,
                  "name": "forEach",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 814,
                      "name": "forEach",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Performs the specified action for each element in an array."
                      },
                      "parameters": [
                        {
                          "id": 815,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 816,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 817,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 818,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 819,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 820,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 821,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.forEach"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.forEach"
                  }
                },
                {
                  "id": 949,
                  "name": "includes",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 950,
                      "name": "includes",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Determines whether an array includes a certain element, returning true or false as appropriate."
                      },
                      "parameters": [
                        {
                          "id": 951,
                          "name": "searchElement",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "The element to search for."
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        },
                        {
                          "id": 952,
                          "name": "fromIndex",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The position in this array at which to begin searching for searchElement.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.includes"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.includes"
                  }
                },
                {
                  "id": 778,
                  "name": "indexOf",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 779,
                      "name": "indexOf",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present."
                      },
                      "parameters": [
                        {
                          "id": 780,
                          "name": "searchElement",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "The value to locate in the array."
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        },
                        {
                          "id": 781,
                          "name": "fromIndex",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.indexOf"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.indexOf"
                  }
                },
                {
                  "id": 749,
                  "name": "join",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 750,
                      "name": "join",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Adds all the elements of an array into a string, separated by the specified separator string."
                      },
                      "parameters": [
                        {
                          "id": 751,
                          "name": "separator",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.join"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.join"
                  }
                },
                {
                  "id": 945,
                  "name": "keys",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 946,
                      "name": "keys",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns an iterable of keys in the array"
                      },
                      "type": {
                        "type": "reference",
                        "id": 974,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ],
                        "qualifiedName": "IterableIterator",
                        "package": "typescript",
                        "name": "IterableIterator"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.keys"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.keys"
                  }
                },
                {
                  "id": 782,
                  "name": "lastIndexOf",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 783,
                      "name": "lastIndexOf",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present."
                      },
                      "parameters": [
                        {
                          "id": 784,
                          "name": "searchElement",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "The value to locate in the array."
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        },
                        {
                          "id": 785,
                          "name": "fromIndex",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.lastIndexOf"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.lastIndexOf"
                  }
                },
                {
                  "id": 822,
                  "name": "map",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 823,
                      "name": "map",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
                      },
                      "typeParameter": [
                        {
                          "id": 824,
                          "name": "U",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 825,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 826,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 827,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 828,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 829,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 830,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 824,
                                    "qualifiedName": "U",
                                    "package": "typescript",
                                    "name": "U"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 831,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 824,
                          "qualifiedName": "U",
                          "package": "typescript",
                          "name": "U"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.map"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.map"
                  }
                },
                {
                  "id": 739,
                  "name": "pop",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 740,
                      "name": "pop",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
                      },
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.pop"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.pop"
                  }
                },
                {
                  "id": 741,
                  "name": "push",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 742,
                      "name": "push",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Appends new elements to the end of an array, and returns the new length of the array."
                      },
                      "parameters": [
                        {
                          "id": 743,
                          "name": "items",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isRest": true
                          },
                          "comment": {
                            "shortText": "New elements to add to the array.\n"
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 717,
                              "qualifiedName": "React.ReactNode",
                              "package": "@types/react",
                              "name": "ReactNode"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.push"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.push"
                  }
                },
                {
                  "id": 850,
                  "name": "reduce",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 851,
                      "name": "reduce",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
                      },
                      "parameters": [
                        {
                          "id": 852,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 853,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 854,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 855,
                                      "name": "previousValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 856,
                                      "name": "currentValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 857,
                                      "name": "currentIndex",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 858,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 717,
                                    "qualifiedName": "React.ReactNode",
                                    "package": "@types/react",
                                    "name": "ReactNode"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.reduce"
                      }
                    },
                    {
                      "id": 859,
                      "name": "reduce",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 860,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 861,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 862,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 863,
                                      "name": "previousValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 864,
                                      "name": "currentValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 865,
                                      "name": "currentIndex",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 866,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 717,
                                    "qualifiedName": "React.ReactNode",
                                    "package": "@types/react",
                                    "name": "ReactNode"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 867,
                          "name": "initialValue",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.reduce"
                      }
                    },
                    {
                      "id": 868,
                      "name": "reduce",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
                      },
                      "typeParameter": [
                        {
                          "id": 869,
                          "name": "U",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 870,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 871,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 872,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 873,
                                      "name": "previousValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 869,
                                        "qualifiedName": "U",
                                        "package": "typescript",
                                        "name": "U"
                                      }
                                    },
                                    {
                                      "id": 874,
                                      "name": "currentValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 875,
                                      "name": "currentIndex",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 876,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 869,
                                    "qualifiedName": "U",
                                    "package": "typescript",
                                    "name": "U"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 877,
                          "name": "initialValue",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 869,
                            "qualifiedName": "U",
                            "package": "typescript",
                            "name": "U"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 869,
                        "qualifiedName": "U",
                        "package": "typescript",
                        "name": "U"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.reduce"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.reduce"
                  }
                },
                {
                  "id": 878,
                  "name": "reduceRight",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 879,
                      "name": "reduceRight",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
                      },
                      "parameters": [
                        {
                          "id": 880,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 881,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 882,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 883,
                                      "name": "previousValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 884,
                                      "name": "currentValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 885,
                                      "name": "currentIndex",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 886,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 717,
                                    "qualifiedName": "React.ReactNode",
                                    "package": "@types/react",
                                    "name": "ReactNode"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.reduceRight"
                      }
                    },
                    {
                      "id": 887,
                      "name": "reduceRight",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 888,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 889,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 890,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 891,
                                      "name": "previousValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 892,
                                      "name": "currentValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 893,
                                      "name": "currentIndex",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 894,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 717,
                                    "qualifiedName": "React.ReactNode",
                                    "package": "@types/react",
                                    "name": "ReactNode"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 895,
                          "name": "initialValue",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.reduceRight"
                      }
                    },
                    {
                      "id": 896,
                      "name": "reduceRight",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
                      },
                      "typeParameter": [
                        {
                          "id": 897,
                          "name": "U",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 898,
                          "name": "callbackfn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 899,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 900,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 901,
                                      "name": "previousValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 897,
                                        "qualifiedName": "U",
                                        "package": "typescript",
                                        "name": "U"
                                      }
                                    },
                                    {
                                      "id": 902,
                                      "name": "currentValue",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 903,
                                      "name": "currentIndex",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 904,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 897,
                                    "qualifiedName": "U",
                                    "package": "typescript",
                                    "name": "U"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 905,
                          "name": "initialValue",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 897,
                            "qualifiedName": "U",
                            "package": "typescript",
                            "name": "U"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 897,
                        "qualifiedName": "U",
                        "package": "typescript",
                        "name": "U"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.reduceRight"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.reduceRight"
                  }
                },
                {
                  "id": 752,
                  "name": "reverse",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 753,
                      "name": "reverse",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array."
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 717,
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react",
                          "name": "ReactNode"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.reverse"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.reverse"
                  }
                },
                {
                  "id": 754,
                  "name": "shift",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 755,
                      "name": "shift",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
                      },
                      "type": {
                        "type": "reference",
                        "id": 717,
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react",
                        "name": "ReactNode"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.shift"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.shift"
                  }
                },
                {
                  "id": 756,
                  "name": "slice",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 757,
                      "name": "slice",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array."
                      },
                      "parameters": [
                        {
                          "id": 758,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 759,
                          "name": "end",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 717,
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react",
                          "name": "ReactNode"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.slice"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.slice"
                  }
                },
                {
                  "id": 804,
                  "name": "some",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 805,
                      "name": "some",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Determines whether the specified callback function returns true for any element of an array."
                      },
                      "parameters": [
                        {
                          "id": 806,
                          "name": "predicate",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 807,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 808,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 809,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 810,
                                      "name": "index",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 811,
                                      "name": "array",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 717,
                                          "qualifiedName": "React.ReactNode",
                                          "package": "@types/react",
                                          "name": "ReactNode"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 812,
                          "name": "thisArg",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.some"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.some"
                  }
                },
                {
                  "id": 760,
                  "name": "sort",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 761,
                      "name": "sort",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array."
                      },
                      "parameters": [
                        {
                          "id": 762,
                          "name": "compareFn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```\n"
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 763,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 764,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 765,
                                      "name": "a",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    },
                                    {
                                      "id": 766,
                                      "name": "b",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "id": 717,
                                        "qualifiedName": "React.ReactNode",
                                        "package": "@types/react",
                                        "name": "ReactNode"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 733,
                        "qualifiedName": "React.ReactNodeArray",
                        "package": "@types/react",
                        "name": "ReactNodeArray"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.sort"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.sort"
                  }
                },
                {
                  "id": 767,
                  "name": "splice",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 768,
                      "name": "splice",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
                        "returns": "An array containing the elements that were deleted.\n"
                      },
                      "parameters": [
                        {
                          "id": 769,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "The zero-based location in the array from which to start removing elements."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 770,
                          "name": "deleteCount",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The number of elements to remove."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 717,
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react",
                          "name": "ReactNode"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.splice"
                      }
                    },
                    {
                      "id": 771,
                      "name": "splice",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
                        "returns": "An array containing the elements that were deleted.\n"
                      },
                      "parameters": [
                        {
                          "id": 772,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "The zero-based location in the array from which to start removing elements."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 773,
                          "name": "deleteCount",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "comment": {
                            "shortText": "The number of elements to remove."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 774,
                          "name": "items",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isRest": true
                          },
                          "comment": {
                            "shortText": "Elements to insert into the array in place of the deleted elements."
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 717,
                              "qualifiedName": "React.ReactNode",
                              "package": "@types/react",
                              "name": "ReactNode"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 717,
                          "qualifiedName": "React.ReactNode",
                          "package": "@types/react",
                          "name": "ReactNode"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.splice"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.splice"
                  }
                },
                {
                  "id": 737,
                  "name": "toLocaleString",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 738,
                      "name": "toLocaleString",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.toLocaleString"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.toLocaleString"
                  }
                },
                {
                  "id": 735,
                  "name": "toString",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 736,
                      "name": "toString",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns a string representation of an array."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.toString"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.toString"
                  }
                },
                {
                  "id": 775,
                  "name": "unshift",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 776,
                      "name": "unshift",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Inserts new elements at the start of an array, and returns the new length of the array."
                      },
                      "parameters": [
                        {
                          "id": 777,
                          "name": "items",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isRest": true
                          },
                          "comment": {
                            "shortText": "Elements to insert at the start of the array.\n"
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 717,
                              "qualifiedName": "React.ReactNode",
                              "package": "@types/react",
                              "name": "ReactNode"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.unshift"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.unshift"
                  }
                },
                {
                  "id": 947,
                  "name": "values",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 948,
                      "name": "values",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns an iterable of values in the array"
                      },
                      "type": {
                        "type": "reference",
                        "id": 974,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 717,
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react",
                            "name": "ReactNode"
                          }
                        ],
                        "qualifiedName": "IterableIterator",
                        "package": "typescript",
                        "name": "IterableIterator"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "Array.values"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Array.values"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [734]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    953, 955, 744, 938, 943, 786, 933, 832, 906, 924, 813, 949, 778, 749, 945, 782,
                    822, 739, 741, 850, 878, 752, 754, 756, 804, 760, 767, 737, 735, 775, 947
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 239,
                  "character": 14
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 717,
                      "qualifiedName": "React.ReactNode",
                      "package": "@types/react",
                      "name": "ReactNode"
                    }
                  ],
                  "qualifiedName": "Array",
                  "package": "typescript",
                  "name": "Array"
                }
              ]
            },
            {
              "id": 721,
              "name": "ReactPortal",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 723,
                  "name": "children",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 195,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 717,
                    "qualifiedName": "React.ReactNode",
                    "package": "@types/react",
                    "name": "ReactNode"
                  }
                },
                {
                  "id": 722,
                  "name": "key",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 194,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 965,
                        "qualifiedName": "React.Key",
                        "package": "@types/react",
                        "name": "Key"
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 729,
                    "name": "ReactElement.key"
                  }
                },
                {
                  "id": 725,
                  "name": "props",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 150,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 728,
                    "name": "ReactElement.props"
                  }
                },
                {
                  "id": 724,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 149,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "id": 966,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react",
                        "name": "JSXElementConstructor"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 727,
                    "name": "ReactElement.type"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [723, 722, 725, 724]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 193,
                  "character": 14
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 726,
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react",
                  "name": "ReactElement"
                }
              ]
            },
            {
              "id": 1251,
              "name": "Validator",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1252,
                  "name": "[nominalTypeHack]",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/prop-types/index.d.ts",
                      "line": 42,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1253,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "children": [
                        {
                          "id": 1254,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/prop-types/index.d.ts",
                              "line": 43,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 1255,
                            "qualifiedName": "Validator.T",
                            "package": "@types/prop-types",
                            "name": "T"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1254]
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1252]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/prop-types/index.d.ts",
                  "line": 40,
                  "character": 17
                }
              ],
              "typeParameter": [
                {
                  "id": 1255,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "signatures": [
                {
                  "id": 1256,
                  "name": "Validator",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "parameters": [
                    {
                      "id": 1257,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1258,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "indexSignature": {
                            "id": 1259,
                            "name": "__index",
                            "kind": 8192,
                            "kindString": "Index signature",
                            "flags": {
                              "isExternal": true
                            },
                            "parameters": [
                              {
                                "id": 1260,
                                "name": "key",
                                "kind": 32768,
                                "flags": {
                                  "isExternal": true
                                },
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      }
                    },
                    {
                      "id": 1261,
                      "name": "propName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1262,
                      "name": "componentName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1263,
                      "name": "location",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1264,
                      "name": "propFullName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 1168,
                        "qualifiedName": "Error",
                        "package": "typescript",
                        "name": "Error"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 1223,
              "name": "Consumer",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 379,
                  "character": 9
                }
              ],
              "typeParameter": [
                {
                  "id": 1224,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1235,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1241,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1224,
                        "qualifiedName": "T",
                        "package": "@types/react",
                        "name": "T"
                      }
                    ],
                    "qualifiedName": "React.ConsumerProps",
                    "package": "@types/react",
                    "name": "ConsumerProps"
                  }
                ],
                "qualifiedName": "React.ExoticComponent",
                "package": "@types/react",
                "name": "ExoticComponent"
              }
            },
            {
              "id": 1161,
              "name": "IteratorResult",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
                  "line": 41,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1162,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1163,
                  "name": "TReturn",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 1213,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1162,
                        "qualifiedName": "T",
                        "package": "typescript",
                        "name": "T"
                      }
                    ],
                    "qualifiedName": "IteratorYieldResult",
                    "package": "typescript",
                    "name": "IteratorYieldResult"
                  },
                  {
                    "type": "reference",
                    "id": 1217,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1163,
                        "qualifiedName": "TReturn",
                        "package": "typescript",
                        "name": "TReturn"
                      }
                    ],
                    "qualifiedName": "IteratorReturnResult",
                    "package": "typescript",
                    "name": "IteratorReturnResult"
                  }
                ]
              }
            },
            {
              "id": 966,
              "name": "JSXElementConstructor",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 83,
                  "character": 9
                }
              ],
              "typeParameter": [
                {
                  "id": 973,
                  "name": "P",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 967,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 84,
                          "character": 11
                        }
                      ],
                      "signatures": [
                        {
                          "id": 968,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "parameters": [
                            {
                              "id": 969,
                              "name": "props",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "id": 973,
                                "qualifiedName": "P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 726,
                                "qualifiedName": "React.ReactElement",
                                "package": "@types/react",
                                "name": "ReactElement"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 970,
                      "name": "__type",
                      "kind": 512,
                      "kindString": "Constructor",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 85,
                          "character": 11
                        }
                      ],
                      "signatures": [
                        {
                          "id": 971,
                          "name": "__type",
                          "kind": 16384,
                          "kindString": "Constructor signature",
                          "flags": {
                            "isExternal": true
                          },
                          "parameters": [
                            {
                              "id": 972,
                              "name": "props",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "id": 973,
                                "qualifiedName": "P",
                                "package": "@types/react",
                                "name": "P"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 987,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 973,
                                "qualifiedName": "P",
                                "package": "@types/react",
                                "name": "P"
                              },
                              {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            ],
                            "qualifiedName": "React.Component",
                            "package": "@types/react",
                            "name": "Component"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 965,
              "name": "Key",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 132,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 1164,
              "name": "Pick",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "From T, pick a set of properties whose keys are in the union K"
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1552,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1165,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1166,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 1165,
                      "qualifiedName": "T",
                      "package": "typescript",
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "mapped",
                "parameter": "P",
                "parameterType": {
                  "type": "reference",
                  "id": 1166,
                  "qualifiedName": "K",
                  "package": "typescript",
                  "name": "K"
                },
                "templateType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "qualifiedName": "P",
                    "package": "typescript",
                    "name": "P"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 1165,
                    "qualifiedName": "T",
                    "package": "typescript",
                    "name": "T"
                  }
                }
              }
            },
            {
              "id": 1221,
              "name": "Provider",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 378,
                  "character": 9
                }
              ],
              "typeParameter": [
                {
                  "id": 1222,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1225,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1231,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1222,
                        "qualifiedName": "T",
                        "package": "@types/react",
                        "name": "T"
                      }
                    ],
                    "qualifiedName": "React.ProviderProps",
                    "package": "@types/react",
                    "name": "ProviderProps"
                  }
                ],
                "qualifiedName": "React.ProviderExoticComponent",
                "package": "@types/react",
                "name": "ProviderExoticComponent"
              }
            },
            {
              "id": 718,
              "name": "ReactChild",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 237,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 726,
                    "qualifiedName": "React.ReactElement",
                    "package": "@types/react",
                    "name": "ReactElement"
                  },
                  {
                    "type": "reference",
                    "id": 732,
                    "qualifiedName": "React.ReactText",
                    "package": "@types/react",
                    "name": "ReactText"
                  }
                ]
              }
            },
            {
              "id": 719,
              "name": "ReactFragment",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 240,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 720,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 240,
                          "character": 25
                        }
                      ]
                    }
                  },
                  {
                    "type": "reference",
                    "id": 733,
                    "qualifiedName": "React.ReactNodeArray",
                    "package": "@types/react",
                    "name": "ReactNodeArray"
                  }
                ]
              }
            },
            {
              "id": 1167,
              "name": "ReactInstance",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 441,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 987,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "React.Component",
                    "package": "@types/react",
                    "name": "Component"
                  },
                  {
                    "type": "reference",
                    "qualifiedName": "Element",
                    "package": "typescript",
                    "name": "Element"
                  }
                ]
              }
            },
            {
              "id": 717,
              "name": "ReactNode",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 241,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 718,
                    "qualifiedName": "React.ReactChild",
                    "package": "@types/react",
                    "name": "ReactChild"
                  },
                  {
                    "type": "reference",
                    "id": 719,
                    "qualifiedName": "React.ReactFragment",
                    "package": "@types/react",
                    "name": "ReactFragment"
                  },
                  {
                    "type": "reference",
                    "id": 721,
                    "qualifiedName": "React.ReactPortal",
                    "package": "@types/react",
                    "name": "ReactPortal"
                  },
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                ]
              }
            },
            {
              "id": 732,
              "name": "ReactText",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 236,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 1159,
              "name": "Readonly",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "Make all properties in T readonly"
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1545,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1160,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "mapped",
                "parameter": "P",
                "parameterType": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "id": 1160,
                    "qualifiedName": "T",
                    "package": "typescript",
                    "name": "T"
                  }
                },
                "templateType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "qualifiedName": "P",
                    "package": "typescript",
                    "name": "P"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 1160,
                    "qualifiedName": "T",
                    "package": "typescript",
                    "name": "T"
                  }
                },
                "readonlyModifier": "+"
              }
            },
            {
              "id": 1249,
              "name": "Validator",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 2816,
                  "character": 9
                }
              ],
              "typeParameter": [
                {
                  "id": 1250,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1251,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1250,
                    "qualifiedName": "T",
                    "package": "@types/react",
                    "name": "T"
                  }
                ],
                "qualifiedName": "Validator",
                "package": "@types/prop-types",
                "name": "PropTypes.Validator"
              }
            },
            {
              "id": 1247,
              "name": "WeakValidationMap",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 2822,
                  "character": 9
                }
              ],
              "typeParameter": [
                {
                  "id": 1248,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "mapped",
                "parameter": "K",
                "parameterType": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "id": 1248,
                    "qualifiedName": "T",
                    "package": "@types/react",
                    "name": "T"
                  }
                },
                "templateType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "literal",
                    "value": null
                  },
                  "extendsType": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "qualifiedName": "K",
                      "package": "@types/react",
                      "name": "K"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 1248,
                      "qualifiedName": "T",
                      "package": "@types/react",
                      "name": "T"
                    }
                  },
                  "trueType": {
                    "type": "reference",
                    "id": 1249,
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "qualifiedName": "K",
                              "package": "@types/react",
                              "name": "K"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 1248,
                              "qualifiedName": "T",
                              "package": "@types/react",
                              "name": "T"
                            }
                          },
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "React.Validator",
                    "package": "@types/react",
                    "name": "Validator"
                  },
                  "falseType": {
                    "type": "conditional",
                    "checkType": {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    "extendsType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "qualifiedName": "K",
                        "package": "@types/react",
                        "name": "K"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 1248,
                        "qualifiedName": "T",
                        "package": "@types/react",
                        "name": "T"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "id": 1249,
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "reference",
                                "qualifiedName": "K",
                                "package": "@types/react",
                                "name": "K"
                              },
                              "objectType": {
                                "type": "reference",
                                "id": 1248,
                                "qualifiedName": "T",
                                "package": "@types/react",
                                "name": "T"
                              }
                            },
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "undefined"
                            }
                          ]
                        }
                      ],
                      "qualifiedName": "React.Validator",
                      "package": "@types/react",
                      "name": "Validator"
                    },
                    "falseType": {
                      "type": "reference",
                      "id": 1249,
                      "typeArguments": [
                        {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "qualifiedName": "K",
                            "package": "@types/react",
                            "name": "K"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 1248,
                            "qualifiedName": "T",
                            "package": "@types/react",
                            "name": "T"
                          }
                        }
                      ],
                      "qualifiedName": "React.Validator",
                      "package": "@types/react",
                      "name": "Validator"
                    }
                  }
                },
                "optionalModifier": "+"
              }
            },
            {
              "id": 1168,
              "name": "Error",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1033,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "ErrorConstructor",
                "package": "typescript",
                "name": "ErrorConstructor"
              },
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 564,
                  "name": "InvalidTimeError"
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Classes",
              "kind": 128,
              "children": [987]
            },
            {
              "title": "Interfaces",
              "kind": 256,
              "children": [
                1106, 1081, 1241, 1154, 1188, 1169, 1173, 1235, 974, 1093, 1217, 1213, 1175, 1225,
                1231, 726, 733, 721, 1251
              ]
            },
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [
                1223, 1161, 966, 965, 1164, 1221, 718, 719, 1167, 717, 732, 1159, 1249, 1247
              ]
            },
            {
              "title": "Variables",
              "kind": 32,
              "children": [1168]
            }
          ]
        },
        {
          "id": 20,
          "name": "NodeLabeled",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Interface for items that provide a React node label (anything that React can render). Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
            "text": "See [isNodeLabeled](doc:isNodeLabeled) and [getNodeLabel](doc:getNodeLabel).\n",
            "tags": [
              {
                "tag": "extract-docs",
                "text": ""
              },
              {
                "tag": "menu-group",
                "text": "Labeled\n"
              }
            ]
          },
          "children": [
            {
              "id": 21,
              "name": "getNodeLabel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 22,
                  "name": "getNodeLabel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the node label for this item. This can be anything renderable by React.",
                    "text": "See [isNodeLabeled](doc:isNodeLabeled) to test for support and [getNodeLabel](doc:getNodeLabel) for easiest way\nto get the label.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 717,
                    "qualifiedName": "React.ReactNode",
                    "package": "@types/react",
                    "name": "ReactNode"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [21]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
              "line": 29,
              "character": 17
            }
          ]
        },
        {
          "id": 17,
          "name": "TextLabeled",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Interface for items that provide a plain text label. Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
            "text": "See [isTextLabeled](doc:isTextLabeled) and [getTextLabel](doc:getTextLabel).\n",
            "tags": [
              {
                "tag": "extract-docs",
                "text": ""
              },
              {
                "tag": "menu-group",
                "text": "Labeled\n"
              }
            ]
          },
          "children": [
            {
              "id": 18,
              "name": "getLabel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 19,
                  "name": "getLabel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the plain text label for this item. This must return a string",
                    "text": "See [isTextLabeled](doc:isTextLabeled) to test for support and [getTextLabel](doc:getTextLabel) for easiest way\nto get the label.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [18]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
              "line": 10,
              "character": 17
            }
          ]
        },
        {
          "id": 11,
          "name": "getNodeLabel",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
              "line": 82,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 12,
              "name": "getNodeLabel",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get a React node label from an item",
                "text": "If item implements `getNodeLabel` that will be used otherwise `getLabel` will be used.\n\nIf neither are defined an error is thrown. To conditional call this check if labeled first\nwith `isLabeled`.\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Labeled\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 13,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 717,
                "qualifiedName": "React.ReactNode",
                "package": "@types/react",
                "name": "React.ReactNode"
              }
            }
          ]
        },
        {
          "id": 14,
          "name": "getTextLabel",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
              "line": 103,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 15,
              "name": "getTextLabel",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get a plain text label from an item",
                "text": "If does not implement TextLabeled an error is thrown. To conditional call this check if labeled first\nwith `isTextLabeled`.\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Labeled\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 16,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 8,
          "name": "isLabeled",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
              "line": 67,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 9,
              "name": "isLabeled",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check if item supports either text or React node labels",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Labeled\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 10,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "item",
                "asserts": false,
                "targetType": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 17,
                      "name": "TextLabeled"
                    },
                    {
                      "type": "reference",
                      "id": 20,
                      "name": "NodeLabeled"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 5,
          "name": "isNodeLabeled",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
              "line": 55,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 6,
              "name": "isNodeLabeled",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check if a value conforms to NodeLabeled",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Labeled\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 7,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "item",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 20,
                  "name": "NodeLabeled"
                }
              }
            }
          ]
        },
        {
          "id": 2,
          "name": "isTextLabeled",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
              "line": 43,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "isTextLabeled",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check if a value conforms to TextLabeled",
                "tags": [
                  {
                    "tag": "menu-group",
                    "text": "Labeled\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 4,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "item",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 17,
                  "name": "TextLabeled"
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [716]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [20, 17]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [11, 14, 8, 5, 2]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
          "line": 10,
          "character": 0
        }
      ]
    },
    {
      "id": 23,
      "name": "comparison",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 28,
          "name": "isDeepEqual",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/comparison.ts",
              "line": 37,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 29,
              "name": "isDeepEqual",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Compare values deeply for equality. If an object has an `isEqual` method this\nwill be called otherwise values will be compared deeply."
              },
              "parameters": [
                {
                  "id": 30,
                  "name": "a",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 31,
                  "name": "b",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 24,
          "name": "isEqual",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/comparison.ts",
              "line": 29,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 25,
              "name": "isEqual",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Compare to values for equality. If has an `isEqual` method this will be called\notherwise values will be compared shallowly."
              },
              "parameters": [
                {
                  "id": 26,
                  "name": "a",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 27,
                  "name": "b",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [28, 24]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/comparison.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 32,
      "name": "identifiable",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1265,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1267,
              "name": "CompoundId",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
                  "line": 2,
                  "character": 5
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1268,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
                      "line": 2,
                      "character": 18
                    }
                  ],
                  "indexSignature": {
                    "id": 1269,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 1270,
                        "name": "fieldName",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 1266,
                      "name": "SingleId"
                    }
                  }
                }
              }
            },
            {
              "id": 1266,
              "name": "SingleId",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
                  "line": 1,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [1267, 1266]
            }
          ]
        },
        {
          "id": 55,
          "name": "Identifiable",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Interface for types that we can automatically extract a unique identifier from.",
            "text": "To confirm to the interface provide a `_key` property or getter.\n\n[ViewModelFactory](doc:viewModelFactory) conforms to this so anything that expects an Identifiable\nwill accept a ViewModel.\n\nImplementing this can save you having to pass explicit functions to identify an item in other parts of the system\n(eg. for [AsyncChoices](doc:AsyncChoices) or [useAsyncValue](doc:useAsyncValue))\n",
            "tags": [
              {
                "tag": "extract-docs",
                "text": ""
              },
              {
                "tag": "menu-group",
                "text": "Identifiable\n"
              }
            ]
          },
          "children": [
            {
              "id": 56,
              "name": "_key",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
                  "line": 20,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 54,
                "name": "Id"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [56]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
              "line": 19,
              "character": 17
            }
          ]
        },
        {
          "id": 54,
          "name": "Id",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
              "line": 3,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 1266,
                "name": "SingleId"
              },
              {
                "type": "reference",
                "id": 1267,
                "name": "CompoundId"
              }
            ]
          }
        },
        {
          "id": 36,
          "name": "getId",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
              "line": 45,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 37,
              "name": "getId",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get the id for an object. If object doesn't implement Identifiable then `fallbackGetId`\nmust be provided or an error will be thrown.",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Identifiable\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 38,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Any value to get ID for"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 39,
                  "name": "fallbackGetId",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Function to return id for `item` if it doesn't implement Identifiable\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 40,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 41,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 42,
                              "name": "item",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 54,
                            "name": "Id"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 54,
                "name": "Id"
              }
            }
          ]
        },
        {
          "id": 43,
          "name": "hashId",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
              "line": 64,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 44,
              "name": "hashId",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Create string representation of ID suitable for strict equality\nchecking or as a key into an object / map.",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Identifiable\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 45,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 54,
                    "name": "Id"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 33,
          "name": "isIdentifiable",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
              "line": 29,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 34,
              "name": "isIdentifiable",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check if a value conforms to Identifiable",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Identifiable\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 35,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "item",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 55,
                  "name": "Identifiable"
                }
              }
            }
          ]
        },
        {
          "id": 46,
          "name": "isSameById",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
              "line": 89,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 47,
              "name": "isSameById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check if two objects share the same ID.",
                "text": "NOTE: Doesn't compare objects for equality; only their id\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Identifiable\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 48,
                  "name": "item1",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 49,
                  "name": "item2",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 50,
                  "name": "fallbackGetId",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 51,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 52,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 53,
                              "name": "item",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 54,
                            "name": "Id"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1265]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [55]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [54]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [36, 43, 33, 46]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/identifiable.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 57,
      "name": "misc",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 58,
          "name": "isPromise",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/misc.ts",
              "line": 4,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 59,
              "name": "isPromise",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Utility to check if a value is a promise"
              },
              "parameters": [
                {
                  "id": 60,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "value",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ],
                  "qualifiedName": "Promise",
                  "package": "typescript",
                  "name": "Promise"
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [58]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/misc.ts",
          "line": 4,
          "character": 0
        }
      ]
    },
    {
      "id": 61,
      "name": "pagination/CursorPaginator",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1272,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1273,
              "name": "Record",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "Construct a type with a set of properties K of type T"
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1559,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1274,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                },
                {
                  "id": 1275,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "mapped",
                "parameter": "P",
                "parameterType": {
                  "type": "reference",
                  "id": 1274,
                  "qualifiedName": "K",
                  "package": "typescript",
                  "name": "K"
                },
                "templateType": {
                  "type": "reference",
                  "id": 1275,
                  "qualifiedName": "T",
                  "package": "typescript",
                  "name": "T"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [1273]
            }
          ]
        },
        {
          "id": 70,
          "name": "CursorPaginator",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Cursor based paginator",
            "text": "Expects a `nextCursor`, `previousCursor` and optional `pageSize` key in the response. See\n[getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n",
            "tags": [
              {
                "tag": "menu-group",
                "text": "Pagination"
              },
              {
                "tag": "extract-docs",
                "text": "\n"
              }
            ]
          },
          "originalName": "default",
          "children": [
            {
              "id": 74,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "comment": {},
              "signatures": [
                {
                  "id": 75,
                  "name": "new CursorPaginator",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "see",
                        "text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 76,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    },
                    {
                      "id": 77,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 70,
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 474,
                    "name": "default.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 473,
                "name": "default.constructor"
              }
            },
            {
              "id": 116,
              "name": "currentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 100,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 62,
                "name": "CursorPaginationState"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 481,
                "name": "default.currentState"
              }
            },
            {
              "id": 117,
              "name": "internalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 101,
                  "character": 4
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 66,
                    "name": "InternalCursorPaginatorState"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 118,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 119,
                          "name": "responseIsSet",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                              "line": 101,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [119]
                        }
                      ]
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 482,
                "name": "default.internalState"
              }
            },
            {
              "id": 120,
              "name": "setCurrentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 102,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 121,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 122,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 123,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 62,
                            "name": "CursorPaginationState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 485,
                "name": "default.setCurrentState"
              }
            },
            {
              "id": 124,
              "name": "setInternalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 103,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 125,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 126,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 127,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 66,
                            "name": "InternalCursorPaginatorState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 489,
                "name": "default.setInternalState"
              }
            },
            {
              "id": 82,
              "name": "cursor",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 45,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 83,
                  "name": "cursor",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current cursor. This will be null before the first response is received."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 78,
              "name": "nextCursor",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 31,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 79,
                  "name": "nextCursor",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The next cursor (if any)"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 84,
              "name": "pageSize",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 52,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 85,
                  "name": "pageSize",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current page size, if known"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 80,
              "name": "previousCursor",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 38,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 81,
                  "name": "previousCursor",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "THe previous cursor (if any)"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 128,
              "name": "responseIsSet",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "comment": {
                "shortText": "True once setResponse has been called and pagination state is known."
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 108,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 129,
                  "name": "responseIsSet",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "True once setResponse has been called and pagination state is known."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Paginator.responseIsSet"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 493,
                "name": "default.responseIsSet"
              }
            },
            {
              "id": 94,
              "name": "first",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 102,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 95,
                  "name": "first",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the first page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 506,
                    "name": "default.first"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 505,
                "name": "default.first"
              }
            },
            {
              "id": 92,
              "name": "firstState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 92,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 93,
                  "name": "firstState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page",
                    "text": "Does not transition state. To transition state call `first` instead.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 62,
                    "name": "CursorPaginationState"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 508,
                    "name": "default.firstState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 507,
                "name": "default.firstState"
              }
            },
            {
              "id": 104,
              "name": "getRequestInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 158,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 105,
                  "name": "getRequestInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
                  },
                  "parameters": [
                    {
                      "id": 106,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 392,
                    "name": "PaginatorRequestOptions"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 500,
                    "name": "default.getRequestInit"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 499,
                "name": "default.getRequestInit"
              }
            },
            {
              "id": 114,
              "name": "hasNextPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 200,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 115,
                  "name": "hasNextPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns true if there's more results after the current page"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 518,
                    "name": "default.hasNextPage"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 517,
                "name": "default.hasNextPage"
              }
            },
            {
              "id": 98,
              "name": "next",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 125,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 99,
                  "name": "next",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the next page.",
                    "text": "If the last next is not yet known because results haven't been returned this function\ndoes nothing.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 510,
                    "name": "default.next"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 509,
                "name": "default.next"
              }
            },
            {
              "id": 96,
              "name": "nextState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 112,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 97,
                  "name": "nextState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page. If the next page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
                    "text": "Does not transition state. To transition state call `next` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 62,
                        "name": "CursorPaginationState"
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 512,
                    "name": "default.nextState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 511,
                "name": "default.nextState"
              }
            },
            {
              "id": 86,
              "name": "pageSizeState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 61,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 87,
                  "name": "pageSizeState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the specified page size",
                    "text": "Does not transition state. To transition state call `setPageSize` instead.\n"
                  },
                  "parameters": [
                    {
                      "id": 88,
                      "name": "pageSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 62,
                    "name": "CursorPaginationState"
                  }
                }
              ]
            },
            {
              "id": 102,
              "name": "previous",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 151,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 103,
                  "name": "previous",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the previous page.",
                    "text": "If the previous page is not yet known because results haven't been returned this function\ndoes nothing.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 514,
                    "name": "default.previous"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 513,
                "name": "default.previous"
              }
            },
            {
              "id": 100,
              "name": "previousState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 138,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 101,
                  "name": "previousState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the previous page. If the previous page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
                    "text": "Does not transition state. To transition state call `previous` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 62,
                        "name": "CursorPaginationState"
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 516,
                    "name": "default.previousState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 515,
                "name": "default.previousState"
              }
            },
            {
              "id": 130,
              "name": "replaceStateControllers",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 151,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 131,
                  "name": "replaceStateControllers",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
                    "text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
                  },
                  "parameters": [
                    {
                      "id": 132,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 133,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 496,
                    "name": "default.replaceStateControllers"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 495,
                "name": "default.replaceStateControllers"
              }
            },
            {
              "id": 89,
              "name": "setPageSize",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 83,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 90,
                  "name": "setPageSize",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set the page size"
                  },
                  "parameters": [
                    {
                      "id": 91,
                      "name": "pageSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 107,
              "name": "setResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 179,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 108,
                  "name": "setResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sets the internal data based on response. Expects `nextCursor`, `previousCursor` and optionally `pageSize` to be in\nresponse data.",
                    "text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
                  },
                  "parameters": [
                    {
                      "id": 109,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 110,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 111,
                              "name": "nextCursor",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                                  "line": 184,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 113,
                              "name": "pageSize",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                                  "line": 186,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 112,
                              "name": "previousCursor",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                                  "line": 185,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [111, 113, 112]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 503,
                    "name": "default.setResponse"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 502,
                "name": "default.setResponse"
              }
            },
            {
              "id": 71,
              "name": "getPaginationState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 213,
                  "character": 11
                }
              ],
              "signatures": [
                {
                  "id": 72,
                  "name": "getPaginationState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Expected pagination state in the shape:\n{\n    next: null|'http://example.com/?cursor=abc123',\n    previous: null|'http://example.com/?cursor=abc123',\n    results: Array\n}"
                  },
                  "parameters": [
                    {
                      "id": 73,
                      "name": "requestDetails",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 397,
                        "name": "PaginationRequestDetails"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": false
                      },
                      {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [74]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [116, 117, 120, 124]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [82, 78, 84, 80, 128]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [94, 92, 104, 114, 98, 96, 86, 102, 100, 130, 89, 107, 71]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
              "line": 24,
              "character": 21
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 472,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 62,
                  "name": "CursorPaginationState"
                },
                {
                  "type": "reference",
                  "id": 66,
                  "name": "InternalCursorPaginatorState"
                }
              ],
              "name": "default"
            }
          ]
        },
        {
          "id": 62,
          "name": "CursorPaginationState",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
              "line": 4,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 63,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 65,
                  "name": "cursor",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                      "line": 6,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 64,
                  "name": "pageSize",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                      "line": 5,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [65, 64]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 4,
                  "character": 36
                }
              ]
            }
          }
        },
        {
          "id": 66,
          "name": "InternalCursorPaginatorState",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
              "line": 9,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 67,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 68,
                  "name": "nextCursor",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                      "line": 10,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 69,
                  "name": "previousCursor",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                      "line": 11,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [68, 69]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
                  "line": 9,
                  "character": 43
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1272]
        },
        {
          "title": "Classes",
          "kind": 128,
          "children": [70]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [62, 66]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 134,
      "name": "pagination/InferredPaginator",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 136,
          "name": "InferredPaginator",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Class that infers the specific type of pagination based on the response.",
            "text": "Supports [PageNumberPaginator](doc:PageNumberPaginator), [LimitOffsetPaginator](LimitOffsetPaginator) and\n[CursorPaginator](doc:CursorPaginator) with the following rules based on the response data:\n\n* If response contains `nextCursor` or `previousCursor` value paginator is set to [CursorPaginator](doc:CursorPaginator)\n* If response contains `limit` then paginator is set to  [LimitOffsetPaginator](LimitOffsetPaginator)\n* If response contains `total` then paginator is set to [PageNumberPaginator](doc:PageNumberPaginator)\n",
            "tags": [
              {
                "tag": "menu-group",
                "text": "Pagination"
              },
              {
                "tag": "extract-docs",
                "text": "\n"
              }
            ]
          },
          "originalName": "default",
          "children": [
            {
              "id": 140,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 172,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 141,
                  "name": "new InferredPaginator",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "see",
                        "text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 142,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 143,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 136,
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 144,
              "name": "__paginator",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 26,
                  "character": 4
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 70,
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 318,
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 242,
                    "name": "default"
                  }
                ]
              }
            },
            {
              "id": 169,
              "name": "currentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 164,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 135,
                "name": "PaginatorState"
              },
              "implementationOf": {
                "type": "reference",
                "id": 405,
                "name": "PaginatorInterface.currentState"
              }
            },
            {
              "id": 170,
              "name": "internalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 165,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 1273,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              },
              "implementationOf": {
                "type": "reference",
                "id": 406,
                "name": "PaginatorInterface.internalState"
              }
            },
            {
              "id": 171,
              "name": "setCurrentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 166,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 172,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 173,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 174,
                          "name": "nextValue",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 135,
                            "name": "PaginatorState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "implementationOf": {
                "type": "reference",
                "id": 407,
                "name": "PaginatorInterface.setCurrentState"
              }
            },
            {
              "id": 175,
              "name": "setInternalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 167,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 176,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 177,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 178,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 179,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 180,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 181,
                                      "name": "internalState",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "id": 1273,
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "any"
                                          }
                                        ],
                                        "qualifiedName": "Record",
                                        "package": "typescript",
                                        "name": "Record"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1273,
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "any"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ],
                                    "qualifiedName": "Record",
                                    "package": "typescript",
                                    "name": "Record"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "implementationOf": {
                "type": "reference",
                "id": 410,
                "name": "PaginatorInterface.setInternalState"
              }
            },
            {
              "id": 163,
              "name": "cursor",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 128,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 164,
                  "name": "cursor",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 155,
              "name": "limit",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 81,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 156,
                  "name": "limit",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current limit. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 159,
              "name": "nextCursor",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 104,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 160,
                  "name": "nextCursor",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The next cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 157,
              "name": "offset",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 94,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 158,
                  "name": "offset",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current offset. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 165,
              "name": "page",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 141,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 166,
                  "name": "page",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current page number. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 167,
              "name": "pageSize",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 154,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 168,
                  "name": "pageSize",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current page size. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 147,
              "name": "paginator",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 34,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 148,
                  "name": "paginator",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "id": 70,
                        "name": "default"
                      },
                      {
                        "type": "reference",
                        "id": 318,
                        "name": "default"
                      },
                      {
                        "type": "reference",
                        "id": 242,
                        "name": "default"
                      }
                    ]
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 149,
                  "name": "paginator",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
                  },
                  "parameters": [
                    {
                      "id": 150,
                      "name": "paginator",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "id": 70,
                            "name": "default"
                          },
                          {
                            "type": "reference",
                            "id": 318,
                            "name": "default"
                          },
                          {
                            "type": "reference",
                            "id": 242,
                            "name": "default"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 161,
              "name": "previousCursor",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 114,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 162,
                  "name": "previousCursor",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The previous cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 145,
              "name": "responseIsSet",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 27,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 146,
                  "name": "responseIsSet",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 413,
                    "name": "PaginatorInterface.responseIsSet"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 413,
                "name": "PaginatorInterface.responseIsSet"
              }
            },
            {
              "id": 151,
              "name": "total",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 55,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 152,
                  "name": "total",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The total number of records available. Not valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 153,
              "name": "totalPages",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 68,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 154,
                  "name": "totalPages",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The total number of records available. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 220,
              "name": "first",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 416,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 221,
                  "name": "first",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the first page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 417,
                    "name": "PaginatorInterface.first"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 416,
                "name": "PaginatorInterface.first"
              }
            },
            {
              "id": 218,
              "name": "firstState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 402,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 219,
                  "name": "firstState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page",
                    "text": "Does not transition state. To transition state call `first` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 62,
                        "name": "CursorPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 311,
                        "name": "PageNumberPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 419,
                    "name": "PaginatorInterface.firstState"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 418,
                "name": "PaginatorInterface.firstState"
              }
            },
            {
              "id": 228,
              "name": "getRequestInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 472,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 229,
                  "name": "getRequestInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 230,
                      "name": "currentInit",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 392,
                    "name": "PaginatorRequestOptions"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 429,
                    "name": "PaginatorInterface.getRequestInit"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 428,
                "name": "PaginatorInterface.getRequestInit"
              }
            },
            {
              "id": 226,
              "name": "hasNextPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 465,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 227,
                  "name": "hasNextPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns true if there's more results after the current page"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 415,
                    "name": "PaginatorInterface.hasNextPage"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 414,
                "name": "PaginatorInterface.hasNextPage"
              }
            },
            {
              "id": 224,
              "name": "last",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 450,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 225,
                  "name": "last",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
                    "text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 222,
              "name": "lastState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 432,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 223,
                  "name": "lastState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page",
                    "text": "Does not transition state. To transition state call `last` instead.\n\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 311,
                        "name": "PageNumberPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 198,
              "name": "limitState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 282,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 199,
                  "name": "limitState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
                    "text": "See [LimitOffsetPaginator.limitState](doc:LimitOffsetPaginator#method-limitState)\n"
                  },
                  "parameters": [
                    {
                      "id": 200,
                      "name": "limit",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 212,
              "name": "next",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 360,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 213,
                  "name": "next",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the next page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 421,
                    "name": "PaginatorInterface.next"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 420,
                "name": "PaginatorInterface.next"
              }
            },
            {
              "id": 210,
              "name": "nextState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 346,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 211,
                  "name": "nextState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the next page",
                    "text": "Does not transition state. To transition state call `next` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 62,
                        "name": "CursorPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 311,
                        "name": "PageNumberPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 423,
                    "name": "PaginatorInterface.nextState"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 422,
                "name": "PaginatorInterface.nextState"
              }
            },
            {
              "id": 204,
              "name": "offsetState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 314,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 205,
                  "name": "offsetState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
                    "text": "See [LimitOffsetPaginator.offsetState](doc:LimitOffsetPaginator#method-offsetState)\n"
                  },
                  "parameters": [
                    {
                      "id": 206,
                      "name": "offset",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 192,
              "name": "pageSizeState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 248,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 193,
                  "name": "pageSizeState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
                    "text": "See [PageNumberPaginator.pageSizeState](doc:PageNumberPaginator#method-pageSizeState)\n"
                  },
                  "parameters": [
                    {
                      "id": 194,
                      "name": "pageSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 62,
                        "name": "CursorPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 311,
                        "name": "PageNumberPaginationState"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 186,
              "name": "pageState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 216,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 187,
                  "name": "pageState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
                    "text": "See [PageNumberPaginator.pageState](doc:PageNumberPaginator#method-pageState)\n"
                  },
                  "parameters": [
                    {
                      "id": 188,
                      "name": "page",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 311,
                        "name": "PageNumberPaginationState"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 216,
              "name": "previous",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 388,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 217,
                  "name": "previous",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the previous page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 425,
                    "name": "PaginatorInterface.previous"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 424,
                "name": "PaginatorInterface.previous"
              }
            },
            {
              "id": 214,
              "name": "previousState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 374,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 215,
                  "name": "previousState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the previous page",
                    "text": "Does not transition state. To transition state call `previous` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 62,
                        "name": "CursorPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 311,
                        "name": "PageNumberPaginationState"
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 427,
                    "name": "PaginatorInterface.previousState"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 426,
                "name": "PaginatorInterface.previousState"
              }
            },
            {
              "id": 182,
              "name": "replaceStateControllers",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 186,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 183,
                  "name": "replaceStateControllers",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "see",
                        "text": "`Paginator.replaceStateControllers`\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 184,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ]
                      }
                    },
                    {
                      "id": 185,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 435,
                    "name": "PaginatorInterface.replaceStateControllers"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 434,
                "name": "PaginatorInterface.replaceStateControllers"
              }
            },
            {
              "id": 201,
              "name": "setLimit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 297,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 202,
                  "name": "setLimit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
                    "text": "See [LimitOffsetPaginator.setLimit](doc:LimitOffsetPaginator#method-setLimit)\n"
                  },
                  "parameters": [
                    {
                      "id": 203,
                      "name": "limit",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 207,
              "name": "setOffset",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 329,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 208,
                  "name": "setOffset",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
                    "text": "See [LimitOffsetPaginator.setOffset](doc:LimitOffsetPaginator#method-setOffset)\n"
                  },
                  "parameters": [
                    {
                      "id": 209,
                      "name": "offset",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 189,
              "name": "setPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 231,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 190,
                  "name": "setPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
                    "text": "See [PageNumberPaginator.setPage](doc:PageNumberPaginator#method-setPage)\n"
                  },
                  "parameters": [
                    {
                      "id": 191,
                      "name": "page",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 195,
              "name": "setPageSize",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 265,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 196,
                  "name": "setPageSize",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
                    "text": "See [PageNumberPaginator.setPageSize](doc:PageNumberPaginator#method-setPageSize)\n"
                  },
                  "parameters": [
                    {
                      "id": 197,
                      "name": "pageSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 231,
              "name": "setResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 492,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 232,
                  "name": "setResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sets the internal data based on response. This is where the paginator is inferred based on values in the\n`response`.",
                    "text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
                  },
                  "parameters": [
                    {
                      "id": 233,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 432,
                    "name": "PaginatorInterface.setResponse"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 431,
                "name": "PaginatorInterface.setResponse"
              }
            },
            {
              "id": 137,
              "name": "getPaginationState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
                  "line": 518,
                  "character": 11
                }
              ],
              "signatures": [
                {
                  "id": 138,
                  "name": "getPaginationState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 139,
                      "name": "requestDetails",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 397,
                        "name": "PaginationRequestDetails"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": false
                      },
                      {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [140]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [144, 169, 170, 171, 175]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [163, 155, 159, 157, 165, 167, 147, 161, 145, 151, 153]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                220, 218, 228, 226, 224, 222, 198, 212, 210, 204, 192, 186, 216, 214, 182, 201, 207,
                189, 195, 231, 137
              ]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
              "line": 24,
              "character": 21
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "id": 404,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 135,
                  "name": "PaginatorState"
                },
                {
                  "type": "reference",
                  "id": 1273,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ],
                  "qualifiedName": "Record",
                  "package": "typescript",
                  "name": "Record"
                }
              ],
              "name": "PaginatorInterface"
            }
          ]
        },
        {
          "id": 135,
          "name": "PaginatorState",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
              "line": 6,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 311,
                "name": "PageNumberPaginationState"
              },
              {
                "type": "reference",
                "id": 62,
                "name": "CursorPaginationState"
              },
              {
                "type": "reference",
                "id": 235,
                "name": "LimitOffsetPaginationState"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [136]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [135]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 234,
      "name": "pagination/LimitOffsetPaginator",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 242,
          "name": "LimitOffsetPaginator",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Limit & offset based paginator",
            "text": "Expects a `limit` key in the response. See [getPaginationState](doc:getPaginationState) for how\nto customise this if your backend implementation differs.\n",
            "tags": [
              {
                "tag": "menu-group",
                "text": "Pagination"
              },
              {
                "tag": "extract-docs",
                "text": "\n"
              }
            ]
          },
          "originalName": "default",
          "children": [
            {
              "id": 246,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "comment": {},
              "signatures": [
                {
                  "id": 247,
                  "name": "new LimitOffsetPaginator",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "see",
                        "text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 248,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    },
                    {
                      "id": 249,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 242,
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 474,
                    "name": "default.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 473,
                "name": "default.constructor"
              }
            },
            {
              "id": 292,
              "name": "currentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 100,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 235,
                "name": "LimitOffsetPaginationState"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 481,
                "name": "default.currentState"
              }
            },
            {
              "id": 293,
              "name": "internalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 101,
                  "character": 4
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 239,
                    "name": "InternalLimitOffsetPaginationState"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 294,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 295,
                          "name": "responseIsSet",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                              "line": 101,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [295]
                        }
                      ]
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 482,
                "name": "default.internalState"
              }
            },
            {
              "id": 296,
              "name": "setCurrentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 102,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 297,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 298,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 299,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 235,
                            "name": "LimitOffsetPaginationState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 485,
                "name": "default.setCurrentState"
              }
            },
            {
              "id": 300,
              "name": "setInternalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 103,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 301,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 302,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 303,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 239,
                            "name": "InternalLimitOffsetPaginationState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 489,
                "name": "default.setInternalState"
              }
            },
            {
              "id": 252,
              "name": "limit",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 36,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 253,
                  "name": "limit",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current limit"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 254,
              "name": "offset",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 47,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 255,
                  "name": "offset",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current offset"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ]
            },
            {
              "id": 304,
              "name": "responseIsSet",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "comment": {
                "shortText": "True once setResponse has been called and pagination state is known."
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 108,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 305,
                  "name": "responseIsSet",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "True once setResponse has been called and pagination state is known."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Paginator.responseIsSet"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 493,
                "name": "default.responseIsSet"
              }
            },
            {
              "id": 250,
              "name": "total",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 29,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 251,
                  "name": "total",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The total number of records available. This will be null before the first response is received."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 278,
              "name": "first",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 169,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 279,
                  "name": "first",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the first page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 506,
                    "name": "default.first"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 505,
                "name": "default.first"
              }
            },
            {
              "id": 276,
              "name": "firstState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 160,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 277,
                  "name": "firstState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page",
                    "text": "Does not transition state. To transition state call `first` instead.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 235,
                    "name": "LimitOffsetPaginationState"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 508,
                    "name": "default.firstState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 507,
                "name": "default.firstState"
              }
            },
            {
              "id": 284,
              "name": "getRequestInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 204,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 285,
                  "name": "getRequestInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
                  },
                  "parameters": [
                    {
                      "id": 286,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 392,
                    "name": "PaginatorRequestOptions"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 500,
                    "name": "default.getRequestInit"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 499,
                "name": "default.getRequestInit"
              }
            },
            {
              "id": 290,
              "name": "hasNextPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 234,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 291,
                  "name": "hasNextPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns true if there's more results after the current page"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 518,
                    "name": "default.hasNextPage"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 517,
                "name": "default.hasNextPage"
              }
            },
            {
              "id": 282,
              "name": "last",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 196,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 283,
                  "name": "last",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the last page.",
                    "text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 280,
              "name": "lastState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 179,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 281,
                  "name": "lastState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
                    "text": "Does not transition state. To transition state call `last` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 256,
              "name": "limitState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 60,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 257,
                  "name": "limitState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the specified limit",
                    "text": "Does not transition state. To transition state call `setLimit` instead.\n"
                  },
                  "parameters": [
                    {
                      "id": 258,
                      "name": "limit",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 235,
                    "name": "LimitOffsetPaginationState"
                  }
                }
              ]
            },
            {
              "id": 270,
              "name": "next",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 126,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 271,
                  "name": "next",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the next page"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 510,
                    "name": "default.next"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 509,
                "name": "default.next"
              }
            },
            {
              "id": 268,
              "name": "nextState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 116,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 269,
                  "name": "nextState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the next page",
                    "text": "Does not transition state. To transition state call `next` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 512,
                    "name": "default.nextState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 511,
                "name": "default.nextState"
              }
            },
            {
              "id": 262,
              "name": "offsetState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 92,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 263,
                  "name": "offsetState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the specified offset",
                    "text": "Does not transition state. To transition state call `offsetState` instead.\n"
                  },
                  "parameters": [
                    {
                      "id": 264,
                      "name": "offset",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 235,
                    "name": "LimitOffsetPaginationState"
                  }
                }
              ]
            },
            {
              "id": 274,
              "name": "previous",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 148,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 275,
                  "name": "previous",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the previous page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 514,
                    "name": "default.previous"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 513,
                "name": "default.previous"
              }
            },
            {
              "id": 272,
              "name": "previousState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 138,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 273,
                  "name": "previousState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the previous page",
                    "text": "Does not transition state. To transition state call `previous` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 235,
                        "name": "LimitOffsetPaginationState"
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 516,
                    "name": "default.previousState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 515,
                "name": "default.previousState"
              }
            },
            {
              "id": 306,
              "name": "replaceStateControllers",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 151,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 307,
                  "name": "replaceStateControllers",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
                    "text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
                  },
                  "parameters": [
                    {
                      "id": 308,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 309,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 496,
                    "name": "default.replaceStateControllers"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 495,
                "name": "default.replaceStateControllers"
              }
            },
            {
              "id": 259,
              "name": "setLimit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 83,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 260,
                  "name": "setLimit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set the limit"
                  },
                  "parameters": [
                    {
                      "id": 261,
                      "name": "limit",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 265,
              "name": "setOffset",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 107,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 266,
                  "name": "setOffset",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 267,
                      "name": "offset",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 287,
              "name": "setResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 224,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 288,
                  "name": "setResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sets the internal data based on response. Expects `limit` to be in response data.",
                    "text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
                  },
                  "parameters": [
                    {
                      "id": 289,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 503,
                    "name": "default.setResponse"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 502,
                "name": "default.setResponse"
              }
            },
            {
              "id": 243,
              "name": "getPaginationState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 241,
                  "character": 11
                }
              ],
              "signatures": [
                {
                  "id": 244,
                  "name": "getPaginationState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 245,
                      "name": "requestDetails",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 397,
                        "name": "PaginationRequestDetails"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": false
                      },
                      {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [246]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [292, 293, 296, 300]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [252, 254, 304, 250]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                278, 276, 284, 290, 282, 280, 256, 270, 268, 262, 274, 272, 306, 259, 265, 287, 243
              ]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
              "line": 22,
              "character": 21
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 472,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 235,
                  "name": "LimitOffsetPaginationState"
                },
                {
                  "type": "reference",
                  "id": 239,
                  "name": "InternalLimitOffsetPaginationState"
                }
              ],
              "name": "default"
            }
          ]
        },
        {
          "id": 239,
          "name": "InternalLimitOffsetPaginationState",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
              "line": 9,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 240,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 241,
                  "name": "total",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                      "line": 10,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [241]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 9,
                  "character": 49
                }
              ]
            }
          }
        },
        {
          "id": 235,
          "name": "LimitOffsetPaginationState",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
              "line": 4,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 236,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 237,
                  "name": "limit",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                      "line": 5,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                },
                {
                  "id": 238,
                  "name": "offset",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                      "line": 6,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [237, 238]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
                  "line": 4,
                  "character": 41
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [242]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [239, 235]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 310,
      "name": "pagination/PageNumberPaginator",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 318,
          "name": "PageNumberPaginator",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Page number based paginator",
            "text": "Expects a `total` or `count` key and optional `pageSize` key in the response. `total` or `count` should be the total\nnumber of records available.\n\nIf your backend differs from this (for example by storing the values in different named keys or in headers instead of\nthe response body) you can handle that by extending this class and implementing `getPaginationState` or\nby passing `getPaginationState` to [usePaginator](doc:usePaginator).\n",
            "tags": [
              {
                "tag": "menu-group",
                "text": "Pagination"
              },
              {
                "tag": "extract-docs",
                "text": "\n"
              }
            ]
          },
          "originalName": "default",
          "children": [
            {
              "id": 322,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "comment": {},
              "signatures": [
                {
                  "id": 323,
                  "name": "new PageNumberPaginator",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "see",
                        "text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 324,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    },
                    {
                      "id": 325,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 318,
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 474,
                    "name": "default.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 473,
                "name": "default.constructor"
              }
            },
            {
              "id": 373,
              "name": "currentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 100,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 311,
                "name": "PageNumberPaginationState"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 481,
                "name": "default.currentState"
              }
            },
            {
              "id": 374,
              "name": "internalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 101,
                  "character": 4
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 315,
                    "name": "InternalPageNumberPaginationState"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 375,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 376,
                          "name": "responseIsSet",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                              "line": 101,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [376]
                        }
                      ]
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 482,
                "name": "default.internalState"
              }
            },
            {
              "id": 377,
              "name": "setCurrentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 102,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 378,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 379,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 380,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 311,
                            "name": "PageNumberPaginationState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 485,
                "name": "default.setCurrentState"
              }
            },
            {
              "id": 381,
              "name": "setInternalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 103,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 382,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 383,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 384,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 315,
                            "name": "InternalPageNumberPaginationState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 489,
                "name": "default.setInternalState"
              }
            },
            {
              "id": 330,
              "name": "page",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 51,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 331,
                  "name": "page",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current page"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 332,
              "name": "pageSize",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 68,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 333,
                  "name": "pageSize",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The current page size (if known)."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 385,
              "name": "responseIsSet",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "comment": {
                "shortText": "True once setResponse has been called and pagination state is known."
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 108,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 386,
                  "name": "responseIsSet",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "True once setResponse has been called and pagination state is known."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Paginator.responseIsSet"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 493,
                "name": "default.responseIsSet"
              }
            },
            {
              "id": 326,
              "name": "total",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 31,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 327,
                  "name": "total",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The total number of results available on the backend"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 328,
              "name": "totalPages",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 41,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 329,
                  "name": "totalPages",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The total number of pages"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 356,
              "name": "first",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 171,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 357,
                  "name": "first",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the first page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 506,
                    "name": "default.first"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 505,
                "name": "default.first"
              }
            },
            {
              "id": 354,
              "name": "firstState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 164,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 355,
                  "name": "firstState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page",
                    "text": "Does not transition state. To transition state call `first` instead.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 311,
                    "name": "PageNumberPaginationState"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 508,
                    "name": "default.firstState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 507,
                "name": "default.firstState"
              }
            },
            {
              "id": 362,
              "name": "getRequestInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 204,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 363,
                  "name": "getRequestInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Adds `page` and `pageSize` into query options passed through to the endpoint"
                  },
                  "parameters": [
                    {
                      "id": 364,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 392,
                    "name": "PaginatorRequestOptions"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 500,
                    "name": "default.getRequestInit"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 499,
                "name": "default.getRequestInit"
              }
            },
            {
              "id": 371,
              "name": "hasNextPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 235,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 372,
                  "name": "hasNextPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns true if there's more results after the current page"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 518,
                    "name": "default.hasNextPage"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 517,
                "name": "default.hasNextPage"
              }
            },
            {
              "id": 360,
              "name": "last",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 194,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 361,
                  "name": "last",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
                    "text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 358,
              "name": "lastState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 180,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 359,
                  "name": "lastState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page",
                    "text": "Does not transition state. To transition state call `last` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 311,
                        "name": "PageNumberPaginationState"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 348,
              "name": "next",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 139,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 349,
                  "name": "next",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the next page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 510,
                    "name": "default.next"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 509,
                "name": "default.next"
              }
            },
            {
              "id": 346,
              "name": "nextState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 132,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 347,
                  "name": "nextState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the next page",
                    "text": "Does not transition state. To transition state call `next` instead.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 311,
                    "name": "PageNumberPaginationState"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 512,
                    "name": "default.nextState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 511,
                "name": "default.nextState"
              }
            },
            {
              "id": 340,
              "name": "pageSizeState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 100,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 341,
                  "name": "pageSizeState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the specified page size",
                    "text": "Does not transition state. To transition state call `setPageSize` instead.\n"
                  },
                  "parameters": [
                    {
                      "id": 342,
                      "name": "pageSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 311,
                    "name": "PageNumberPaginationState"
                  }
                }
              ]
            },
            {
              "id": 334,
              "name": "pageState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 81,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 335,
                  "name": "pageState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the specified page number",
                    "text": "Does not transition state. To transition state call `setPage` instead.\n"
                  },
                  "parameters": [
                    {
                      "id": 336,
                      "name": "page",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 311,
                    "name": "PageNumberPaginationState"
                  }
                }
              ]
            },
            {
              "id": 352,
              "name": "previous",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 155,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 353,
                  "name": "previous",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the previous page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 514,
                    "name": "default.previous"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 513,
                "name": "default.previous"
              }
            },
            {
              "id": 350,
              "name": "previousState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 148,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 351,
                  "name": "previousState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the previous page",
                    "text": "Does not transition state. To transition state call `previous` instead.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 311,
                    "name": "PageNumberPaginationState"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 516,
                    "name": "default.previousState"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 515,
                "name": "default.previousState"
              }
            },
            {
              "id": 387,
              "name": "replaceStateControllers",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 151,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 388,
                  "name": "replaceStateControllers",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
                    "text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
                  },
                  "parameters": [
                    {
                      "id": 389,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 390,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 496,
                    "name": "default.replaceStateControllers"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 495,
                "name": "default.replaceStateControllers"
              }
            },
            {
              "id": 337,
              "name": "setPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 91,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 338,
                  "name": "setPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Change to the specified page"
                  },
                  "parameters": [
                    {
                      "id": 339,
                      "name": "page",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 343,
              "name": "setPageSize",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 123,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 344,
                  "name": "setPageSize",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Change to the specified page size"
                  },
                  "parameters": [
                    {
                      "id": 345,
                      "name": "pageSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 365,
              "name": "setResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 225,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 366,
                  "name": "setResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sets the internal data based on response. Expects `total` and optionally `pageSize` to be in\nresponse data.",
                    "text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
                  },
                  "parameters": [
                    {
                      "id": 367,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 368,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 370,
                              "name": "pageSize",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                                  "line": 225,
                                  "character": 54
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 369,
                              "name": "total",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                                  "line": 225,
                                  "character": 39
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [370, 369]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 503,
                    "name": "default.setResponse"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 502,
                "name": "default.setResponse"
              }
            },
            {
              "id": 319,
              "name": "getPaginationState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 250,
                  "character": 11
                }
              ],
              "signatures": [
                {
                  "id": 320,
                  "name": "getPaginationState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Expects `decodedBody` to include a key `results` which should be an array of return records and a variable\n`count` or `total` that contains the total number of records available."
                  },
                  "parameters": [
                    {
                      "id": 321,
                      "name": "requestDetails",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 397,
                        "name": "PaginationRequestDetails"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": false
                      },
                      {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [322]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [373, 374, 377, 381]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [330, 332, 385, 326, 328]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                356, 354, 362, 371, 360, 358, 348, 346, 340, 334, 352, 350, 387, 337, 343, 365, 319
              ]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
              "line": 24,
              "character": 21
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 472,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 311,
                  "name": "PageNumberPaginationState"
                },
                {
                  "type": "reference",
                  "id": 315,
                  "name": "InternalPageNumberPaginationState"
                }
              ],
              "name": "default"
            }
          ]
        },
        {
          "id": 315,
          "name": "InternalPageNumberPaginationState",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
              "line": 7,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 316,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 317,
                  "name": "total",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                      "line": 8,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [317]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 7,
                  "character": 48
                }
              ]
            }
          }
        },
        {
          "id": 311,
          "name": "PageNumberPaginationState",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
              "line": 3,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 312,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 313,
                  "name": "page",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                      "line": 4,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                },
                {
                  "id": 314,
                  "name": "pageSize",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                      "line": 5,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [313, 314]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
                  "line": 3,
                  "character": 40
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [318]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [315, 311]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 391,
      "name": "pagination/Paginator",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1276,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1351,
              "name": "AbortSignal",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object."
              },
              "children": [
                {
                  "id": 1352,
                  "name": "aborted",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "comment": {
                    "shortText": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1885,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1353,
                  "name": "onabort",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1886,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1354,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1355,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1356,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1357,
                  "name": "addEventListener",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1358,
                      "name": "addEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1359,
                          "name": "K",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "literal",
                            "value": "abort"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1360,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1359,
                            "qualifiedName": "K",
                            "package": "typescript",
                            "name": "K"
                          }
                        },
                        {
                          "id": 1361,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1362,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1363,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 1364,
                                      "name": "ev",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "reference",
                                          "id": 1359,
                                          "qualifiedName": "K",
                                          "package": "typescript",
                                          "name": "K"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 1564,
                                          "qualifiedName": "AbortSignalEventMap",
                                          "package": "typescript",
                                          "name": "AbortSignalEventMap"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1365,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1466,
                                "qualifiedName": "AddEventListenerOptions",
                                "package": "typescript",
                                "name": "AddEventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.addEventListener"
                      }
                    },
                    {
                      "id": 1366,
                      "name": "addEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1367,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1368,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1471,
                            "qualifiedName": "EventListenerOrEventListenerObject",
                            "package": "typescript",
                            "name": "EventListenerOrEventListenerObject"
                          }
                        },
                        {
                          "id": 1369,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1466,
                                "qualifiedName": "AddEventListenerOptions",
                                "package": "typescript",
                                "name": "AddEventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.addEventListener"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "EventTarget.addEventListener"
                  }
                },
                {
                  "id": 1383,
                  "name": "dispatchEvent",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1384,
                      "name": "dispatchEvent",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise."
                      },
                      "parameters": [
                        {
                          "id": 1385,
                          "name": "event",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "Event",
                            "package": "typescript",
                            "name": "Event"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "EventTarget.dispatchEvent"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "EventTarget.dispatchEvent"
                  }
                },
                {
                  "id": 1370,
                  "name": "removeEventListener",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1371,
                      "name": "removeEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1372,
                          "name": "K",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "literal",
                            "value": "abort"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1373,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1372,
                            "qualifiedName": "K",
                            "package": "typescript",
                            "name": "K"
                          }
                        },
                        {
                          "id": 1374,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1375,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1376,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 1377,
                                      "name": "ev",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "reference",
                                          "id": 1372,
                                          "qualifiedName": "K",
                                          "package": "typescript",
                                          "name": "K"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 1564,
                                          "qualifiedName": "AbortSignalEventMap",
                                          "package": "typescript",
                                          "name": "AbortSignalEventMap"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1378,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1472,
                                "qualifiedName": "EventListenerOptions",
                                "package": "typescript",
                                "name": "EventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.removeEventListener"
                      }
                    },
                    {
                      "id": 1379,
                      "name": "removeEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1380,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1381,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1471,
                            "qualifiedName": "EventListenerOrEventListenerObject",
                            "package": "typescript",
                            "name": "EventListenerOrEventListenerObject"
                          }
                        },
                        {
                          "id": 1382,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1472,
                                "qualifiedName": "EventListenerOptions",
                                "package": "typescript",
                                "name": "EventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.removeEventListener"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "EventTarget.removeEventListener"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1352, 1353]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1357, 1383, 1370]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1883,
                  "character": 10
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "qualifiedName": "EventTarget",
                  "package": "typescript",
                  "name": "EventTarget"
                }
              ]
            },
            {
              "id": 1564,
              "name": "AbortSignalEventMap",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1565,
                  "name": "abort",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1879,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1565]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1878,
                  "character": 10
                }
              ]
            },
            {
              "id": 1466,
              "name": "AddEventListenerOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1470,
                  "name": "capture",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 457,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1473,
                    "name": "EventListenerOptions.capture"
                  }
                },
                {
                  "id": 1467,
                  "name": "once",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 26,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1468,
                  "name": "passive",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 27,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1469,
                  "name": "signal",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 28,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1348,
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1470, 1467, 1468, 1469]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 25,
                  "character": 10
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 1472,
                  "qualifiedName": "EventListenerOptions",
                  "package": "typescript",
                  "name": "EventListenerOptions"
                }
              ]
            },
            {
              "id": 1669,
              "name": "ArrayBufferView",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1670,
                  "name": "buffer",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "The ArrayBuffer instance referenced by the array."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1665,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1698,
                    "qualifiedName": "ArrayBufferLike",
                    "package": "typescript",
                    "name": "ArrayBufferLike"
                  }
                },
                {
                  "id": 1671,
                  "name": "byteLength",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "The length in bytes of the array."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1670,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1672,
                  "name": "byteOffset",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "The offset in bytes of the array."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1675,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1670, 1671, 1672]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1661,
                  "character": 10
                }
              ]
            },
            {
              "id": 1412,
              "name": "Blob",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system."
              },
              "children": [
                {
                  "id": 1413,
                  "name": "size",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 2378,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1414,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 2379,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1415,
                  "name": "arrayBuffer",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1416,
                      "name": "arrayBuffer",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "ArrayBuffer",
                            "package": "typescript",
                            "name": "ArrayBuffer"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1417,
                  "name": "slice",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1418,
                      "name": "slice",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1419,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 1420,
                          "name": "end",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 1421,
                          "name": "contentType",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1409,
                        "qualifiedName": "Blob",
                        "package": "typescript",
                        "name": "Blob"
                      }
                    }
                  ]
                },
                {
                  "id": 1422,
                  "name": "stream",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1423,
                      "name": "stream",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 1387,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "ReadableStream",
                        "package": "typescript",
                        "name": "ReadableStream"
                      }
                    }
                  ]
                },
                {
                  "id": 1424,
                  "name": "text",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1425,
                      "name": "text",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1413, 1414]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1415, 1417, 1422, 1424]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 2377,
                  "character": 10
                }
              ]
            },
            {
              "id": 1329,
              "name": "Body",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1330,
                  "name": "body",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 2402,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 1387,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Uint8Array",
                            "package": "typescript",
                            "name": "Uint8Array"
                          }
                        ],
                        "qualifiedName": "ReadableStream",
                        "package": "typescript",
                        "name": "ReadableStream"
                      }
                    ]
                  }
                },
                {
                  "id": 1331,
                  "name": "bodyUsed",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 2403,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1332,
                  "name": "arrayBuffer",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1333,
                      "name": "arrayBuffer",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "ArrayBuffer",
                            "package": "typescript",
                            "name": "ArrayBuffer"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1334,
                  "name": "blob",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1335,
                      "name": "blob",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1409,
                            "qualifiedName": "Blob",
                            "package": "typescript",
                            "name": "Blob"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1336,
                  "name": "formData",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1337,
                      "name": "formData",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "FormData",
                            "package": "typescript",
                            "name": "FormData"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1338,
                  "name": "json",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1339,
                      "name": "json",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1340,
                  "name": "text",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1341,
                      "name": "text",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1330, 1331]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1332, 1334, 1336, 1338, 1340]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 2401,
                  "character": 10
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 1304,
                  "name": "Response"
                }
              ]
            },
            {
              "id": 1472,
              "name": "EventListenerOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1473,
                  "name": "capture",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 457,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1473]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 456,
                  "character": 10
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 1466,
                  "name": "AddEventListenerOptions"
                }
              ]
            },
            {
              "id": 1503,
              "name": "MediaSource",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "This Media Source Extensions API interface represents a source of media data for an HTMLMediaElement object. A MediaSource object can be attached to a HTMLMediaElement to be played in the user agent."
              },
              "children": [
                {
                  "id": 1504,
                  "name": "activeSourceBuffers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9179,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "SourceBufferList",
                    "package": "typescript",
                    "name": "SourceBufferList"
                  }
                },
                {
                  "id": 1505,
                  "name": "duration",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9180,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1506,
                  "name": "onsourceclose",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9181,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1507,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1508,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1509,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1510,
                  "name": "onsourceended",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9182,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1511,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1512,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1513,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1514,
                  "name": "onsourceopen",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9183,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1515,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1516,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1517,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1518,
                  "name": "readyState",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9184,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1572,
                    "qualifiedName": "ReadyState",
                    "package": "typescript",
                    "name": "ReadyState"
                  }
                },
                {
                  "id": 1519,
                  "name": "sourceBuffers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9185,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "SourceBufferList",
                    "package": "typescript",
                    "name": "SourceBufferList"
                  }
                },
                {
                  "id": 1535,
                  "name": "addEventListener",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1536,
                      "name": "addEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1537,
                          "name": "K",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "id": 1665,
                              "qualifiedName": "MediaSourceEventMap",
                              "package": "typescript",
                              "name": "MediaSourceEventMap"
                            }
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1538,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1537,
                            "qualifiedName": "K",
                            "package": "typescript",
                            "name": "K"
                          }
                        },
                        {
                          "id": 1539,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1540,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1541,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 1542,
                                      "name": "ev",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "reference",
                                          "id": 1537,
                                          "qualifiedName": "K",
                                          "package": "typescript",
                                          "name": "K"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 1665,
                                          "qualifiedName": "MediaSourceEventMap",
                                          "package": "typescript",
                                          "name": "MediaSourceEventMap"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1543,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1466,
                                "qualifiedName": "AddEventListenerOptions",
                                "package": "typescript",
                                "name": "AddEventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.addEventListener"
                      }
                    },
                    {
                      "id": 1544,
                      "name": "addEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1545,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1546,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1471,
                            "qualifiedName": "EventListenerOrEventListenerObject",
                            "package": "typescript",
                            "name": "EventListenerOrEventListenerObject"
                          }
                        },
                        {
                          "id": 1547,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1466,
                                "qualifiedName": "AddEventListenerOptions",
                                "package": "typescript",
                                "name": "AddEventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.addEventListener"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "EventTarget.addEventListener"
                  }
                },
                {
                  "id": 1520,
                  "name": "addSourceBuffer",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1521,
                      "name": "addSourceBuffer",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1522,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1593,
                        "qualifiedName": "SourceBuffer",
                        "package": "typescript",
                        "name": "SourceBuffer"
                      }
                    }
                  ]
                },
                {
                  "id": 1523,
                  "name": "clearLiveSeekableRange",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1524,
                      "name": "clearLiveSeekableRange",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1561,
                  "name": "dispatchEvent",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1562,
                      "name": "dispatchEvent",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise."
                      },
                      "parameters": [
                        {
                          "id": 1563,
                          "name": "event",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "Event",
                            "package": "typescript",
                            "name": "Event"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "EventTarget.dispatchEvent"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "EventTarget.dispatchEvent"
                  }
                },
                {
                  "id": 1525,
                  "name": "endOfStream",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1526,
                      "name": "endOfStream",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1527,
                          "name": "error",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1664,
                            "qualifiedName": "EndOfStreamError",
                            "package": "typescript",
                            "name": "EndOfStreamError"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1548,
                  "name": "removeEventListener",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1549,
                      "name": "removeEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1550,
                          "name": "K",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "id": 1665,
                              "qualifiedName": "MediaSourceEventMap",
                              "package": "typescript",
                              "name": "MediaSourceEventMap"
                            }
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1551,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1550,
                            "qualifiedName": "K",
                            "package": "typescript",
                            "name": "K"
                          }
                        },
                        {
                          "id": 1552,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1553,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1554,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 1555,
                                      "name": "ev",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "reference",
                                          "id": 1550,
                                          "qualifiedName": "K",
                                          "package": "typescript",
                                          "name": "K"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 1665,
                                          "qualifiedName": "MediaSourceEventMap",
                                          "package": "typescript",
                                          "name": "MediaSourceEventMap"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1556,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1472,
                                "qualifiedName": "EventListenerOptions",
                                "package": "typescript",
                                "name": "EventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.removeEventListener"
                      }
                    },
                    {
                      "id": 1557,
                      "name": "removeEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1558,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1559,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1471,
                            "qualifiedName": "EventListenerOrEventListenerObject",
                            "package": "typescript",
                            "name": "EventListenerOrEventListenerObject"
                          }
                        },
                        {
                          "id": 1560,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1472,
                                "qualifiedName": "EventListenerOptions",
                                "package": "typescript",
                                "name": "EventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.removeEventListener"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "EventTarget.removeEventListener"
                  }
                },
                {
                  "id": 1528,
                  "name": "removeSourceBuffer",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1529,
                      "name": "removeSourceBuffer",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1530,
                          "name": "sourceBuffer",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1593,
                            "qualifiedName": "SourceBuffer",
                            "package": "typescript",
                            "name": "SourceBuffer"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1531,
                  "name": "setLiveSeekableRange",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1532,
                      "name": "setLiveSeekableRange",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1533,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 1534,
                          "name": "end",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1504, 1505, 1506, 1510, 1514, 1518, 1519]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1535, 1520, 1523, 1561, 1525, 1548, 1528, 1531]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 9178,
                  "character": 10
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "qualifiedName": "EventTarget",
                  "package": "typescript",
                  "name": "EventTarget"
                }
              ]
            },
            {
              "id": 1665,
              "name": "MediaSourceEventMap",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1666,
                  "name": "sourceclose",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9172,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                },
                {
                  "id": 1667,
                  "name": "sourceended",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9173,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                },
                {
                  "id": 1668,
                  "name": "sourceopen",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 9174,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1666, 1667, 1668]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 9171,
                  "character": 10
                }
              ]
            },
            {
              "id": 1390,
              "name": "ReadableStream",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object."
              },
              "children": [
                {
                  "id": 1391,
                  "name": "locked",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11000,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1392,
                  "name": "cancel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1393,
                      "name": "cancel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1394,
                          "name": "reason",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1395,
                  "name": "getReader",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1396,
                      "name": "getReader",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 1453,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1408,
                            "qualifiedName": "ReadableStream.R",
                            "package": "typescript",
                            "name": "R"
                          }
                        ],
                        "qualifiedName": "ReadableStreamDefaultReader",
                        "package": "typescript",
                        "name": "ReadableStreamDefaultReader"
                      }
                    }
                  ]
                },
                {
                  "id": 1397,
                  "name": "pipeThrough",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1398,
                      "name": "pipeThrough",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1399,
                          "name": "T",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1400,
                          "name": "transform",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1474,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1399,
                                "qualifiedName": "T",
                                "package": "typescript",
                                "name": "T"
                              },
                              {
                                "type": "reference",
                                "id": 1408,
                                "qualifiedName": "ReadableStream.R",
                                "package": "typescript",
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "ReadableWritablePair",
                            "package": "typescript",
                            "name": "ReadableWritablePair"
                          }
                        },
                        {
                          "id": 1401,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1479,
                            "qualifiedName": "StreamPipeOptions",
                            "package": "typescript",
                            "name": "StreamPipeOptions"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1387,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1399,
                            "qualifiedName": "T",
                            "package": "typescript",
                            "name": "T"
                          }
                        ],
                        "qualifiedName": "ReadableStream",
                        "package": "typescript",
                        "name": "ReadableStream"
                      }
                    }
                  ]
                },
                {
                  "id": 1402,
                  "name": "pipeTo",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1403,
                      "name": "pipeTo",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1404,
                          "name": "destination",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1484,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1408,
                                "qualifiedName": "ReadableStream.R",
                                "package": "typescript",
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "WritableStream",
                            "package": "typescript",
                            "name": "WritableStream"
                          }
                        },
                        {
                          "id": 1405,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1479,
                            "qualifiedName": "StreamPipeOptions",
                            "package": "typescript",
                            "name": "StreamPipeOptions"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1406,
                  "name": "tee",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1407,
                      "name": "tee",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "reference",
                            "id": 1387,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1408,
                                "qualifiedName": "ReadableStream.R",
                                "package": "typescript",
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "ReadableStream",
                            "package": "typescript",
                            "name": "ReadableStream"
                          },
                          {
                            "type": "reference",
                            "id": 1387,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1408,
                                "qualifiedName": "ReadableStream.R",
                                "package": "typescript",
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "ReadableStream",
                            "package": "typescript",
                            "name": "ReadableStream"
                          }
                        ]
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1391]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1392, 1395, 1397, 1402, 1406]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 10999,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1408,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            },
            {
              "id": 1677,
              "name": "ReadableStreamDefaultReadDoneResult",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1678,
                  "name": "done",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1441,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": true
                  }
                },
                {
                  "id": 1679,
                  "name": "value",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1442,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1678, 1679]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1440,
                  "character": 10
                }
              ]
            },
            {
              "id": 1673,
              "name": "ReadableStreamDefaultReadValueResult",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1674,
                  "name": "done",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1446,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": false
                  }
                },
                {
                  "id": 1675,
                  "name": "value",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1447,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1676,
                    "qualifiedName": "ReadableStreamDefaultReadValueResult.T",
                    "package": "typescript",
                    "name": "T"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1674, 1675]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1445,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1676,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ]
            },
            {
              "id": 1456,
              "name": "ReadableStreamDefaultReader",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1461,
                  "name": "closed",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11036,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1568,
                    "name": "ReadableStreamGenericReader.closed"
                  }
                },
                {
                  "id": 1462,
                  "name": "cancel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1463,
                      "name": "cancel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1464,
                          "name": "reason",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1570,
                        "name": "ReadableStreamGenericReader.cancel"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1569,
                    "name": "ReadableStreamGenericReader.cancel"
                  }
                },
                {
                  "id": 1457,
                  "name": "read",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1458,
                      "name": "read",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1573,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1465,
                                "qualifiedName": "ReadableStreamDefaultReader.R",
                                "package": "typescript",
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "ReadableStreamDefaultReadResult",
                            "package": "typescript",
                            "name": "ReadableStreamDefaultReadResult"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1459,
                  "name": "releaseLock",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1460,
                      "name": "releaseLock",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1461]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1462, 1457, 1459]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 11025,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1465,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 1567,
                  "qualifiedName": "ReadableStreamGenericReader",
                  "package": "typescript",
                  "name": "ReadableStreamGenericReader"
                }
              ]
            },
            {
              "id": 1567,
              "name": "ReadableStreamGenericReader",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1568,
                  "name": "closed",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11036,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                },
                {
                  "id": 1569,
                  "name": "cancel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1570,
                      "name": "cancel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1571,
                          "name": "reason",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1568]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1569]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 11035,
                  "character": 10
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 1456,
                  "name": "ReadableStreamDefaultReader"
                }
              ]
            },
            {
              "id": 1474,
              "name": "ReadableWritablePair",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1475,
                  "name": "readable",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1451,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1387,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1477,
                        "qualifiedName": "ReadableWritablePair.R",
                        "package": "typescript",
                        "name": "R"
                      }
                    ],
                    "qualifiedName": "ReadableStream",
                    "package": "typescript",
                    "name": "ReadableStream"
                  }
                },
                {
                  "id": 1476,
                  "name": "writable",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.",
                    "text": "Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n"
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1457,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1484,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1478,
                        "qualifiedName": "ReadableWritablePair.W",
                        "package": "typescript",
                        "name": "W"
                      }
                    ],
                    "qualifiedName": "WritableStream",
                    "package": "typescript",
                    "name": "WritableStream"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1475, 1476]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1450,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1477,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 1478,
                  "name": "W",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            },
            {
              "id": 1280,
              "name": "RequestInit",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1281,
                  "name": "body",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A BodyInit object or null to set request's body."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1468,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 1342,
                        "qualifiedName": "BodyInit",
                        "package": "typescript",
                        "name": "BodyInit"
                      }
                    ]
                  }
                },
                {
                  "id": 1282,
                  "name": "cache",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A string indicating how the request will interact with the browser's cache to set request's cache."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1470,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1343,
                    "qualifiedName": "RequestCache",
                    "package": "typescript",
                    "name": "RequestCache"
                  }
                },
                {
                  "id": 1283,
                  "name": "credentials",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1472,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1344,
                    "qualifiedName": "RequestCredentials",
                    "package": "typescript",
                    "name": "RequestCredentials"
                  }
                },
                {
                  "id": 1284,
                  "name": "headers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1474,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1294,
                    "qualifiedName": "HeadersInit",
                    "package": "typescript",
                    "name": "HeadersInit"
                  }
                },
                {
                  "id": 1285,
                  "name": "integrity",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1476,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1286,
                  "name": "keepalive",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A boolean to set request's keepalive."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1478,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1287,
                  "name": "method",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A string to set request's method."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1480,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1288,
                  "name": "mode",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1482,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1345,
                    "qualifiedName": "RequestMode",
                    "package": "typescript",
                    "name": "RequestMode"
                  }
                },
                {
                  "id": 1289,
                  "name": "redirect",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1484,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1346,
                    "qualifiedName": "RequestRedirect",
                    "package": "typescript",
                    "name": "RequestRedirect"
                  }
                },
                {
                  "id": 1290,
                  "name": "referrer",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1486,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1291,
                  "name": "referrerPolicy",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A referrer policy to set request's referrerPolicy."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1488,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1347,
                    "qualifiedName": "ReferrerPolicy",
                    "package": "typescript",
                    "name": "ReferrerPolicy"
                  }
                },
                {
                  "id": 1292,
                  "name": "signal",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "An AbortSignal to set request's signal."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1490,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 1348,
                        "qualifiedName": "AbortSignal",
                        "package": "typescript",
                        "name": "AbortSignal"
                      }
                    ]
                  }
                },
                {
                  "id": 1293,
                  "name": "window",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Can only be null. Used to disassociate request from any Window."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1492,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1466,
                  "character": 10
                }
              ]
            },
            {
              "id": 1304,
              "name": "Response",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "This Fetch API interface represents the response to a request."
              },
              "children": [
                {
                  "id": 1314,
                  "name": "body",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 2402,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 1387,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Uint8Array",
                            "package": "typescript",
                            "name": "Uint8Array"
                          }
                        ],
                        "qualifiedName": "ReadableStream",
                        "package": "typescript",
                        "name": "ReadableStream"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1330,
                    "name": "Body.body"
                  }
                },
                {
                  "id": 1315,
                  "name": "bodyUsed",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 2403,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1331,
                    "name": "Body.bodyUsed"
                  }
                },
                {
                  "id": 1305,
                  "name": "headers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11136,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Headers",
                    "package": "typescript",
                    "name": "Headers"
                  }
                },
                {
                  "id": 1306,
                  "name": "ok",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11137,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1307,
                  "name": "redirected",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11138,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1308,
                  "name": "status",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11139,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1309,
                  "name": "statusText",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11140,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1310,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11141,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1386,
                    "qualifiedName": "ResponseType",
                    "package": "typescript",
                    "name": "ResponseType"
                  }
                },
                {
                  "id": 1311,
                  "name": "url",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 11142,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1316,
                  "name": "arrayBuffer",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1317,
                      "name": "arrayBuffer",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "ArrayBuffer",
                            "package": "typescript",
                            "name": "ArrayBuffer"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1333,
                        "name": "Body.arrayBuffer"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1332,
                    "name": "Body.arrayBuffer"
                  }
                },
                {
                  "id": 1318,
                  "name": "blob",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1319,
                      "name": "blob",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1409,
                            "qualifiedName": "Blob",
                            "package": "typescript",
                            "name": "Blob"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1335,
                        "name": "Body.blob"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1334,
                    "name": "Body.blob"
                  }
                },
                {
                  "id": 1312,
                  "name": "clone",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1313,
                      "name": "clone",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 1295,
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    }
                  ]
                },
                {
                  "id": 1320,
                  "name": "formData",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1321,
                      "name": "formData",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "FormData",
                            "package": "typescript",
                            "name": "FormData"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1337,
                        "name": "Body.formData"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1336,
                    "name": "Body.formData"
                  }
                },
                {
                  "id": 1322,
                  "name": "json",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1323,
                      "name": "json",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1339,
                        "name": "Body.json"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1338,
                    "name": "Body.json"
                  }
                },
                {
                  "id": 1324,
                  "name": "text",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1325,
                      "name": "text",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 1341,
                        "name": "Body.text"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 1340,
                    "name": "Body.text"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1314, 1315, 1305, 1306, 1307, 1308, 1309, 1310, 1311]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1316, 1318, 1312, 1320, 1322, 1324]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 11135,
                  "character": 10
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 1329,
                  "qualifiedName": "Body",
                  "package": "typescript",
                  "name": "Body"
                }
              ]
            },
            {
              "id": 1596,
              "name": "SourceBuffer",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "A chunk of media to be passed into an HTMLMediaElement and played, via a MediaSource object. This can be made up of one or several media segments."
              },
              "children": [
                {
                  "id": 1597,
                  "name": "appendWindowEnd",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13116,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1598,
                  "name": "appendWindowStart",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13117,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1599,
                  "name": "buffered",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13118,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1680,
                    "qualifiedName": "TimeRanges",
                    "package": "typescript",
                    "name": "TimeRanges"
                  }
                },
                {
                  "id": 1600,
                  "name": "mode",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13119,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1691,
                    "qualifiedName": "AppendMode",
                    "package": "typescript",
                    "name": "AppendMode"
                  }
                },
                {
                  "id": 1601,
                  "name": "onabort",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13120,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1602,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1603,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1604,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1605,
                  "name": "onerror",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13121,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1606,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1607,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1608,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1609,
                  "name": "onupdate",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13122,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1610,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1611,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1612,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1613,
                  "name": "onupdateend",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13123,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1614,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1615,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1616,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1617,
                  "name": "onupdatestart",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13124,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1618,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "signatures": [
                            {
                              "id": 1619,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1620,
                                  "name": "ev",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "Event",
                                    "package": "typescript",
                                    "name": "Event"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1621,
                  "name": "timestampOffset",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13125,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1622,
                  "name": "updating",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13126,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1623,
                  "name": "abort",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1624,
                      "name": "abort",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1635,
                  "name": "addEventListener",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1636,
                      "name": "addEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1637,
                          "name": "K",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "id": 1692,
                              "qualifiedName": "SourceBufferEventMap",
                              "package": "typescript",
                              "name": "SourceBufferEventMap"
                            }
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1638,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1637,
                            "qualifiedName": "K",
                            "package": "typescript",
                            "name": "K"
                          }
                        },
                        {
                          "id": 1639,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1640,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1641,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 1642,
                                      "name": "ev",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "reference",
                                          "id": 1637,
                                          "qualifiedName": "K",
                                          "package": "typescript",
                                          "name": "K"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 1692,
                                          "qualifiedName": "SourceBufferEventMap",
                                          "package": "typescript",
                                          "name": "SourceBufferEventMap"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1643,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1466,
                                "qualifiedName": "AddEventListenerOptions",
                                "package": "typescript",
                                "name": "AddEventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.addEventListener"
                      }
                    },
                    {
                      "id": 1644,
                      "name": "addEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1645,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1646,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1471,
                            "qualifiedName": "EventListenerOrEventListenerObject",
                            "package": "typescript",
                            "name": "EventListenerOrEventListenerObject"
                          }
                        },
                        {
                          "id": 1647,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1466,
                                "qualifiedName": "AddEventListenerOptions",
                                "package": "typescript",
                                "name": "AddEventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.addEventListener"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "EventTarget.addEventListener"
                  }
                },
                {
                  "id": 1625,
                  "name": "appendBuffer",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1626,
                      "name": "appendBuffer",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1627,
                          "name": "data",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1566,
                            "qualifiedName": "BufferSource",
                            "package": "typescript",
                            "name": "BufferSource"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1628,
                  "name": "changeType",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1629,
                      "name": "changeType",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1630,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1661,
                  "name": "dispatchEvent",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1662,
                      "name": "dispatchEvent",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise."
                      },
                      "parameters": [
                        {
                          "id": 1663,
                          "name": "event",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "Event",
                            "package": "typescript",
                            "name": "Event"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "name": "EventTarget.dispatchEvent"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "EventTarget.dispatchEvent"
                  }
                },
                {
                  "id": 1631,
                  "name": "remove",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1632,
                      "name": "remove",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1633,
                          "name": "start",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 1634,
                          "name": "end",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1648,
                  "name": "removeEventListener",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1649,
                      "name": "removeEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "typeParameter": [
                        {
                          "id": 1650,
                          "name": "K",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "id": 1692,
                              "qualifiedName": "SourceBufferEventMap",
                              "package": "typescript",
                              "name": "SourceBufferEventMap"
                            }
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1651,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1650,
                            "qualifiedName": "K",
                            "package": "typescript",
                            "name": "K"
                          }
                        },
                        {
                          "id": 1652,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1653,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExternal": true
                              },
                              "signatures": [
                                {
                                  "id": 1654,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 1655,
                                      "name": "ev",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "reference",
                                          "id": 1650,
                                          "qualifiedName": "K",
                                          "package": "typescript",
                                          "name": "K"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 1692,
                                          "qualifiedName": "SourceBufferEventMap",
                                          "package": "typescript",
                                          "name": "SourceBufferEventMap"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1656,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1472,
                                "qualifiedName": "EventListenerOptions",
                                "package": "typescript",
                                "name": "EventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.removeEventListener"
                      }
                    },
                    {
                      "id": 1657,
                      "name": "removeEventListener",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1658,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1659,
                          "name": "listener",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1471,
                            "qualifiedName": "EventListenerOrEventListenerObject",
                            "package": "typescript",
                            "name": "EventListenerOrEventListenerObject"
                          }
                        },
                        {
                          "id": 1660,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "id": 1472,
                                "qualifiedName": "EventListenerOptions",
                                "package": "typescript",
                                "name": "EventListenerOptions"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "EventTarget.removeEventListener"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "EventTarget.removeEventListener"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1597, 1598, 1599, 1600, 1601, 1605, 1609, 1613, 1617, 1621, 1622]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1623, 1635, 1625, 1628, 1661, 1631, 1648]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 13115,
                  "character": 10
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "qualifiedName": "EventTarget",
                  "package": "typescript",
                  "name": "EventTarget"
                }
              ]
            },
            {
              "id": 1692,
              "name": "SourceBufferEventMap",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1693,
                  "name": "abort",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13107,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                },
                {
                  "id": 1694,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13108,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                },
                {
                  "id": 1695,
                  "name": "update",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13109,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                },
                {
                  "id": 1696,
                  "name": "updateend",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13110,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                },
                {
                  "id": 1697,
                  "name": "updatestart",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13111,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Event",
                    "package": "typescript",
                    "name": "Event"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1693, 1694, 1695, 1696, 1697]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 13106,
                  "character": 10
                }
              ]
            },
            {
              "id": 1479,
              "name": "StreamPipeOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1480,
                  "name": "preventAbort",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1627,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1481,
                  "name": "preventCancel",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1628,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1482,
                  "name": "preventClose",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.",
                    "text": "Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n\nErrors and closures of the source and destination streams propagate as follows:\n\nAn error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source's error, or with any error that occurs during aborting the destination.\n\nAn error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination's error, or with any error that occurs during canceling the source.\n\nWhen this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n\nIf destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n\nThe signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.\n"
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1646,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1483,
                  "name": "signal",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 1647,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1348,
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1480, 1481, 1482, 1483]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1626,
                  "character": 10
                }
              ]
            },
            {
              "id": 1683,
              "name": "TimeRanges",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "Used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <audio> and <video> elements."
              },
              "children": [
                {
                  "id": 1684,
                  "name": "length",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "comment": {
                    "shortText": "Returns the number of ranges in the object."
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13698,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1685,
                  "name": "end",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1686,
                      "name": "end",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the time for the end of the range with the given index.",
                        "text": "Throws an \"IndexSizeError\" DOMException if the index is out of range.\n"
                      },
                      "parameters": [
                        {
                          "id": 1687,
                          "name": "index",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ]
                },
                {
                  "id": 1688,
                  "name": "start",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1689,
                      "name": "start",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Returns the time for the start of the range with the given index.",
                        "text": "Throws an \"IndexSizeError\" DOMException if the index is out of range.\n"
                      },
                      "parameters": [
                        {
                          "id": 1690,
                          "name": "index",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1684]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1685, 1688]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 13696,
                  "character": 10
                }
              ]
            },
            {
              "id": 1435,
              "name": "URL",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "The URL interface represents an object providing static methods used for creating object URLs."
              },
              "children": [
                {
                  "id": 1436,
                  "name": "hash",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13849,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1437,
                  "name": "host",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13850,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1438,
                  "name": "hostname",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13851,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1439,
                  "name": "href",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13852,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1442,
                  "name": "origin",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13854,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1443,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13855,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1444,
                  "name": "pathname",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13856,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1445,
                  "name": "port",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13857,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1446,
                  "name": "protocol",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13858,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1447,
                  "name": "search",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13859,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1448,
                  "name": "searchParams",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13860,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "URLSearchParams",
                    "package": "typescript",
                    "name": "URLSearchParams"
                  }
                },
                {
                  "id": 1449,
                  "name": "username",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 13861,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1450,
                  "name": "toJSON",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1451,
                      "name": "toJSON",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                },
                {
                  "id": 1440,
                  "name": "toString",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1441,
                      "name": "toString",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449
                  ]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1450, 1440]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 13848,
                  "character": 10
                }
              ]
            },
            {
              "id": 1487,
              "name": "WritableStream",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "This Streams API interface provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing."
              },
              "children": [
                {
                  "id": 1488,
                  "name": "locked",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 16357,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1489,
                  "name": "abort",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1490,
                      "name": "abort",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1491,
                          "name": "reason",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1492,
                  "name": "close",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1493,
                      "name": "close",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1494,
                  "name": "getWriter",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1495,
                      "name": "getWriter",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 1575,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1496,
                            "qualifiedName": "WritableStream.W",
                            "package": "typescript",
                            "name": "W"
                          }
                        ],
                        "qualifiedName": "WritableStreamDefaultWriter",
                        "package": "typescript",
                        "name": "WritableStreamDefaultWriter"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1488]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1489, 1492, 1494]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 16356,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1496,
                  "name": "W",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            },
            {
              "id": 1578,
              "name": "WritableStreamDefaultWriter",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink."
              },
              "children": [
                {
                  "id": 1579,
                  "name": "closed",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 16380,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                },
                {
                  "id": 1580,
                  "name": "desiredSize",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 16381,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    ]
                  }
                },
                {
                  "id": 1581,
                  "name": "ready",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isReadonly": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 16382,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                },
                {
                  "id": 1582,
                  "name": "abort",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1583,
                      "name": "abort",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1584,
                          "name": "reason",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1585,
                  "name": "close",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1586,
                      "name": "close",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 1587,
                  "name": "releaseLock",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1588,
                      "name": "releaseLock",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 1589,
                  "name": "write",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1590,
                      "name": "write",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "parameters": [
                        {
                          "id": 1591,
                          "name": "chunk",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1592,
                            "qualifiedName": "WritableStreamDefaultWriter.W",
                            "package": "typescript",
                            "name": "W"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1579, 1580, 1581]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [1582, 1585, 1587, 1589]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 16379,
                  "character": 10
                }
              ],
              "typeParameter": [
                {
                  "id": 1592,
                  "name": "W",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            },
            {
              "id": 1691,
              "name": "AppendMode",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17652,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "segments"
                  },
                  {
                    "type": "literal",
                    "value": "sequence"
                  }
                ]
              }
            },
            {
              "id": 1698,
              "name": "ArrayBufferLike",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1652,
                  "character": 5
                }
              ],
              "type": {
                "type": "indexedAccess",
                "indexType": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "qualifiedName": "ArrayBufferTypes",
                    "package": "typescript",
                    "name": "ArrayBufferTypes"
                  }
                },
                "objectType": {
                  "type": "reference",
                  "qualifiedName": "ArrayBufferTypes",
                  "package": "typescript",
                  "name": "ArrayBufferTypes"
                }
              }
            },
            {
              "id": 1342,
              "name": "BodyInit",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17590,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 1387,
                    "qualifiedName": "ReadableStream",
                    "package": "typescript",
                    "name": "ReadableStream"
                  },
                  {
                    "type": "reference",
                    "id": 1452,
                    "qualifiedName": "XMLHttpRequestBodyInit",
                    "package": "typescript",
                    "name": "XMLHttpRequestBodyInit"
                  }
                ]
              }
            },
            {
              "id": 1566,
              "name": "BufferSource",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17591,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 1669,
                    "qualifiedName": "ArrayBufferView",
                    "package": "typescript",
                    "name": "ArrayBufferView"
                  },
                  {
                    "type": "reference",
                    "qualifiedName": "ArrayBuffer",
                    "package": "typescript",
                    "name": "ArrayBuffer"
                  }
                ]
              }
            },
            {
              "id": 1664,
              "name": "EndOfStreamError",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17687,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "decode"
                  },
                  {
                    "type": "literal",
                    "value": "network"
                  }
                ]
              }
            },
            {
              "id": 1471,
              "name": "EventListenerOrEventListenerObject",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17604,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "qualifiedName": "EventListener",
                    "package": "typescript",
                    "name": "EventListener"
                  },
                  {
                    "type": "reference",
                    "qualifiedName": "EventListenerObject",
                    "package": "typescript",
                    "name": "EventListenerObject"
                  }
                ]
              }
            },
            {
              "id": 1326,
              "name": "Exclude",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "Exclude from T those types that are assignable to U"
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1566,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1327,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1328,
                  "name": "U",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "id": 1327,
                  "qualifiedName": "T",
                  "package": "typescript",
                  "name": "T"
                },
                "extendsType": {
                  "type": "reference",
                  "id": 1328,
                  "qualifiedName": "U",
                  "package": "typescript",
                  "name": "U"
                },
                "trueType": {
                  "type": "intrinsic",
                  "name": "never"
                },
                "falseType": {
                  "type": "reference",
                  "id": 1327,
                  "qualifiedName": "T",
                  "package": "typescript",
                  "name": "T"
                }
              }
            },
            {
              "id": 1294,
              "name": "HeadersInit",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17622,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  },
                  {
                    "type": "reference",
                    "id": 1273,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  },
                  {
                    "type": "reference",
                    "qualifiedName": "Headers",
                    "package": "typescript",
                    "name": "Headers"
                  }
                ]
              }
            },
            {
              "id": 1277,
              "name": "Omit",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "shortText": "Construct a type with the properties of T except for those in type K."
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1576,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1278,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 1279,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1164,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1278,
                    "qualifiedName": "T",
                    "package": "typescript",
                    "name": "T"
                  },
                  {
                    "type": "reference",
                    "id": 1326,
                    "typeArguments": [
                      {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 1278,
                          "qualifiedName": "T",
                          "package": "typescript",
                          "name": "T"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 1279,
                        "qualifiedName": "K",
                        "package": "typescript",
                        "name": "K"
                      }
                    ],
                    "qualifiedName": "Exclude",
                    "package": "typescript",
                    "name": "Exclude"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 1573,
              "name": "ReadableStreamDefaultReadResult",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17636,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1574,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 1673,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1574,
                        "qualifiedName": "T",
                        "package": "typescript",
                        "name": "T"
                      }
                    ],
                    "qualifiedName": "ReadableStreamDefaultReadValueResult",
                    "package": "typescript",
                    "name": "ReadableStreamDefaultReadValueResult"
                  },
                  {
                    "type": "reference",
                    "id": 1677,
                    "qualifiedName": "ReadableStreamDefaultReadDoneResult",
                    "package": "typescript",
                    "name": "ReadableStreamDefaultReadDoneResult"
                  }
                ]
              }
            },
            {
              "id": 1572,
              "name": "ReadyState",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17758,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "closed"
                  },
                  {
                    "type": "literal",
                    "value": "ended"
                  },
                  {
                    "type": "literal",
                    "value": "open"
                  }
                ]
              }
            },
            {
              "id": 1347,
              "name": "ReferrerPolicy",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17760,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "no-referrer"
                  },
                  {
                    "type": "literal",
                    "value": "no-referrer-when-downgrade"
                  },
                  {
                    "type": "literal",
                    "value": "origin"
                  },
                  {
                    "type": "literal",
                    "value": "origin-when-cross-origin"
                  },
                  {
                    "type": "literal",
                    "value": "same-origin"
                  },
                  {
                    "type": "literal",
                    "value": "strict-origin"
                  },
                  {
                    "type": "literal",
                    "value": "strict-origin-when-cross-origin"
                  },
                  {
                    "type": "literal",
                    "value": "unsafe-url"
                  }
                ]
              }
            },
            {
              "id": 1343,
              "name": "RequestCache",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17762,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "default"
                  },
                  {
                    "type": "literal",
                    "value": "force-cache"
                  },
                  {
                    "type": "literal",
                    "value": "no-cache"
                  },
                  {
                    "type": "literal",
                    "value": "no-store"
                  },
                  {
                    "type": "literal",
                    "value": "only-if-cached"
                  },
                  {
                    "type": "literal",
                    "value": "reload"
                  }
                ]
              }
            },
            {
              "id": 1344,
              "name": "RequestCredentials",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17763,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "include"
                  },
                  {
                    "type": "literal",
                    "value": "omit"
                  },
                  {
                    "type": "literal",
                    "value": "same-origin"
                  }
                ]
              }
            },
            {
              "id": 1345,
              "name": "RequestMode",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17765,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "cors"
                  },
                  {
                    "type": "literal",
                    "value": "navigate"
                  },
                  {
                    "type": "literal",
                    "value": "no-cors"
                  },
                  {
                    "type": "literal",
                    "value": "same-origin"
                  }
                ]
              }
            },
            {
              "id": 1346,
              "name": "RequestRedirect",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17766,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "error"
                  },
                  {
                    "type": "literal",
                    "value": "follow"
                  },
                  {
                    "type": "literal",
                    "value": "manual"
                  }
                ]
              }
            },
            {
              "id": 1386,
              "name": "ResponseType",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17770,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "basic"
                  },
                  {
                    "type": "literal",
                    "value": "cors"
                  },
                  {
                    "type": "literal",
                    "value": "default"
                  },
                  {
                    "type": "literal",
                    "value": "error"
                  },
                  {
                    "type": "literal",
                    "value": "opaque"
                  },
                  {
                    "type": "literal",
                    "value": "opaqueredirect"
                  }
                ]
              }
            },
            {
              "id": 1452,
              "name": "XMLHttpRequestBodyInit",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 17648,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 1409,
                    "qualifiedName": "Blob",
                    "package": "typescript",
                    "name": "Blob"
                  },
                  {
                    "type": "reference",
                    "id": 1566,
                    "qualifiedName": "BufferSource",
                    "package": "typescript",
                    "name": "BufferSource"
                  },
                  {
                    "type": "reference",
                    "qualifiedName": "FormData",
                    "package": "typescript",
                    "name": "FormData"
                  },
                  {
                    "type": "reference",
                    "qualifiedName": "URLSearchParams",
                    "package": "typescript",
                    "name": "URLSearchParams"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 1348,
              "name": "AbortSignal",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 1893,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1349,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1350,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 1894,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1348,
                        "qualifiedName": "AbortSignal",
                        "package": "typescript",
                        "name": "AbortSignal"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1350]
                    }
                  ]
                }
              }
            },
            {
              "id": 1409,
              "name": "Blob",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 2386,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1410,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1411,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 2387,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1409,
                        "qualifiedName": "Blob",
                        "package": "typescript",
                        "name": "Blob"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1411]
                    }
                  ]
                }
              }
            },
            {
              "id": 1497,
              "name": "MediaSource",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 9197,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1498,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1499,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 9198,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1497,
                        "qualifiedName": "MediaSource",
                        "package": "typescript",
                        "name": "MediaSource"
                      }
                    },
                    {
                      "id": 1500,
                      "name": "isTypeSupported",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isExternal": true
                      },
                      "signatures": [
                        {
                          "id": 1501,
                          "name": "isTypeSupported",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "parameters": [
                            {
                              "id": 1502,
                              "name": "type",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1499]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [1500]
                    }
                  ]
                }
              }
            },
            {
              "id": 1387,
              "name": "ReadableStream",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 11008,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1388,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1389,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 11009,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1387,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "ReadableStream",
                        "package": "typescript",
                        "name": "ReadableStream"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1389]
                    }
                  ]
                }
              }
            },
            {
              "id": 1453,
              "name": "ReadableStreamDefaultReader",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 11030,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1454,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1455,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 11031,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1453,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "ReadableStreamDefaultReader",
                        "package": "typescript",
                        "name": "ReadableStreamDefaultReader"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1455]
                    }
                  ]
                }
              }
            },
            {
              "id": 1295,
              "name": "Response",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 11146,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1296,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1297,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 11147,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1295,
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    },
                    {
                      "id": 1298,
                      "name": "error",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isExternal": true
                      },
                      "signatures": [
                        {
                          "id": 1299,
                          "name": "error",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 1295,
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1300,
                      "name": "redirect",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isExternal": true
                      },
                      "signatures": [
                        {
                          "id": 1301,
                          "name": "redirect",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "parameters": [
                            {
                              "id": 1302,
                              "name": "url",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 1426,
                                    "qualifiedName": "URL",
                                    "package": "typescript",
                                    "name": "URL"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1303,
                              "name": "status",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 1295,
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1297]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [1298, 1300]
                    }
                  ]
                }
              }
            },
            {
              "id": 1593,
              "name": "SourceBuffer",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 13137,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1594,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1595,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 13138,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1593,
                        "qualifiedName": "SourceBuffer",
                        "package": "typescript",
                        "name": "SourceBuffer"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1595]
                    }
                  ]
                }
              }
            },
            {
              "id": 1680,
              "name": "TimeRanges",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 13713,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1681,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1682,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 13714,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1680,
                        "qualifiedName": "TimeRanges",
                        "package": "typescript",
                        "name": "TimeRanges"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1682]
                    }
                  ]
                }
              }
            },
            {
              "id": 1426,
              "name": "URL",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 13865,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1427,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1428,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 13866,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1426,
                        "qualifiedName": "URL",
                        "package": "typescript",
                        "name": "URL"
                      }
                    },
                    {
                      "id": 1429,
                      "name": "createObjectURL",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isExternal": true
                      },
                      "signatures": [
                        {
                          "id": 1430,
                          "name": "createObjectURL",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "parameters": [
                            {
                              "id": 1431,
                              "name": "obj",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 1409,
                                    "qualifiedName": "Blob",
                                    "package": "typescript",
                                    "name": "Blob"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 1497,
                                    "qualifiedName": "MediaSource",
                                    "package": "typescript",
                                    "name": "MediaSource"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1432,
                      "name": "revokeObjectURL",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isExternal": true
                      },
                      "signatures": [
                        {
                          "id": 1433,
                          "name": "revokeObjectURL",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "parameters": [
                            {
                              "id": 1434,
                              "name": "url",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1428]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [1429, 1432]
                    }
                  ]
                }
              }
            },
            {
              "id": 1484,
              "name": "WritableStream",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 16363,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1485,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1486,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 16364,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1484,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "WritableStream",
                        "package": "typescript",
                        "name": "WritableStream"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1486]
                    }
                  ]
                }
              }
            },
            {
              "id": 1575,
              "name": "WritableStreamDefaultWriter",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 16389,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1576,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1577,
                      "name": "prototype",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 16390,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1575,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "WritableStreamDefaultWriter",
                        "package": "typescript",
                        "name": "WritableStreamDefaultWriter"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1577]
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Interfaces",
              "kind": 256,
              "children": [
                1351, 1564, 1466, 1669, 1412, 1329, 1472, 1503, 1665, 1390, 1677, 1673, 1456, 1567,
                1474, 1280, 1304, 1596, 1692, 1479, 1683, 1435, 1487, 1578
              ]
            },
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [
                1691, 1698, 1342, 1566, 1664, 1471, 1326, 1294, 1277, 1573, 1572, 1347, 1343, 1344,
                1345, 1346, 1386, 1452
              ]
            },
            {
              "title": "Variables",
              "kind": 32,
              "children": [1348, 1409, 1497, 1387, 1453, 1295, 1593, 1680, 1426, 1484, 1575]
            }
          ]
        },
        {
          "id": 472,
          "name": "Paginator",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isAbstract": true
          },
          "comment": {
            "shortText": "Base class for a paginator.",
            "tags": [
              {
                "tag": "menu-group",
                "text": "Pagination"
              },
              {
                "tag": "extract-docs",
                "text": "\n"
              }
            ]
          },
          "originalName": "default",
          "children": [
            {
              "id": 473,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 115,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 474,
                  "name": "new Paginator",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "see",
                        "text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 476,
                      "name": "State",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 475,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    },
                    {
                      "id": 478,
                      "name": "InternalState",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 477,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 479,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    },
                    {
                      "id": 480,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": null
                      },
                      "defaultValue": "null"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 472,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 476,
                        "name": "State"
                      },
                      {
                        "type": "reference",
                        "id": 478,
                        "name": "InternalState"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 481,
              "name": "currentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 100,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 476,
                "name": "State"
              },
              "implementationOf": {
                "type": "reference",
                "id": 405,
                "name": "PaginatorInterface.currentState"
              }
            },
            {
              "id": 482,
              "name": "internalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 101,
                  "character": 4
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 478,
                    "name": "InternalState"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 483,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 484,
                          "name": "responseIsSet",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                              "line": 101,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [484]
                        }
                      ]
                    }
                  }
                ]
              },
              "implementationOf": {
                "type": "reference",
                "id": 406,
                "name": "PaginatorInterface.internalState"
              }
            },
            {
              "id": 485,
              "name": "setCurrentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 102,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 486,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 487,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 488,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 476,
                            "name": "State"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "implementationOf": {
                "type": "reference",
                "id": 407,
                "name": "PaginatorInterface.setCurrentState"
              }
            },
            {
              "id": 489,
              "name": "setInternalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 103,
                  "character": 4
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 490,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 491,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 492,
                          "name": "set",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 478,
                            "name": "InternalState"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "implementationOf": {
                "type": "reference",
                "id": 410,
                "name": "PaginatorInterface.setInternalState"
              }
            },
            {
              "id": 493,
              "name": "responseIsSet",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 108,
                  "character": 8
                }
              ],
              "getSignature": [
                {
                  "id": 494,
                  "name": "responseIsSet",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "True once setResponse has been called and pagination state is known."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 413,
                    "name": "PaginatorInterface.responseIsSet"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 413,
                "name": "PaginatorInterface.responseIsSet"
              }
            },
            {
              "id": 505,
              "name": "first",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 202,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 506,
                  "name": "first",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the first page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 417,
                    "name": "PaginatorInterface.first"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 416,
                "name": "PaginatorInterface.first"
              }
            },
            {
              "id": 507,
              "name": "firstState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 211,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 508,
                  "name": "firstState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the first page",
                    "text": "Does not transition state. To transition state call `first` instead.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 476,
                    "name": "State"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 419,
                    "name": "PaginatorInterface.firstState"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 418,
                "name": "PaginatorInterface.firstState"
              }
            },
            {
              "id": 499,
              "name": "getRequestInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 184,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 500,
                  "name": "getRequestInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
                  },
                  "parameters": [
                    {
                      "id": 501,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The existing options for the endpoint\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 392,
                        "name": "PaginatorRequestOptions"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 392,
                    "name": "PaginatorRequestOptions"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 429,
                    "name": "PaginatorInterface.getRequestInit"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 428,
                "name": "PaginatorInterface.getRequestInit"
              }
            },
            {
              "id": 517,
              "name": "hasNextPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 250,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 518,
                  "name": "hasNextPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns true if there's more results after the current page"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 415,
                    "name": "PaginatorInterface.hasNextPage"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 414,
                "name": "PaginatorInterface.hasNextPage"
              }
            },
            {
              "id": 509,
              "name": "next",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 218,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 510,
                  "name": "next",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the next page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 421,
                    "name": "PaginatorInterface.next"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 420,
                "name": "PaginatorInterface.next"
              }
            },
            {
              "id": 511,
              "name": "nextState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 227,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 512,
                  "name": "nextState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the next page",
                    "text": "Does not transition state. To transition state call `next` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 476,
                        "name": "State"
                      }
                    ]
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 423,
                    "name": "PaginatorInterface.nextState"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 422,
                "name": "PaginatorInterface.nextState"
              }
            },
            {
              "id": 513,
              "name": "previous",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 234,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 514,
                  "name": "previous",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Go to the previous page."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 425,
                    "name": "PaginatorInterface.previous"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 424,
                "name": "PaginatorInterface.previous"
              }
            },
            {
              "id": 515,
              "name": "previousState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 243,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 516,
                  "name": "previousState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return the state for the previous page",
                    "text": "Does not transition state. To transition state call `previous` instead.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 476,
                        "name": "State"
                      }
                    ]
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 427,
                    "name": "PaginatorInterface.previousState"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 426,
                "name": "PaginatorInterface.previousState"
              }
            },
            {
              "id": 495,
              "name": "replaceStateControllers",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 151,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 496,
                  "name": "replaceStateControllers",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
                    "text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
                  },
                  "parameters": [
                    {
                      "id": 497,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 498,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 435,
                    "name": "PaginatorInterface.replaceStateControllers"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 434,
                "name": "PaginatorInterface.replaceStateControllers"
              }
            },
            {
              "id": 502,
              "name": "setResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 195,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 503,
                  "name": "setResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "This is called when an `Endpoint` has resolved and is passed the response from the\nendpoint. This is used to update the relevant paginator state  - eg. the total\nnumber of records, next & previous cursors etc."
                  },
                  "parameters": [
                    {
                      "id": 504,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The response as returned by the endpoint this paginator is used with.\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "id": 432,
                    "name": "PaginatorInterface.setResponse"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "id": 431,
                "name": "PaginatorInterface.setResponse"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [473]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [481, 482, 485, 489]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [493]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [505, 507, 499, 517, 509, 511, 513, 515, 495, 502]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
              "line": 98,
              "character": 30
            }
          ],
          "typeParameter": [
            {
              "id": 520,
              "name": "State",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 519,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 98,
                      "character": 54
                    }
                  ]
                }
              }
            },
            {
              "id": 522,
              "name": "InternalState",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 521,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 98,
                      "character": 80
                    }
                  ]
                }
              }
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 70,
              "name": "CursorPaginator"
            },
            {
              "type": "reference",
              "id": 242,
              "name": "LimitOffsetPaginator"
            },
            {
              "type": "reference",
              "id": 318,
              "name": "PageNumberPaginator"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "id": 404,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 476,
                  "name": "State"
                },
                {
                  "type": "reference",
                  "id": 478,
                  "name": "InternalState"
                }
              ],
              "name": "PaginatorInterface"
            }
          ]
        },
        {
          "id": 404,
          "name": "PaginatorInterface",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 405,
              "name": "currentState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 66,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 439,
                "name": "State"
              }
            },
            {
              "id": 406,
              "name": "internalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 67,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "id": 441,
                "name": "InternalState"
              }
            },
            {
              "id": 413,
              "name": "responseIsSet",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 70,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 416,
              "name": "first",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 417,
                  "name": "first",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 418,
              "name": "firstState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 419,
                  "name": "firstState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 439,
                        "name": "State"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 428,
              "name": "getRequestInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 429,
                  "name": "getRequestInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 430,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 392,
                        "name": "PaginatorRequestOptions"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 392,
                    "name": "PaginatorRequestOptions"
                  }
                }
              ]
            },
            {
              "id": 414,
              "name": "hasNextPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 415,
                  "name": "hasNextPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            },
            {
              "id": 420,
              "name": "next",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 421,
                  "name": "next",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 422,
              "name": "nextState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 423,
                  "name": "nextState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 439,
                        "name": "State"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 424,
              "name": "previous",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 425,
                  "name": "previous",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 426,
              "name": "previousState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 427,
                  "name": "previousState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 439,
                        "name": "State"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 434,
              "name": "replaceStateControllers",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 435,
                  "name": "replaceStateControllers",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 436,
                      "name": "currentStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 437,
                      "name": "internalStatePair",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 407,
              "name": "setCurrentState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 68,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 408,
                  "name": "setCurrentState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 409,
                      "name": "set",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 439,
                        "name": "State"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 410,
              "name": "setInternalState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 69,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 411,
                  "name": "setInternalState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 412,
                      "name": "set",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 441,
                        "name": "InternalState"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 431,
              "name": "setResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 432,
                  "name": "setResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 433,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [405, 406, 413]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [416, 418, 428, 414, 420, 422, 424, 426, 434, 407, 410, 431]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
              "line": 65,
              "character": 17
            }
          ],
          "typeParameter": [
            {
              "id": 439,
              "name": "State",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "reflection",
                "declaration": {
                  "id": 438,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 65,
                      "character": 44
                    }
                  ]
                }
              }
            },
            {
              "id": 441,
              "name": "InternalState",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "reflection",
                "declaration": {
                  "id": 440,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 65,
                      "character": 64
                    }
                  ]
                }
              }
            }
          ],
          "implementedBy": [
            {
              "type": "reference",
              "id": 136,
              "name": "InferredPaginator"
            },
            {
              "type": "reference",
              "id": 472,
              "name": "Paginator"
            }
          ]
        },
        {
          "id": 442,
          "name": "PaginatorInterfaceClass",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 469,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 470,
                  "name": "new PaginatorInterfaceClass",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 471,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 468,
                    "name": "T"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Function.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.constructor"
              }
            },
            {
              "id": 462,
              "name": "arguments",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 304,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.arguments"
              }
            },
            {
              "id": 463,
              "name": "caller",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 305,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "Function",
                "package": "typescript",
                "name": "Function"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.caller"
              }
            },
            {
              "id": 461,
              "name": "length",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 301,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.length"
              }
            },
            {
              "id": 464,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true,
                "isReadonly": true
              },
              "comment": {
                "shortText": "Returns the name of the function. Function names are read-only and can not be changed."
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
                  "line": 97,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.name"
              }
            },
            {
              "id": 460,
              "name": "prototype",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 300,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.prototype"
              }
            },
            {
              "id": 465,
              "name": "[hasInstance]",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExternal": true
              },
              "signatures": [
                {
                  "id": 466,
                  "name": "[hasInstance]",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
                    "text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
                  },
                  "parameters": [
                    {
                      "id": 467,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Function.__@hasInstance@71"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.__@hasInstance@71"
              }
            },
            {
              "id": 446,
              "name": "apply",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExternal": true
              },
              "signatures": [
                {
                  "id": 447,
                  "name": "apply",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
                  },
                  "parameters": [
                    {
                      "id": 448,
                      "name": "thisArg",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "The object to be used as the this object."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 449,
                      "name": "argArray",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A set of arguments to be passed to the function.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Function.apply"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.apply"
              }
            },
            {
              "id": 454,
              "name": "bind",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExternal": true
              },
              "signatures": [
                {
                  "id": 455,
                  "name": "bind",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
                  },
                  "parameters": [
                    {
                      "id": 456,
                      "name": "thisArg",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "An object to which the this keyword can refer inside the new function."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 457,
                      "name": "argArray",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true,
                        "isRest": true
                      },
                      "comment": {
                        "shortText": "A list of arguments to be passed to the new function.\n"
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Function.bind"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.bind"
              }
            },
            {
              "id": 450,
              "name": "call",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExternal": true
              },
              "signatures": [
                {
                  "id": 451,
                  "name": "call",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Calls a method of an object, substituting another object for the current object."
                  },
                  "parameters": [
                    {
                      "id": 452,
                      "name": "thisArg",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "The object to be used as the current object."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 453,
                      "name": "argArray",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true,
                        "isRest": true
                      },
                      "comment": {
                        "shortText": "A list of arguments to be passed to the method.\n"
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Function.call"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.call"
              }
            },
            {
              "id": 443,
              "name": "getPaginationState",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 444,
                  "name": "getPaginationState",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 445,
                      "name": "requestDetails",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 397,
                        "name": "PaginationRequestDetails"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": false
                      },
                      {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 458,
              "name": "toString",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExternal": true
              },
              "signatures": [
                {
                  "id": 459,
                  "name": "toString",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Returns a string representation of a function."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Function.toString"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Function.toString"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [469]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [462, 463, 461, 464, 460]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [465, 446, 454, 450, 443, 458]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
              "line": 85,
              "character": 17
            }
          ],
          "typeParameter": [
            {
              "id": 468,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 404,
                "name": "PaginatorInterface"
              },
              "default": {
                "type": "reference",
                "id": 404,
                "name": "PaginatorInterface"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "qualifiedName": "Function",
              "package": "typescript",
              "name": "Function"
            }
          ]
        },
        {
          "id": 397,
          "name": "PaginationRequestDetails",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expand-properties",
                "text": "eg. the return value from [Endpoint.execute](doc:Endpoint#method-execute)\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
              "line": 20,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 398,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 403,
                  "name": "decodedBody",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The value returned by `decodedBody`. See [Endpoint.execute](doc:Endpoint#method-execute).",
                    "text": "This may be a sub-key of the data returned by `Endpoint.execute`, eg. if the `path` option is used in\n[paginationMiddleware](doc:paginationMiddleware). eg. If `decodedBody` from the `Endpoint` was\n\n```json\n{\n    users: {\n        count: 10,\n        results: [...],\n    }\n    extraDetails: {...}\n}\n```\n\nand `paginationMiddleware` was used with `path: 'users'` then `decodedBody` would be:\n\n```json\n{\n    count: 10,\n    results: [...]\n}\n```\n"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 62,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 399,
                  "name": "query",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Any query string parameters"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 24,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1273,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 402,
                  "name": "response",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The `Response` object, if available"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 36,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1295,
                    "qualifiedName": "Response",
                    "package": "typescript",
                    "name": "Response"
                  }
                },
                {
                  "id": 401,
                  "name": "url",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Resolved URL"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 32,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 400,
                  "name": "urlArgs",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Any arguments used to resolve URL"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 28,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1273,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [403, 399, 402, 401, 400]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                  "line": 20,
                  "character": 39
                }
              ]
            }
          }
        },
        {
          "id": 392,
          "name": "PaginatorRequestOptions",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
              "line": 1,
              "character": 12
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "id": 1277,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1280,
                    "qualifiedName": "RequestInit",
                    "package": "typescript",
                    "name": "RequestInit"
                  },
                  {
                    "type": "literal",
                    "value": "headers"
                  }
                ],
                "qualifiedName": "Omit",
                "package": "typescript",
                "name": "Omit"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 393,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 394,
                      "name": "headers",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Any headers to add to the request. You can unset default headers that might be specified in the default\n`Endpoint.defaultConfig.requestInit` by setting the value to `undefined`."
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                          "line": 6,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "id": 1294,
                            "qualifiedName": "HeadersInit",
                            "package": "typescript",
                            "name": "HeadersInit"
                          },
                          {
                            "type": "reference",
                            "id": 1273,
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        ]
                      }
                    },
                    {
                      "id": 396,
                      "name": "query",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Any query request parameters"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                          "line": 14,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 395,
                      "name": "urlArgs",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Any arguments for the [URL](doc:UrlPattern)"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                          "line": 10,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [394, 396, 395]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
                      "line": 1,
                      "character": 69
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1276]
        },
        {
          "title": "Classes",
          "kind": 128,
          "children": [472]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [404, 442]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [397, 392]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 523,
      "name": "pagination/usePaginator",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 524,
          "name": "PaginatorClassProvider",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 525,
              "name": "getPaginatorClass",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 526,
                  "name": "getPaginatorClass",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 442,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 527,
                            "name": "T"
                          }
                        ],
                        "name": "PaginatorInterfaceClass"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [525]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
              "line": 4,
              "character": 17
            }
          ],
          "typeParameter": [
            {
              "id": 527,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 404,
                "name": "PaginatorInterface"
              }
            }
          ]
        },
        {
          "id": 528,
          "name": "usePaginator",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "originalName": "default",
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
              "line": 28,
              "character": 24
            }
          ],
          "signatures": [
            {
              "id": 529,
              "name": "usePaginator",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Hook to help manage paginator state. An instance of the specified paginator is created with provided\nstate setter or a default setter if none provided. You only need to provide a state setter if you\nwant to store the state somewhere external eg. from URL query parameters.",
                "tags": [
                  {
                    "tag": "menu-group",
                    "text": "Pagination"
                  },
                  {
                    "tag": "extract-docs",
                    "text": "\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 532,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 404,
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 530,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 531,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      {
                        "type": "reference",
                        "id": 532,
                        "name": "T"
                      }
                    ],
                    "name": "PaginatorInterface"
                  }
                },
                {
                  "id": 533,
                  "name": "PaginatorState",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 534,
                  "name": "paginatorClassOrProvider",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Must either be an object with a `getPaginatorClass` method (eg.\n[Endpoint](doc:Endpoint)) or a [Paginator](doc:Paginator) class. This class defines how pagination is\nhandled."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 442,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 532,
                            "name": "T"
                          }
                        ],
                        "name": "PaginatorInterfaceClass"
                      },
                      {
                        "type": "reference",
                        "id": 524,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 532,
                            "name": "T"
                          }
                        ],
                        "name": "PaginatorClassProvider"
                      }
                    ]
                  }
                },
                {
                  "id": 535,
                  "name": "currentStatePair",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A tuple of current state and a state setter function. If not provided state\nis handled internally in usePaginator. You can pass `useState()` to this parameter.\n"
                  },
                  "type": {
                    "type": "tuple",
                    "elements": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "id": 533,
                            "name": "PaginatorState"
                          }
                        ]
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 536,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 537,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 538,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 533,
                                    "name": "PaginatorState"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 532,
                "name": "T"
              }
            },
            {
              "id": 539,
              "name": "usePaginator",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 540,
                  "name": "PaginatorState",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 541,
                  "name": "paginatorClassOrProvider",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 542,
                  "name": "currentStatePair",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "tuple",
                    "elements": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "id": 540,
                            "name": "PaginatorState"
                          }
                        ]
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 543,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 544,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 545,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 540,
                                    "name": "PaginatorState"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "literal",
                "value": null
              }
            },
            {
              "id": 546,
              "name": "usePaginator",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 549,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 404,
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 547,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 548,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      {
                        "type": "reference",
                        "id": 549,
                        "name": "T"
                      }
                    ],
                    "name": "PaginatorInterface"
                  }
                },
                {
                  "id": 550,
                  "name": "PaginatorState",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 551,
                  "name": "paginatorClassOrProvider",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 442,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 549,
                            "name": "T"
                          }
                        ],
                        "name": "PaginatorInterfaceClass"
                      },
                      {
                        "type": "reference",
                        "id": 524,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 549,
                            "name": "T"
                          }
                        ],
                        "name": "PaginatorClassProvider"
                      }
                    ]
                  }
                },
                {
                  "id": 552,
                  "name": "currentStatePair",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "tuple",
                    "elements": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "id": 550,
                            "name": "PaginatorState"
                          }
                        ]
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 553,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 554,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 555,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 550,
                                    "name": "PaginatorState"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 549,
                    "name": "T"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [524]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [528]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 556,
      "name": "time",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1699,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1713,
              "name": "CallSite",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1728,
                  "name": "getColumnNumber",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1729,
                      "name": "getColumnNumber",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Current column number [if this function was defined in a script]"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1730,
                  "name": "getEvalOrigin",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1731,
                      "name": "getEvalOrigin",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "A call site object representing the location where eval was called\n[if this function was created using a call to eval]"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1724,
                  "name": "getFileName",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1725,
                      "name": "getFileName",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Name of the script [if this function was defined in a script]"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1718,
                  "name": "getFunction",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1719,
                      "name": "getFunction",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Current function"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "Function",
                            "package": "typescript",
                            "name": "Function"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1720,
                  "name": "getFunctionName",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1721,
                      "name": "getFunctionName",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Name of the current function, typically its name property.\nIf a name property is not available an attempt will be made to try\nto infer a name from the function's context."
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1726,
                  "name": "getLineNumber",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1727,
                      "name": "getLineNumber",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Current line number [if this function was defined in a script]"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1722,
                  "name": "getMethodName",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1723,
                      "name": "getMethodName",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Name of the property [of \"this\" or one of its prototypes] that holds\nthe current function"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1714,
                  "name": "getThis",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1715,
                      "name": "getThis",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Value of \"this\""
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                },
                {
                  "id": 1716,
                  "name": "getTypeName",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1717,
                      "name": "getTypeName",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Type of \"this\" as a string.\nThis is the name of the function stored in the constructor field of\n\"this\", if available.  Otherwise the object's [[Class]] internal\nproperty."
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "id": 1738,
                  "name": "isConstructor",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1739,
                      "name": "isConstructor",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Is this a constructor call?"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ]
                },
                {
                  "id": 1734,
                  "name": "isEval",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1735,
                      "name": "isEval",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Does this call take place in code defined by a call to eval?"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ]
                },
                {
                  "id": 1736,
                  "name": "isNative",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1737,
                      "name": "isNative",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Is this call in native V8 code?"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ]
                },
                {
                  "id": 1732,
                  "name": "isToplevel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isExternal": true
                  },
                  "signatures": [
                    {
                      "id": 1733,
                      "name": "isToplevel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {
                        "isExternal": true
                      },
                      "comment": {
                        "shortText": "Is this a toplevel invocation, that is, is \"this\" the global object?"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    1728, 1730, 1724, 1718, 1720, 1726, 1722, 1714, 1716, 1738, 1734, 1736, 1732
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/node/globals.d.ts",
                  "line": 471,
                  "character": 14
                }
              ]
            },
            {
              "id": 1740,
              "name": "DateTimeFormatOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1746,
                  "name": "day",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4418,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "numeric"
                      },
                      {
                        "type": "literal",
                        "value": "2-digit"
                      }
                    ]
                  }
                },
                {
                  "id": 1743,
                  "name": "era",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4415,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "long"
                      },
                      {
                        "type": "literal",
                        "value": "short"
                      },
                      {
                        "type": "literal",
                        "value": "narrow"
                      }
                    ]
                  }
                },
                {
                  "id": 1751,
                  "name": "formatMatcher",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4423,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "basic"
                      },
                      {
                        "type": "literal",
                        "value": "best fit"
                      }
                    ]
                  }
                },
                {
                  "id": 1747,
                  "name": "hour",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4419,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "numeric"
                      },
                      {
                        "type": "literal",
                        "value": "2-digit"
                      }
                    ]
                  }
                },
                {
                  "id": 1752,
                  "name": "hour12",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4424,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 1741,
                  "name": "localeMatcher",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4413,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "best fit"
                      },
                      {
                        "type": "literal",
                        "value": "lookup"
                      }
                    ]
                  }
                },
                {
                  "id": 1748,
                  "name": "minute",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4420,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "numeric"
                      },
                      {
                        "type": "literal",
                        "value": "2-digit"
                      }
                    ]
                  }
                },
                {
                  "id": 1745,
                  "name": "month",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4417,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "long"
                      },
                      {
                        "type": "literal",
                        "value": "short"
                      },
                      {
                        "type": "literal",
                        "value": "narrow"
                      },
                      {
                        "type": "literal",
                        "value": "numeric"
                      },
                      {
                        "type": "literal",
                        "value": "2-digit"
                      }
                    ]
                  }
                },
                {
                  "id": 1749,
                  "name": "second",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4421,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "numeric"
                      },
                      {
                        "type": "literal",
                        "value": "2-digit"
                      }
                    ]
                  }
                },
                {
                  "id": 1753,
                  "name": "timeZone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4425,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1750,
                  "name": "timeZoneName",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4422,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "long"
                      },
                      {
                        "type": "literal",
                        "value": "short"
                      }
                    ]
                  }
                },
                {
                  "id": 1742,
                  "name": "weekday",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4414,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "long"
                      },
                      {
                        "type": "literal",
                        "value": "short"
                      },
                      {
                        "type": "literal",
                        "value": "narrow"
                      }
                    ]
                  }
                },
                {
                  "id": 1744,
                  "name": "year",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 4416,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "numeric"
                      },
                      {
                        "type": "literal",
                        "value": "2-digit"
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    1746, 1743, 1751, 1747, 1752, 1741, 1748, 1745, 1749, 1753, 1750, 1742, 1744
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 4412,
                  "character": 14
                }
              ]
            },
            {
              "id": 1707,
              "name": "TimeFormatOptions",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "expand-properties",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/time.ts",
                  "line": 92,
                  "character": 5
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1708,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1710,
                      "name": "localeOptions",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Options to pass through to [toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_options)"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/time.ts",
                          "line": 100,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "reference",
                            "id": 1740,
                            "qualifiedName": "Intl.DateTimeFormatOptions",
                            "package": "typescript",
                            "name": "Intl.DateTimeFormatOptions"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1711,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1712,
                                  "name": "timeStyle",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "js-packages/@prestojs/util/src/time.ts",
                                      "line": 102,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "full"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "long"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "medium"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "short"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1712]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "js-packages/@prestojs/util/src/time.ts",
                                  "line": 100,
                                  "character": 49
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 1709,
                      "name": "locales",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Optional locales to use. See [using locales](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_locales) for more information."
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/time.ts",
                          "line": 96,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1710, 1709]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/time.ts",
                      "line": 92,
                      "character": 25
                    }
                  ]
                }
              }
            },
            {
              "id": 1700,
              "name": "TimeParts",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "expand-properties",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/time.ts",
                  "line": 6,
                  "character": 5
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1701,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1702,
                      "name": "hour",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/time.ts",
                          "line": 7,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1705,
                      "name": "millisecond",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/time.ts",
                          "line": 10,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1703,
                      "name": "minute",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/time.ts",
                          "line": 8,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1704,
                      "name": "second",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/time.ts",
                          "line": 9,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1706,
                      "name": "timezoneOffset",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "The difference in minutes between a date as evaluated in the UTC time zone and the same date in the local time zone."
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/time.ts",
                          "line": 14,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1702, 1705, 1703, 1704, 1706]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/time.ts",
                      "line": 6,
                      "character": 17
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Interfaces",
              "kind": 256,
              "children": [1713, 1740]
            },
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [1707, 1700]
            }
          ]
        },
        {
          "id": 564,
          "name": "InvalidTimeError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 574,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 575,
                  "name": "new InvalidTimeError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 576,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 564,
                    "name": "InvalidTimeError"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Error.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Error.constructor"
              }
            },
            {
              "id": 578,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1023,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 577,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1022,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Error.name"
              }
            },
            {
              "id": 579,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1024,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Error.stack"
              }
            },
            {
              "id": 573,
              "name": "stackTraceLimit",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/node/globals.d.ts",
                  "line": 117,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Error.stackTraceLimit"
              }
            },
            {
              "id": 565,
              "name": "captureStackTrace",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExternal": true
              },
              "signatures": [
                {
                  "id": 566,
                  "name": "captureStackTrace",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Create .stack property on a target object"
                  },
                  "parameters": [
                    {
                      "id": 567,
                      "name": "targetObject",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    },
                    {
                      "id": 568,
                      "name": "constructorOpt",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "Function",
                        "package": "typescript",
                        "name": "Function"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Error.captureStackTrace"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Error.captureStackTrace"
              }
            },
            {
              "id": 569,
              "name": "prepareStackTrace",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/node/globals.d.ts",
                  "line": 115,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 570,
                  "name": "prepareStackTrace",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "shortText": "Optional override for formatting stack traces",
                    "tags": [
                      {
                        "tag": "see",
                        "text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 571,
                      "name": "err",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 1168,
                        "qualifiedName": "Error",
                        "package": "typescript",
                        "name": "Error"
                      }
                    },
                    {
                      "id": 572,
                      "name": "stackTraces",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 1713,
                          "qualifiedName": "NodeJS.CallSite",
                          "package": "@types/node",
                          "name": "CallSite"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "Error.prepareStackTrace"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "Error.prepareStackTrace"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [574]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [578, 577, 579, 573]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [565, 569]
            }
          ],
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/time.ts",
              "line": 17,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1168,
              "qualifiedName": "Error",
              "package": "typescript",
              "name": "Error"
            }
          ]
        },
        {
          "id": 560,
          "name": "formatTime",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/time.ts",
              "line": 116,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 561,
              "name": "formatTime",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Format the parts of a time - as returned by [parseTime](doc:parseTime) - as a string using\n[toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_options).",
                "text": "Note that while you can pass through `options.timeZone` this may be inaccurate if `parts.timezoneOffset` isn't\nsupplied.\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Time\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 562,
                  "name": "parts",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "qualifiedName": "Date",
                        "package": "typescript",
                        "name": "Date"
                      },
                      {
                        "type": "reference",
                        "id": 1700,
                        "name": "TimeParts"
                      }
                    ]
                  }
                },
                {
                  "id": 563,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1707,
                    "name": "TimeFormatOptions"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 557,
          "name": "parseTime",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/time.ts",
              "line": 49,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 558,
              "name": "parseTime",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Parse a string into its constituent time parts",
                "text": "Returns an object containing the `hour`, `minute`, `second`, `millisecond` and optional `timezone` values.\n\nAccepts input of the form `H:MM[:SS[:.mmm:[+TZ]]]` where `H` is hours, `MM` is minutes, `SS` is seconds, `mmm` is\nmilliseconds and `+TZ` is the timezone (eg. +10:00).\n\nSeconds & milliseconds are optional and will default to 0 if not in the string, timezone is optional and will be\nleft as undefined if not specified.\n\nNOTE: If you pass a `Date` object then the timezone offset will always be whatever the local browser/env timezone\nis (ie. it's not possible to have a javascript `Date` object in another timezone).\n\n```js\nparseTime(\"3:55\")\n// { hour: 3, minute: 55, seconds: 0, milliseconds: 0 }\nparseTime(\"03:55:20\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 0 }\nparseTime(\"03:55:20.600\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600 }\nparseTime(\"03:55:20.600+10:00\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600, timezoneOffset: -600 }\n```\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": ""
                  },
                  {
                    "tag": "menu-group",
                    "text": "Time\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 559,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The string value to parse\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "qualifiedName": "Date",
                        "package": "typescript",
                        "name": "Date"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1700,
                "name": "TimeParts"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1699]
        },
        {
          "title": "Classes",
          "kind": 128,
          "children": [564]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [560, 557]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/time.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 580,
      "name": "useAsync",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1754,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1764,
              "name": "useAsync",
              "kind": 4,
              "kindString": "Namespace",
              "flags": {},
              "children": [
                {
                  "id": 1766,
                  "name": "DEEP",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1765,
                  "name": "MANUAL",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1767,
                  "name": "SHALLOW",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Variables",
                  "kind": 32,
                  "children": [1766, 1765, 1767]
                }
              ]
            },
            {
              "id": 1770,
              "name": "DEEP",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                  "line": 68,
                  "character": 6
                }
              ],
              "type": {
                "type": "literal",
                "value": "DEEP"
              },
              "defaultValue": "'DEEP'"
            },
            {
              "id": 1768,
              "name": "MANUAL",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                  "line": 66,
                  "character": 6
                }
              ],
              "type": {
                "type": "literal",
                "value": "MANUAL"
              },
              "defaultValue": "'MANUAL'"
            },
            {
              "id": 1769,
              "name": "SHALLOW",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                  "line": 67,
                  "character": 6
                }
              ],
              "type": {
                "type": "literal",
                "value": "SHALLOW"
              },
              "defaultValue": "'SHALLOW'"
            },
            {
              "id": 1755,
              "name": "useAsync",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                  "line": 248,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 1756,
                  "name": "useAsync",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Hook to deal with triggering async function calls and handling result / errors and loading states.",
                    "text": "This can be used in two distinct modes:\n - _manual_ (`useAsync.MANUAL`) - the function is only triggered explicitly\n - _automatic_ (`useAsync.DEEP` or `useAsync.SHALLOW`) - the function is triggered initially\nand then automatically when argument values change (using a shallow or deep comparison).\n\nFor mutations you usually want _manual_ as it is triggered in response to some user action\nlike pressing a button.\n\nFor data fetching you usually want _automatic_ mode as you retrieve some data\ninitially and then refetch it when some arguments change (eg. the id for a single\nrecord or the filters for a list).\n\n## Examples\n\nFetch and render a specified github profile\n\n```js live horizontal\nfunction FollowerCount() {\n    const [user, setUser] = React.useState('octocat')\n    const { result, isLoading, error, run, reset } = useAsync(() => getGithubUser(user));\n    return (\n        <div>\n            <input value={user} onChange={e => setUser(e.target.value)} />\n            <div className=\"my-2 justify-between flex\">\n            <button onClick={run} disabled={isLoading} className=\"btn-blue\">Query follower count</button>\n            <button className=\"btn\" onClick={reset}>Clear</button>\n            </div>\n            {result && (\n                <p>\n                    <img src={result.avatar_url} /><br />\n                    {result.name} has {result.followers} followers\n                </p>\n            )}\n            {error && (<p>Failed with status: {error.status} {error.statusText}</p>)}\n        </div>\n    );\n}\n// we don't define this inside FollowerCount() because that will create a new function on\n// every render, causing useAsync() to re-run and triggering an infinite render loop\nfunction getGithubUser(user) {\n  return fetch(`https://api.github.com/users/${user}`).then(r => {\n     if (r.ok) {\n         return r.json();\n     }\n     throw r;\n  });\n}\n```",
                    "tags": [
                      {
                        "tag": "extract-docs",
                        "text": "\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 1757,
                      "name": "ResultT",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {}
                    },
                    {
                      "id": 1758,
                      "name": "ErrorT",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "id": 1168,
                        "qualifiedName": "Error",
                        "package": "typescript",
                        "name": "Error"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1759,
                      "name": "fn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "A function that returns a promise. When `trigger` is `MANUAL` this is only\ncalled when you manually call the returned `run` function, otherwise it's called\ninitially and then whenever an equality comparison fails between previous arguments and new\narguments. Note that when `trigger` is `SHALLOW` or `DEEP` changes to this function will\ncause it to be called again so you must memoize it (eg. with `useCallback`) if it's defined\nin your component or hook. To help detect runaway effects caused by this automatically\nconsider using [stop-runaway-react-effects](https://github.com/kentcdodds/stop-runaway-react-effects).\n\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1760,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 1761,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1762,
                                  "name": "args",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isRest": true
                                  },
                                  "type": {
                                    "type": "array",
                                    "elementType": {
                                      "type": "intrinsic",
                                      "name": "any"
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 1757,
                                    "name": "ResultT"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 1763,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 581,
                        "name": "UseAsyncOptions"
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 592,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1757,
                        "name": "ResultT"
                      },
                      {
                        "type": "reference",
                        "id": 1758,
                        "name": "ErrorT"
                      }
                    ],
                    "name": "UseAsyncReturnObject"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Namespaces",
              "kind": 4,
              "children": [1764]
            },
            {
              "title": "Variables",
              "kind": 32,
              "children": [1770, 1768, 1769]
            },
            {
              "title": "Functions",
              "kind": 64,
              "children": [1755]
            }
          ]
        },
        {
          "id": 581,
          "name": "UseAsyncOptions",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expand-properties",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
              "line": 79,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 582,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 584,
                  "name": "args",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Arguments to be passed to asyncFn when it is called. Can be empty. If you are using `trigger` of\n`MANUAL` then it's usually simpler to just pass the arguments in `fn` manually (eg. by defining\nan arrow function inline). When using other values of `trigger` the value of `args` is compared\nand will trigger a call to `fn` when a change is detected according to the comparison logic of the\nselected `trigger`."
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 107,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                },
                {
                  "id": 583,
                  "name": "trigger",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Determines when the function is called. Defaults to `MANUAL`.",
                    "text": "**NOTE**: If changing from MANUAL then the function will be called immediately regardless\n\n**useAsync.MANUAL (default)** - only called when you explicitly call `run`\n\n**useAsync.SHALLOW** - called whenever a shallow equality check fails. Compares previous async function,\nand `option.args`. Passing an inline function (eg. `useAsync(() => ...)`) or an inline object\nto args (eg. `useAsync(fn, { args: { filter: 1 } })`) with this option will result in an\ninfinite loop because each render dynamically creates a new object and only object identity is checked;\nuse `useMemo` or `useCallback` in these cases.\n\n**useAsync.DEEP** - called whenever a deep equality check fails. Compares previous async function and\n`option.args`. Slower than `shallow` but works with objects that may change every render. Passing an\ninline function (eg. `useAsync(() => ...)`) with this option will result in an infinite loop as a new\nfunction is created each render and a deep equality check on this will always fail; use `useCallback` in\nthose cases.\n"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 99,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "query",
                        "queryType": {
                          "type": "reference",
                          "id": 1768,
                          "name": "MANUAL"
                        }
                      },
                      {
                        "type": "query",
                        "queryType": {
                          "type": "reference",
                          "id": 1769,
                          "name": "SHALLOW"
                        }
                      },
                      {
                        "type": "query",
                        "queryType": {
                          "type": "reference",
                          "id": 1770,
                          "name": "DEEP"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 589,
                  "name": "onError",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 124,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 590,
                      "name": "onError",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Called when action errors. Passed the error returned from async action.",
                        "text": "See note above on `onSuccess` for behaviour when component has unmounted.\n"
                      },
                      "parameters": [
                        {
                          "id": 591,
                          "name": "error",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 1168,
                            "qualifiedName": "Error",
                            "package": "typescript",
                            "name": "Error"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 585,
                  "name": "onSuccess",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 118,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 586,
                      "name": "onSuccess",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Called when action resolves successfully. Is passed a single parameter which\nis the result from the async action.",
                        "text": "**NOTE:** If your component unmounts before the promise resolves this function\nwill NOT be called. This is to avoid the general case of calling React\nstate transition functions on an unmounted component. If you want the\nmethod to be called regardless then attach your own callbacks to the\npromise when you call `run` or in the async function definition itself.\n"
                      },
                      "parameters": [
                        {
                          "id": 587,
                          "name": "result",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 588,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {}
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [584, 583]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [589, 585]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                  "line": 79,
                  "character": 30
                }
              ]
            }
          }
        },
        {
          "id": 592,
          "name": "UseAsyncReturnObject",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
              "line": 129,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 603,
              "name": "ResultT",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 604,
              "name": "ErrorT",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 593,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 595,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready.",
                    "text": "ROFL\n\n```tsx\nexport default function MyComponent() {\n // HEHE\n const y = 5 + 5;\n return <div>test</div>\n}\n```\n"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 149,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 604,
                        "name": "ErrorT"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 594,
                  "name": "isLoading",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "True when action is in progress."
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 133,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 597,
                  "name": "response",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use `result` instead\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 160,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 603,
                        "name": "ResultT"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 596,
                  "name": "result",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Set to the resolved value of promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready (for example showing\nthe previous page of a paginated table with a loading indicator while next page is loading)."
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 156,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 603,
                        "name": "ResultT"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 601,
                  "name": "reset",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 176,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 602,
                      "name": "reset",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "When called will set both result or error to null. Will not immediately trigger\na call to the action but subsequent changes to `fn` or `options.args` will\naccording to the value of `trigger`."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 598,
                  "name": "run",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                      "line": 170,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 599,
                      "name": "run",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "A function to manually trigger the action. If `options.trigger` is `useAsync.MANUAL`\ncalling this function is the only way to trigger the action. You can pass\narguments to `run` which will override the defaults. If no arguments are passed then\n`options.args` will be passed by default (if supplied).",
                        "text": "This function will return a promise that resolves/rejects to same value\nresolved/rejected from the async action.\n"
                      },
                      "parameters": [
                        {
                          "id": 600,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isRest": true
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 603,
                            "name": "ResultT"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [595, 594, 597, 596]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [601, 598]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                  "line": 129,
                  "character": 52
                }
              ]
            }
          }
        },
        {
          "id": 605,
          "name": "default",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 1755,
                  "name": "useAsync"
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 606,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 608,
                      "name": "DEEP",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isReadonly": true
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                          "line": 476,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "DEEP"
                      }
                    },
                    {
                      "id": 607,
                      "name": "MANUAL",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isReadonly": true
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                          "line": 475,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "MANUAL"
                      }
                    },
                    {
                      "id": 609,
                      "name": "SHALLOW",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isReadonly": true
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
                          "line": 477,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "SHALLOW"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [608, 607, 609]
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1754]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [581, 592]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [605]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/useAsync.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 610,
      "name": "useAsyncListing",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1771,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1782,
              "name": "UseAsyncListingExecuteProps",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "expand-properties",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                  "line": 9,
                  "character": 5
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1783,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1785,
                      "name": "paginator",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "The paginator instance, if any"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 17,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 404,
                            "name": "PaginatorInterface"
                          }
                        ]
                      }
                    },
                    {
                      "id": 1784,
                      "name": "query",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Any query parameters"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 13,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1273,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1785, 1784]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                      "line": 9,
                      "character": 35
                    }
                  ]
                }
              }
            },
            {
              "id": 1772,
              "name": "UseAsyncListingReturnCommon",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                  "line": 68,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1781,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1773,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1774,
                      "name": "isLoading",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "True while `execute` call is in progress."
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 72,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 1775,
                      "name": "paginator",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The same `paginator` passed in to `useAsyncListing`"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 76,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 404,
                            "name": "PaginatorInterface"
                          }
                        ]
                      }
                    },
                    {
                      "id": 1779,
                      "name": "reset",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 91,
                          "character": 4
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1780,
                          "name": "reset",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1776,
                      "name": "run",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 85,
                          "character": 4
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1777,
                          "name": "run",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
                            "text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
                          },
                          "parameters": [
                            {
                              "id": 1778,
                              "name": "args",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1781,
                                "name": "T"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1774, 1775]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [1779, 1776]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                      "line": 68,
                      "character": 38
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [1782, 1772]
            }
          ]
        },
        {
          "id": 611,
          "name": "UseAsyncListingProps",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expand-properties",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
              "line": 23,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 620,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 612,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 615,
                  "name": "accumulatePages",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Whether to accumulate pages as more results are fetched. For example\nif the first page of results is returned, then the next page is fetched\nthen the combined results for the first two pages will be resolved.",
                    "text": "This resets whenever `query` changes or if pagination state changes\nto anything other than the next page.\n\nIf this is true you must specify `paginator`.\n"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                      "line": 49,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 616,
                  "name": "paginator",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Optional paginator if result is paginated. This will be monitored for\nany state changes which will trigger a call to `execute`.",
                    "text": "Required if `accumulatePages` is true.\n"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                      "line": 56,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 404,
                        "name": "PaginatorInterface"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 614,
                  "name": "query",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Any query string parameters for the request"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                      "line": 38,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1273,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 613,
                  "name": "trigger",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "When to trigger the fetch. Defaults to `DEEP` which means whenever a deep\nequality check on `query` or `paginator` state fails it will refetch.",
                    "text": "If set to `MANUAL` nothing will happen until it changes to `DEEP` or you\ncall the returned `run` function. You can use this to defer execution until\nthe value is required.\n\nDefaults to 'DEEP'.\n"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                      "line": 34,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "MANUAL"
                      },
                      {
                        "type": "literal",
                        "value": "DEEP"
                      }
                    ]
                  }
                },
                {
                  "id": 617,
                  "name": "execute",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                      "line": 65,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 618,
                      "name": "execute",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Asynchronous function that returns the result for the query. Passed an\nobject with `query` and `paginator` keys.",
                        "text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
                      },
                      "parameters": [
                        {
                          "id": 619,
                          "name": "props",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 1782,
                            "name": "UseAsyncListingExecuteProps"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 620,
                            "name": "T"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [615, 616, 614, 613]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [617]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                  "line": 23,
                  "character": 38
                }
              ]
            }
          }
        },
        {
          "id": 621,
          "name": "UseAsyncListingReturn",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
              "line": 93,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 631,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 1772,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 631,
                        "name": "T"
                      }
                    ],
                    "name": "UseAsyncListingReturnCommon"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 622,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 623,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Until first call has resolved neither error nor result will be set"
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                              "line": 98,
                              "character": 10
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 624,
                          "name": "result",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                              "line": 99,
                              "character": 10
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [623, 624]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 94,
                          "character": 40
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 1772,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 631,
                        "name": "T"
                      }
                    ],
                    "name": "UseAsyncListingReturnCommon"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 625,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 626,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                              "line": 107,
                              "character": 10
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 1168,
                            "qualifiedName": "Error",
                            "package": "typescript",
                            "name": "Error"
                          }
                        },
                        {
                          "id": 627,
                          "name": "result",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Result will not be set when error is set"
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                              "line": 111,
                              "character": 10
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [626, 627]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 101,
                          "character": 40
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 1772,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 631,
                        "name": "T"
                      }
                    ],
                    "name": "UseAsyncListingReturnCommon"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 628,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 629,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Error will not be set when result is set"
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                              "line": 117,
                              "character": 10
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 630,
                          "name": "result",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "The value returned from execute"
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                              "line": 121,
                              "character": 10
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 631,
                            "name": "T"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [629, 630]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
                          "line": 113,
                          "character": 40
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 632,
          "name": "useAsyncListing",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "originalName": "default",
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
              "line": 135,
              "character": 24
            }
          ],
          "signatures": [
            {
              "id": 633,
              "name": "useAsyncListing",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Execute an asynchronous call and return the value which can optionally be paginated.",
                "text": "If the result is paginated you can pass `paginator`. Whenever the paginator state\nis changed the function will be called unless `trigger` is `MANUAL`. You can pass\n`accumulatePages` to accumulate results for sequential pages returned from `execute`.\nThis is useful to implement things like infinite scroll. If a non-sequential page\nis accessed or `query` changes then accumulated results will be cleared.\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": "\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 634,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 635,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 611,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 634,
                        "name": "T"
                      }
                    ],
                    "name": "UseAsyncListingProps"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 621,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 634,
                    "name": "T"
                  }
                ],
                "name": "UseAsyncListingReturn"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1771]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [611, 621]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [632]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 636,
      "name": "useAsyncValue",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1786,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1787,
              "name": "CommonProps",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                  "line": 17,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1800,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 1801,
                  "name": "U",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 54,
                    "name": "Id"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1788,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1789,
                      "name": "existingValues",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "An optional array of existing values to try and find the value in.",
                        "text": "If each item does not implement [Identifiable](doc:Identifiable) then you\nmust provide the `getId` function.\n\nYou can use this to avoid resolving data that already exists. If dealing with\nViewModel instances you can use it with [useViewModelCache](doc:useViewModelCache),\neg.\n\n```js\nconst existingValues = useViewModelCache(User, cache => cache.get(id, fieldNames));\nconst { value } = useAsyncValue({ id, existingValues, resolve: fetchUser });\n```\n"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 33,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 1800,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 1793,
                      "name": "trigger",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "When to trigger the fetch. Defaults to `DEEP` which means whenever `id`\nor `ids` changed it will refetch if the value hasn't already been resolved.",
                        "text": "If set to `MANUAL` nothing will happen until it changes to `DEEP`. You\ncan use this to defer execution until the value is required.\n"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 46,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "MANUAL"
                          },
                          {
                            "type": "literal",
                            "value": "DEEP"
                          }
                        ]
                      }
                    },
                    {
                      "id": 1790,
                      "name": "getId",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 38,
                          "character": 4
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1791,
                          "name": "getId",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "A function that returns a unique ID for each item in `existingValues`. Only\nrequired if each item does not implement [Identifiable](doc:Identifiable)."
                          },
                          "parameters": [
                            {
                              "id": 1792,
                              "name": "item",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 1800,
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 1801,
                            "name": "U"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1797,
                      "name": "onError",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 55,
                          "character": 4
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1798,
                          "name": "onError",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Called when `resolve` errors. Passed the error returned from `resolve`."
                          },
                          "parameters": [
                            {
                              "id": 1799,
                              "name": "error",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 1168,
                                "qualifiedName": "Error",
                                "package": "typescript",
                                "name": "Error"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1794,
                      "name": "onSuccess",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 51,
                          "character": 4
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1795,
                          "name": "onSuccess",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Called when `resolve` resolves successfully. Is passed a single parameter which\nis the value returned from `resolve`"
                          },
                          "parameters": [
                            {
                              "id": 1796,
                              "name": "response",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 1800,
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1789, 1793]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [1790, 1797, 1794]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 17,
                      "character": 36
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [1787]
            }
          ]
        },
        {
          "id": 645,
          "name": "UseAsyncValuePropsMulti",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expand-properties",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
              "line": 83,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 651,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 652,
              "name": "U",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 54,
                "name": "Id"
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "id": 1787,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 651,
                    "name": "T"
                  },
                  {
                    "type": "reference",
                    "id": 652,
                    "name": "U"
                  }
                ],
                "name": "CommonProps"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 646,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 647,
                      "name": "ids",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "Array of ids to resolve values for or null if nothing yet to resolve",
                        "text": "If you need to resolve a single value use the other form documented above\npassing `id` instead\n"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 90,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 652,
                              "name": "U"
                            }
                          },
                          {
                            "type": "literal",
                            "value": null
                          }
                        ]
                      }
                    },
                    {
                      "id": 648,
                      "name": "resolve",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 95,
                          "character": 4
                        }
                      ],
                      "signatures": [
                        {
                          "id": 649,
                          "name": "resolve",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Resolve the value for the provided IDs. Function is passed a single parameter\nbeing `ids`"
                          },
                          "parameters": [
                            {
                              "id": 650,
                              "name": "ids",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 652,
                                  "name": "U"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 651,
                                  "name": "T"
                                }
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [647]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [648]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 83,
                      "character": 75
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 637,
          "name": "UseAsyncValuePropsSingle",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expand-properties",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
              "line": 61,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 643,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 644,
              "name": "U",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 54,
                "name": "Id"
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "id": 1787,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 643,
                    "name": "T"
                  },
                  {
                    "type": "reference",
                    "id": 644,
                    "name": "U"
                  }
                ],
                "name": "CommonProps"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 638,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 639,
                      "name": "id",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "Single `id` for value to fetch or null if nothing yet to resolve.",
                        "text": "If you need to resolve multiple values use the other form documented\nbelow passing `ids` instead.\n"
                      },
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 68,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "id": 644,
                            "name": "U"
                          },
                          {
                            "type": "literal",
                            "value": null
                          }
                        ]
                      }
                    },
                    {
                      "id": 640,
                      "name": "resolve",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                          "line": 77,
                          "character": 4
                        }
                      ],
                      "signatures": [
                        {
                          "id": 641,
                          "name": "resolve",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Resolve the value for the provided ID. Function is passed a single parameter\nbeing `id`.",
                            "text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
                          },
                          "parameters": [
                            {
                              "id": 642,
                              "name": "id",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 644,
                                "name": "U"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 643,
                                "name": "T"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [639]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [640]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 61,
                      "character": 76
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 653,
          "name": "UseAsyncValueReturn",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
              "line": 98,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 663,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 654,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 655,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Set to the rejected value of the promise. Only one of `error` and `value` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 104,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 1168,
                        "qualifiedName": "Error",
                        "package": "typescript",
                        "name": "Error"
                      }
                    ]
                  }
                },
                {
                  "id": 656,
                  "name": "isLoading",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "True while `resolve` call is in progress."
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 108,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 657,
                  "name": "value",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The resolved value"
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 112,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 663,
                        "name": "T"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 661,
                  "name": "reset",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 130,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 662,
                      "name": "reset",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`.",
                        "text": "If value is found in `existingValues` then it will still be returned even if\nyou call `reset` - `reset` only clears values that are returned from `resolve`.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 658,
                  "name": "run",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                      "line": 121,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 659,
                      "name": "run",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
                        "text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
                      },
                      "parameters": [
                        {
                          "id": 660,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isRest": true
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [655, 656, 657]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [661, 658]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
                  "line": 98,
                  "character": 37
                }
              ]
            }
          }
        },
        {
          "id": 664,
          "name": "useAsyncValue",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "originalName": "default",
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
              "line": 148,
              "character": 24
            }
          ],
          "signatures": [
            {
              "id": 665,
              "name": "useAsyncValue",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Resolve a value from an id using an async function.",
                "text": "For the specified `id` the `resolve` function will be called and should\nreturn the value for the specified id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the value will\nbe returned immediately.\n\nFor multiple values see documentation below.\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": "\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 666,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 667,
                  "name": "U",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 54,
                    "name": "Id"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 668,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 637,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 666,
                        "name": "T"
                      },
                      {
                        "type": "reference",
                        "id": 667,
                        "name": "U"
                      }
                    ],
                    "name": "UseAsyncValuePropsSingle"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 653,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 666,
                    "name": "T"
                  }
                ],
                "name": "UseAsyncValueReturn"
              }
            },
            {
              "id": 669,
              "name": "useAsyncValue",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Resolve values from an array of ids using an async function.",
                "text": "For the specified array of `ids` the `resolve` function will be called\nand should return an array of the same size with each entry being the resolved\nvalue for the corresponding id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the values will\nbe returned immediately. Note that if any of the ids are missing from\n`existingValues` then it will be ignored and a call to `resolve` will be made\nrequesting values for all `ids`.\n"
              },
              "typeParameter": [
                {
                  "id": 670,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 671,
                  "name": "U",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 54,
                    "name": "Id"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 672,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 645,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 670,
                        "name": "T"
                      },
                      {
                        "type": "reference",
                        "id": 671,
                        "name": "U"
                      }
                    ],
                    "name": "UseAsyncValuePropsMulti"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 653,
                "typeArguments": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 670,
                      "name": "T"
                    }
                  }
                ],
                "name": "UseAsyncValueReturn"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1786]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [645, 637, 653]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [664]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 673,
      "name": "useChangeObserver",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 674,
          "name": "ChangeObserverOptions",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expand-properties",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
              "line": 7,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 681,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 675,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 680,
                  "name": "disabled",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "If true then no changes will be detected. When this changes from true to false the\ncallback won't be called until the next change in value. This is useful for disabling\nthe callback when no value is yet available eg. when waiting for first response from an\nAPI."
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
                      "line": 21,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 676,
                  "name": "isEqual",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
                      "line": 14,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 677,
                      "name": "isEqual",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Function to determine equality between items. If not provided the default will do shallow\nequality checks with specific support for an `isEqual` function on objects (eg. if an object\nimplements `isEqual` it will be called instead of doing any other comparisons. This is\nsupported by [ViewModel](doc:viewModelFactory)."
                      },
                      "parameters": [
                        {
                          "id": 678,
                          "name": "a",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 681,
                            "name": "T"
                          }
                        },
                        {
                          "id": 679,
                          "name": "b",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 681,
                            "name": "T"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [680]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [676]
                }
              ],
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
                  "line": 7,
                  "character": 39
                }
              ]
            }
          }
        },
        {
          "id": 682,
          "name": "useChangeObserver",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "originalName": "default",
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
              "line": 57,
              "character": 24
            }
          ],
          "signatures": [
            {
              "id": 683,
              "name": "useChangeObserver",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Call a function whenever a value changes.",
                "text": "This works by monitoring a value passed in and tracking it's last value. Whenever\nthe value changes the provided callback will be called with the last and current\nvalue.\n\n```jsx\nexport default function Example() {\n  const [count, setCount] = useState(0);\n  useChangeObserver(count, () => {\n    console.log(`Changed from ${prev} to ${next}.`));\n  }\n  return <>\n    Count: {count}\n    <button onClick={() => setCount(c => c+1)}>+1</button>\n  </>;\n}\n```\n",
                "returns": "Has no return value\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": "\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 684,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 685,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to monitor for changes. This can be any type but for complex\ntypes you will need to provide your own `isEqual` function. For simple shallow\ncomparisons the default function will suffice (eg. it will compare each element in\nan array or each value on an object 1 level deep)."
                  },
                  "type": {
                    "type": "reference",
                    "id": 684,
                    "name": "T"
                  }
                },
                {
                  "id": 686,
                  "name": "onChange",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The function to call when `value` changes. This is passed the previous\nvalue and the current value.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 687,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 688,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 689,
                              "name": "lastValue",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 684,
                                "name": "T"
                              }
                            },
                            {
                              "id": 690,
                              "name": "nextValue",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 684,
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 691,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 674,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 684,
                        "name": "T"
                      }
                    ],
                    "name": "ChangeObserverOptions"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [674]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [682]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 692,
      "name": "useListChangeObserver",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 1802,
          "name": "<internal>",
          "kind": 4,
          "kindString": "Namespace",
          "flags": {},
          "children": [
            {
              "id": 1819,
              "name": "Change",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                  "line": 59,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1824,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1820,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1821,
                      "name": "ADD",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                          "line": 60,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": false
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 1824,
                              "name": "T"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 1823,
                      "name": "DELETE",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                          "line": 62,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": false
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 1824,
                              "name": "T"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 1822,
                      "name": "UPDATE",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                          "line": 61,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": false
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "tuple",
                              "elements": [
                                {
                                  "type": "reference",
                                  "id": 1824,
                                  "name": "T"
                                },
                                {
                                  "type": "reference",
                                  "id": 1824,
                                  "name": "T"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1821, 1823, 1822]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                      "line": 59,
                      "character": 17
                    }
                  ]
                }
              }
            },
            {
              "id": 1810,
              "name": "ListChangeObserverOptions",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "expand-properties",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                  "line": 11,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1818,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 674,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1818,
                        "name": "T"
                      }
                    ],
                    "name": "ChangeObserverOptions"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1811,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1812,
                          "name": "runOnAdd",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If true then when any items are added it will call `onChange` with 'ADD'\nas the first parameter. Only applicable if value is an array."
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                              "line": 16,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 1813,
                          "name": "runOnDelete",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If true then when any records are deleted it will call `onChange` with 'DELETE'\nas the first parameter. Only applicable if value is an array."
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                              "line": 21,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 1814,
                          "name": "runOnUpdate",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If true then when any records are updated it will call `onChange` with 'UPDATE'\nas the first parameter. Only applicable if value is an array."
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                              "line": 26,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 1815,
                          "name": "getId",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                              "line": 35,
                              "character": 4
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1816,
                              "name": "getId",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Function to get unique ID for an item. This is used to detect modifications to\nthe list. Without this it's unknown whether an item was removed from the list of\njust changed position.",
                                "text": "Support for [ViewModel](doc:viewModelFactory) is provided out of the box by checking\nfor the existence of a _key property on any object passed in.\n"
                              },
                              "parameters": [
                                {
                                  "id": 1817,
                                  "name": "item",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 1818,
                                    "name": "T"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1812, 1813, 1814]
                        },
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [1815]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                          "line": 11,
                          "character": 63
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 1803,
              "name": "OnChange",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                  "line": 73,
                  "character": 5
                }
              ],
              "typeParameter": [
                {
                  "id": 1809,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1804,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
                      "line": 73,
                      "character": 19
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1805,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "returns": "No return value\n"
                      },
                      "parameters": [
                        {
                          "id": 1806,
                          "name": "change",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "An object listing changes. Any additions will be included as an array under `ADD`, any updates\nas an array of [before, after] tuples under `UPDATE`, and any deletions as an array under `DELETE`."
                          },
                          "type": {
                            "type": "reference",
                            "id": 1819,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1809,
                                "name": "T"
                              }
                            ],
                            "name": "Change"
                          }
                        },
                        {
                          "id": 1807,
                          "name": "lastValue",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The value before this change"
                          },
                          "type": {
                            "type": "reference",
                            "id": 1809,
                            "name": "T"
                          }
                        },
                        {
                          "id": 1808,
                          "name": "nextValue",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The value after this change\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 1809,
                            "name": "T"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Type aliases",
              "kind": 4194304,
              "children": [1819, 1810, 1803]
            }
          ]
        },
        {
          "id": 693,
          "name": "ADD",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
              "line": 4,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": "ADD"
          },
          "defaultValue": "'ADD'"
        },
        {
          "id": 695,
          "name": "DELETE",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
              "line": 6,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": "DELETE"
          },
          "defaultValue": "'DELETE'"
        },
        {
          "id": 694,
          "name": "UPDATE",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
              "line": 5,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": "UPDATE"
          },
          "defaultValue": "'UPDATE'"
        },
        {
          "id": 696,
          "name": "useListChangeObserver",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "originalName": "default",
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
              "line": 121,
              "character": 24
            }
          ],
          "signatures": [
            {
              "id": 697,
              "name": "useListChangeObserver",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Call a function whenever values in a list change. This differs from `useChangeObserver` by\nallowing you to choose what changes you get (additions, updates, deletions) and to be passed the\nchanged items in the callback. In order to achieve this each item in the array needs to have a\nunique ID which is obtained by calling the `options.getId` function. The default implementation will\nlook for a `_key` or `id` property and return this, otherwise it return the value as is. This default\nimplementation is compatible with [ViewModel](doc:viewModelFactory) so you can pass lists of\nrecords returned from [useViewModelCache](doc:useViewModelCache).",
                "text": "```jsx\nexport default function UserListView() {\n  const { data, revalidate, isValidating } = useEndpoint(User.endpoints.list);\n  // Refetch data whenever underlying cache changes\n  const allRecords = useViewModelCache(User, cache => cache.getAll(fieldList));\n  // NOTE: Usually you don't want multiple useListChangeObserver's on the exact same\n  // subset of data as you will trigger redundant ajax queries.\n  // if a record is updated & saved elsewhere, then useViewModelCache will return new\n  // data which triggers useListChangeObserver. We still want useListChangeObserver()\n  // to trigger the useEndpoint() revalidate because that record update may have changed the\n  // order of records or caused it to [no longer] appear in a filtered list of data.\n  // Also note that we pass false while data is being fetched from the backend\n  useListChangeObserver(!isValidating && allRecords, revalidate);\n  return <ListView records={data} />;\n}\n```\n",
                "returns": "No return value\n",
                "tags": [
                  {
                    "tag": "extract-docs",
                    "text": "\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 698,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 699,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "An array of values to monitor for changes. A falsey value can be passed to disable\nchecks. This is the same as passing `options.disabled`. This is convenient for cases where no value\nis available yet (eg. when waiting for initial response from an API endpoint)"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "literal",
                        "value": false
                      },
                      {
                        "type": "reference",
                        "id": 698,
                        "name": "T"
                      }
                    ]
                  }
                },
                {
                  "id": 700,
                  "name": "onChange",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A method that will be called on any changes. This is passed an object of changes in the form:\n\n```\n{\n    ADD: [...],\n    UPDATE: [[<prev value>, <updated value>]...],\n    DELETE: [...],\n}\n```\nEach change type (ADD, UPDATE, DELETE) will be `false` if no value has changed.\n\nThe last and next list of records are also passed.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 1803,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 698,
                        "name": "T"
                      }
                    ],
                    "name": "OnChange"
                  }
                },
                {
                  "id": 701,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 1810,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 698,
                        "name": "T"
                      }
                    ],
                    "name": "ListChangeObserverOptions"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 4,
          "children": [1802]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [693, 695, 694]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [696]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 702,
      "name": "useMemoOne",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 703,
          "name": "ComparisonFn",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
              "line": 34,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 704,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
                  "line": 34,
                  "character": 27
                }
              ],
              "signatures": [
                {
                  "id": 705,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 706,
                      "name": "newInputs",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    },
                    {
                      "id": 707,
                      "name": "lastInputs",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 708,
          "name": "useMemoOne",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "originalName": "default",
          "sources": [
            {
              "fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
              "line": 47,
              "character": 24
            }
          ],
          "signatures": [
            {
              "id": 709,
              "name": "useMemoOne",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "useMemo but with a stable cache and support for custom comparison operator",
                "text": "Based on https://github.com/alexreardon/use-memo-one but supports custom\ncomparison operator. See https://github.com/alexreardon/use-memo-one/issues/11\n",
                "returns": "\n"
              },
              "typeParameter": [
                {
                  "id": 710,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 711,
                  "name": "getResult",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Function that returns value to memoize"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 712,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 713,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 710,
                            "name": "T"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 714,
                  "name": "inputs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Dependency array. When values in this change getResult is called again"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                },
                {
                  "id": 715,
                  "name": "compare",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Custom comparision operator. Defaults to shallow strict equality."
                  },
                  "type": {
                    "type": "reference",
                    "id": 703,
                    "name": "ComparisonFn"
                  },
                  "defaultValue": "isEqual"
                }
              ],
              "type": {
                "type": "reference",
                "id": 710,
                "name": "T"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [703]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [708]
        }
      ],
      "sources": [
        {
          "fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
          "line": 26,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 2,
      "children": [1, 23, 32, 57, 61, 134, 234, 310, 391, 523, 556, 580, 610, 636, 673, 692, 702]
    }
  ]
}
