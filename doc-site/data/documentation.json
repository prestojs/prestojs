{
	"id": 0,
	"name": "prestojs",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 342,
			"name": "CursorPaginator",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Cursor based paginator",
				"text": "Expects a `nextCursor`, `previousCursor` and optional `pageSize` key in the response. See\n[getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n",
				"tags": [
					{
						"tag": "menu-group",
						"text": "Pagination"
					},
					{
						"tag": "extract-docs",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 346,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 347,
							"name": "new CursorPaginator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "see",
										"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
									}
								]
							},
							"parameters": [
								{
									"id": 348,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								},
								{
									"id": 349,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 342,
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 408,
								"name": "default.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "default.constructor"
					}
				},
				{
					"id": 388,
					"name": "currentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 100,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 628,
						"name": "CursorPaginationState"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "default.currentState"
					}
				},
				{
					"id": 389,
					"name": "internalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 101,
							"character": 4
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "InternalCursorPaginatorState"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 390,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 391,
											"name": "responseIsSet",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 101,
													"character": 37
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												391
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "default.internalState"
					}
				},
				{
					"id": 392,
					"name": "setCurrentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 102,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 393,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 394,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 395,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 628,
												"name": "CursorPaginationState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "default.setCurrentState"
					}
				},
				{
					"id": 396,
					"name": "setInternalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 103,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 397,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 398,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 399,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "InternalCursorPaginatorState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "default.setInternalState"
					}
				},
				{
					"id": 354,
					"name": "cursor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 45,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 355,
							"name": "cursor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current cursor. This will be null before the first response is received."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 350,
					"name": "nextCursor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 31,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 351,
							"name": "nextCursor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The next cursor (if any)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 356,
					"name": "pageSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 52,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 357,
							"name": "pageSize",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current page size, if known"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 352,
					"name": "previousCursor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 38,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 353,
							"name": "previousCursor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "THe previous cursor (if any)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 400,
					"name": "responseIsSet",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 108,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 401,
							"name": "responseIsSet",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Paginator.responseIsSet"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "default.responseIsSet"
					}
				},
				{
					"id": 366,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 367,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the first page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 440,
								"name": "default.first"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 439,
						"name": "default.first"
					}
				},
				{
					"id": 364,
					"name": "firstState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 365,
							"name": "firstState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page",
								"text": "Does not transition state. To transition state call `first` instead.\n"
							},
							"type": {
								"type": "reference",
								"id": 628,
								"name": "CursorPaginationState"
							},
							"overwrites": {
								"type": "reference",
								"id": 442,
								"name": "default.firstState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 441,
						"name": "default.firstState"
					}
				},
				{
					"id": 376,
					"name": "getRequestInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 158,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "getRequestInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
							},
							"parameters": [
								{
									"id": 378,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PaginatorRequestOptions"
							},
							"overwrites": {
								"type": "reference",
								"id": 434,
								"name": "default.getRequestInit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 433,
						"name": "default.getRequestInit"
					}
				},
				{
					"id": 386,
					"name": "hasNextPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 200,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 387,
							"name": "hasNextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if there's more results after the current page"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 452,
								"name": "default.hasNextPage"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 451,
						"name": "default.hasNextPage"
					}
				},
				{
					"id": 370,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 125,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 371,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the next page.",
								"text": "If the last next is not yet known because results haven't been returned this function\ndoes nothing.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 444,
								"name": "default.next"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 443,
						"name": "default.next"
					}
				},
				{
					"id": 368,
					"name": "nextState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 369,
							"name": "nextState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page. If the next page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
								"text": "Does not transition state. To transition state call `next` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 628,
										"name": "CursorPaginationState"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 446,
								"name": "default.nextState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 445,
						"name": "default.nextState"
					}
				},
				{
					"id": 358,
					"name": "pageSizeState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 61,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 359,
							"name": "pageSizeState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the specified page size",
								"text": "Does not transition state. To transition state call `setPageSize` instead.\n"
							},
							"parameters": [
								{
									"id": 360,
									"name": "pageSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 628,
								"name": "CursorPaginationState"
							}
						}
					]
				},
				{
					"id": 374,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 151,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 375,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the previous page.",
								"text": "If the previous page is not yet known because results haven't been returned this function\ndoes nothing.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 448,
								"name": "default.previous"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 447,
						"name": "default.previous"
					}
				},
				{
					"id": 372,
					"name": "previousState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 138,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 373,
							"name": "previousState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the previous page. If the previous page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
								"text": "Does not transition state. To transition state call `previous` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 628,
										"name": "CursorPaginationState"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 450,
								"name": "default.previousState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 449,
						"name": "default.previousState"
					}
				},
				{
					"id": 402,
					"name": "replaceStateControllers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 151,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 403,
							"name": "replaceStateControllers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
								"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
							},
							"parameters": [
								{
									"id": 404,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 405,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 430,
								"name": "default.replaceStateControllers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "default.replaceStateControllers"
					}
				},
				{
					"id": 361,
					"name": "setPageSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 83,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 362,
							"name": "setPageSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the page size"
							},
							"parameters": [
								{
									"id": 363,
									"name": "pageSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 379,
					"name": "setResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 179,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 380,
							"name": "setResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the internal data based on response. Expects `nextCursor`, `previousCursor` and optionally `pageSize` to be in\nresponse data.",
								"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
							},
							"parameters": [
								{
									"id": 381,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 382,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 383,
													"name": "nextCursor",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
															"line": 184,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 385,
													"name": "pageSize",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
															"line": 186,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 384,
													"name": "previousCursor",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
															"line": 185,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														383,
														385,
														384
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 437,
								"name": "default.setResponse"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 436,
						"name": "default.setResponse"
					}
				},
				{
					"id": 343,
					"name": "getPaginationState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 213,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "getPaginationState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Expected pagination state in the shape:\n{\n    next: null|'http://example.com/?cursor=abc123',\n    previous: null|'http://example.com/?cursor=abc123',\n    results: Array\n}"
							},
							"parameters": [
								{
									"id": 345,
									"name": "requestDetails",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 549,
										"name": "PaginationRequestDetails"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						346
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						388,
						389,
						392,
						396
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						354,
						350,
						356,
						352,
						400
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						366,
						364,
						376,
						386,
						370,
						368,
						358,
						374,
						372,
						402,
						361,
						379,
						343
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
					"line": 24,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 406,
					"typeArguments": [
						{
							"type": "reference",
							"id": 628,
							"name": "CursorPaginationState"
						},
						{
							"type": "reference",
							"name": "InternalCursorPaginatorState"
						}
					],
					"name": "default"
				}
			]
		},
		{
			"id": 103,
			"name": "InferredPaginator",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Class that infers the specific type of pagination based on the response.",
				"text": "Supports [PageNumberPaginator](doc:PageNumberPaginator), [LimitOffsetPaginator](LimitOffsetPaginator) and\n[CursorPaginator](doc:CursorPaginator) with the following rules based on the response data:\n\n* If response contains `nextCursor` or `previousCursor` value paginator is set to [CursorPaginator](doc:CursorPaginator)\n* If response contains `limit` then paginator is set to  [LimitOffsetPaginator](LimitOffsetPaginator)\n* If response contains `total` then paginator is set to [PageNumberPaginator](doc:PageNumberPaginator)\n",
				"tags": [
					{
						"tag": "menu-group",
						"text": "Pagination"
					},
					{
						"tag": "extract-docs",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 107,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 172,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 108,
							"name": "new InferredPaginator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "see",
										"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
									}
								]
							},
							"parameters": [
								{
									"id": 109,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 110,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 103,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 111,
					"name": "__paginator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 342,
								"name": "default"
							},
							{
								"type": "reference",
								"id": 201,
								"name": "default"
							},
							{
								"type": "reference",
								"id": 274,
								"name": "default"
							}
						]
					}
				},
				{
					"id": 136,
					"name": "currentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 164,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 636,
						"name": "PaginatorState"
					},
					"implementationOf": {
						"type": "reference",
						"id": 557,
						"name": "PaginatorInterface.currentState"
					}
				},
				{
					"id": 137,
					"name": "internalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 165,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					},
					"implementationOf": {
						"type": "reference",
						"id": 558,
						"name": "PaginatorInterface.internalState"
					}
				},
				{
					"id": 138,
					"name": "setCurrentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 166,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 139,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 140,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 141,
											"name": "nextValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 636,
												"name": "PaginatorState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"id": 559,
						"name": "PaginatorInterface.setCurrentState"
					}
				},
				{
					"id": 142,
					"name": "setInternalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 167,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 143,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 144,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 145,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 146,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 147,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 148,
																	"name": "internalState",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"qualifiedName": "Record",
																		"package": "typescript",
																		"name": "Record"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Record",
																"package": "typescript",
																"name": "Record"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"id": 562,
						"name": "PaginatorInterface.setInternalState"
					}
				},
				{
					"id": 130,
					"name": "cursor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 128,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 131,
							"name": "cursor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 122,
					"name": "limit",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 81,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 123,
							"name": "limit",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current limit. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 126,
					"name": "nextCursor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 104,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 127,
							"name": "nextCursor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The next cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 124,
					"name": "offset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 94,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 125,
							"name": "offset",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current offset. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 132,
					"name": "page",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 141,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 133,
							"name": "page",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current page number. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 134,
					"name": "pageSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 154,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 135,
							"name": "pageSize",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current page size. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 114,
					"name": "paginator",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 34,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 115,
							"name": "paginator",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 342,
										"name": "default"
									},
									{
										"type": "reference",
										"id": 201,
										"name": "default"
									},
									{
										"type": "reference",
										"id": 274,
										"name": "default"
									}
								]
							}
						}
					],
					"setSignature": [
						{
							"id": 116,
							"name": "paginator",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"comment": {
								"shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
							},
							"parameters": [
								{
									"id": 117,
									"name": "paginator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 342,
												"name": "default"
											},
											{
												"type": "reference",
												"id": 201,
												"name": "default"
											},
											{
												"type": "reference",
												"id": 274,
												"name": "default"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 128,
					"name": "previousCursor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 114,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 129,
							"name": "previousCursor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The previous cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 112,
					"name": "responseIsSet",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 27,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 113,
							"name": "responseIsSet",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 565,
								"name": "PaginatorInterface.responseIsSet"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 565,
						"name": "PaginatorInterface.responseIsSet"
					}
				},
				{
					"id": 118,
					"name": "total",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 55,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 119,
							"name": "total",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The total number of records available. Not valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 120,
					"name": "totalPages",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 68,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 121,
							"name": "totalPages",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The total number of records available. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 187,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 416,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the first page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 569,
								"name": "PaginatorInterface.first"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 568,
						"name": "PaginatorInterface.first"
					}
				},
				{
					"id": 185,
					"name": "firstState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 402,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 186,
							"name": "firstState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page",
								"text": "Does not transition state. To transition state call `first` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 624,
										"name": "PageNumberPaginationState"
									},
									{
										"type": "reference",
										"id": 628,
										"name": "CursorPaginationState"
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 571,
								"name": "PaginatorInterface.firstState"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 570,
						"name": "PaginatorInterface.firstState"
					}
				},
				{
					"id": 195,
					"name": "getRequestInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 472,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 196,
							"name": "getRequestInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 197,
									"name": "currentInit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PaginatorRequestOptions"
							},
							"implementationOf": {
								"type": "reference",
								"id": 581,
								"name": "PaginatorInterface.getRequestInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 580,
						"name": "PaginatorInterface.getRequestInit"
					}
				},
				{
					"id": 193,
					"name": "hasNextPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 465,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 194,
							"name": "hasNextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if there's more results after the current page"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 567,
								"name": "PaginatorInterface.hasNextPage"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 566,
						"name": "PaginatorInterface.hasNextPage"
					}
				},
				{
					"id": 191,
					"name": "last",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 450,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 192,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
								"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 189,
					"name": "lastState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 432,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "lastState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page",
								"text": "Does not transition state. To transition state call `last` instead.\n\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 624,
										"name": "PageNumberPaginationState"
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							}
						}
					]
				},
				{
					"id": 165,
					"name": "limitState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 282,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "limitState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
								"text": "See [LimitOffsetPaginator.limitState](doc:LimitOffsetPaginator#method-limitState)\n"
							},
							"parameters": [
								{
									"id": 167,
									"name": "limit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							}
						}
					]
				},
				{
					"id": 179,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 360,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 180,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the next page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 573,
								"name": "PaginatorInterface.next"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 572,
						"name": "PaginatorInterface.next"
					}
				},
				{
					"id": 177,
					"name": "nextState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 346,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 178,
							"name": "nextState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the next page",
								"text": "Does not transition state. To transition state call `next` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 624,
										"name": "PageNumberPaginationState"
									},
									{
										"type": "reference",
										"id": 628,
										"name": "CursorPaginationState"
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 575,
								"name": "PaginatorInterface.nextState"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 574,
						"name": "PaginatorInterface.nextState"
					}
				},
				{
					"id": 171,
					"name": "offsetState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 314,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 172,
							"name": "offsetState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
								"text": "See [LimitOffsetPaginator.offsetState](doc:LimitOffsetPaginator#method-offsetState)\n"
							},
							"parameters": [
								{
									"id": 173,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							}
						}
					]
				},
				{
					"id": 159,
					"name": "pageSizeState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 248,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 160,
							"name": "pageSizeState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
								"text": "See [PageNumberPaginator.pageSizeState](doc:PageNumberPaginator#method-pageSizeState)\n"
							},
							"parameters": [
								{
									"id": 161,
									"name": "pageSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 624,
										"name": "PageNumberPaginationState"
									},
									{
										"type": "reference",
										"id": 628,
										"name": "CursorPaginationState"
									}
								]
							}
						}
					]
				},
				{
					"id": 153,
					"name": "pageState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 216,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 154,
							"name": "pageState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
								"text": "See [PageNumberPaginator.pageState](doc:PageNumberPaginator#method-pageState)\n"
							},
							"parameters": [
								{
									"id": 155,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 624,
										"name": "PageNumberPaginationState"
									}
								]
							}
						}
					]
				},
				{
					"id": 183,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 388,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 184,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the previous page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 577,
								"name": "PaginatorInterface.previous"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 576,
						"name": "PaginatorInterface.previous"
					}
				},
				{
					"id": 181,
					"name": "previousState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 374,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "previousState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the previous page",
								"text": "Does not transition state. To transition state call `previous` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 624,
										"name": "PageNumberPaginationState"
									},
									{
										"type": "reference",
										"id": 628,
										"name": "CursorPaginationState"
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 579,
								"name": "PaginatorInterface.previousState"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 578,
						"name": "PaginatorInterface.previousState"
					}
				},
				{
					"id": 149,
					"name": "replaceStateControllers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 186,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "replaceStateControllers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "see",
										"text": "`Paginator.replaceStateControllers`\n"
									}
								]
							},
							"parameters": [
								{
									"id": 151,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								},
								{
									"id": 152,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 587,
								"name": "PaginatorInterface.replaceStateControllers"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 586,
						"name": "PaginatorInterface.replaceStateControllers"
					}
				},
				{
					"id": 168,
					"name": "setLimit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 297,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 169,
							"name": "setLimit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
								"text": "See [LimitOffsetPaginator.setLimit](doc:LimitOffsetPaginator#method-setLimit)\n"
							},
							"parameters": [
								{
									"id": 170,
									"name": "limit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 174,
					"name": "setOffset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 329,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 175,
							"name": "setOffset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
								"text": "See [LimitOffsetPaginator.setOffset](doc:LimitOffsetPaginator#method-setOffset)\n"
							},
							"parameters": [
								{
									"id": 176,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 156,
					"name": "setPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 231,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 157,
							"name": "setPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
								"text": "See [PageNumberPaginator.setPage](doc:PageNumberPaginator#method-setPage)\n"
							},
							"parameters": [
								{
									"id": 158,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 162,
					"name": "setPageSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 265,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 163,
							"name": "setPageSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
								"text": "See [PageNumberPaginator.setPageSize](doc:PageNumberPaginator#method-setPageSize)\n"
							},
							"parameters": [
								{
									"id": 164,
									"name": "pageSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 198,
					"name": "setResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 492,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 199,
							"name": "setResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the internal data based on response. This is where the paginator is inferred based on values in the\n`response`.",
								"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
							},
							"parameters": [
								{
									"id": 200,
									"name": "response",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 584,
								"name": "PaginatorInterface.setResponse"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 583,
						"name": "PaginatorInterface.setResponse"
					}
				},
				{
					"id": 104,
					"name": "getPaginationState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 518,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 105,
							"name": "getPaginationState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 106,
									"name": "requestDetails",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 549,
										"name": "PaginationRequestDetails"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						107
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						111,
						136,
						137,
						138,
						142
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						130,
						122,
						126,
						124,
						132,
						134,
						114,
						128,
						112,
						118,
						120
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						187,
						185,
						195,
						193,
						191,
						189,
						165,
						179,
						177,
						171,
						159,
						153,
						183,
						181,
						149,
						168,
						174,
						156,
						162,
						198,
						104
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
					"line": 24,
					"character": 21
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 556,
					"typeArguments": [
						{
							"type": "reference",
							"id": 636,
							"name": "PaginatorState"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"qualifiedName": "Record",
							"package": "typescript",
							"name": "Record"
						}
					],
					"name": "PaginatorInterface"
				}
			]
		},
		{
			"id": 479,
			"name": "InvalidTimeError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 489,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 490,
							"name": "new InvalidTimeError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 491,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 479,
								"name": "InvalidTimeError"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.constructor"
					}
				},
				{
					"id": 493,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1023,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 492,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1022,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 494,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1024,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				},
				{
					"id": 488,
					"name": "stackTraceLimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 117,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stackTraceLimit"
					}
				},
				{
					"id": 480,
					"name": "captureStackTrace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 481,
							"name": "captureStackTrace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Create .stack property on a target object"
							},
							"parameters": [
								{
									"id": 482,
									"name": "targetObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 483,
									"name": "constructorOpt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "typescript",
										"name": "Function"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.captureStackTrace"
					}
				},
				{
					"id": 484,
					"name": "prepareStackTrace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 115,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 485,
							"name": "prepareStackTrace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Optional override for formatting stack traces",
								"tags": [
									{
										"tag": "see",
										"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
									}
								]
							},
							"parameters": [
								{
									"id": 486,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Error",
										"package": "typescript",
										"name": "Error"
									}
								},
								{
									"id": 487,
									"name": "stackTraces",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "NodeJS.CallSite",
											"package": "@types/node",
											"name": "CallSite"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.prepareStackTrace"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						489
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						493,
						492,
						494,
						488
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						480,
						484
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/time.ts",
					"line": 17,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Error",
					"package": "typescript",
					"name": "Error"
				}
			]
		},
		{
			"id": 274,
			"name": "LimitOffsetPaginator",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Limit & offset based paginator",
				"text": "Expects a `limit` key in the response. See [getPaginationState](doc:getPaginationState) for how\nto customise this if your backend implementation differs.\n",
				"tags": [
					{
						"tag": "menu-group",
						"text": "Pagination"
					},
					{
						"tag": "extract-docs",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 278,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 279,
							"name": "new LimitOffsetPaginator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "see",
										"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
									}
								]
							},
							"parameters": [
								{
									"id": 280,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								},
								{
									"id": 281,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 274,
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 408,
								"name": "default.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "default.constructor"
					}
				},
				{
					"id": 324,
					"name": "currentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 100,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 632,
						"name": "LimitOffsetPaginationState"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "default.currentState"
					}
				},
				{
					"id": 325,
					"name": "internalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 101,
							"character": 4
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "InternalLimitOffsetPaginationState"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 326,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 327,
											"name": "responseIsSet",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 101,
													"character": 37
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												327
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "default.internalState"
					}
				},
				{
					"id": 328,
					"name": "setCurrentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 102,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 329,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 330,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 331,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 632,
												"name": "LimitOffsetPaginationState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "default.setCurrentState"
					}
				},
				{
					"id": 332,
					"name": "setInternalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 103,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 333,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 334,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 335,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "InternalLimitOffsetPaginationState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "default.setInternalState"
					}
				},
				{
					"id": 284,
					"name": "limit",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 36,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 285,
							"name": "limit",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current limit"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 286,
					"name": "offset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 47,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 287,
							"name": "offset",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current offset"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 336,
					"name": "responseIsSet",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 108,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 337,
							"name": "responseIsSet",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Paginator.responseIsSet"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "default.responseIsSet"
					}
				},
				{
					"id": 282,
					"name": "total",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 29,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 283,
							"name": "total",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The total number of records available. This will be null before the first response is received."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 310,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 169,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 311,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the first page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 440,
								"name": "default.first"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 439,
						"name": "default.first"
					}
				},
				{
					"id": 308,
					"name": "firstState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 160,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 309,
							"name": "firstState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page",
								"text": "Does not transition state. To transition state call `first` instead.\n"
							},
							"type": {
								"type": "reference",
								"id": 632,
								"name": "LimitOffsetPaginationState"
							},
							"overwrites": {
								"type": "reference",
								"id": 442,
								"name": "default.firstState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 441,
						"name": "default.firstState"
					}
				},
				{
					"id": 316,
					"name": "getRequestInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 204,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 317,
							"name": "getRequestInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
							},
							"parameters": [
								{
									"id": 318,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PaginatorRequestOptions"
							},
							"overwrites": {
								"type": "reference",
								"id": 434,
								"name": "default.getRequestInit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 433,
						"name": "default.getRequestInit"
					}
				},
				{
					"id": 322,
					"name": "hasNextPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 234,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 323,
							"name": "hasNextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if there's more results after the current page"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 452,
								"name": "default.hasNextPage"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 451,
						"name": "default.hasNextPage"
					}
				},
				{
					"id": 314,
					"name": "last",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 196,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 315,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the last page.",
								"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 312,
					"name": "lastState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 179,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 313,
							"name": "lastState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
								"text": "Does not transition state. To transition state call `last` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							}
						}
					]
				},
				{
					"id": 288,
					"name": "limitState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "limitState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the specified limit",
								"text": "Does not transition state. To transition state call `setLimit` instead.\n"
							},
							"parameters": [
								{
									"id": 290,
									"name": "limit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 632,
								"name": "LimitOffsetPaginationState"
							}
						}
					]
				},
				{
					"id": 302,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 126,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 303,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the next page"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 444,
								"name": "default.next"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 443,
						"name": "default.next"
					}
				},
				{
					"id": 300,
					"name": "nextState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 116,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "nextState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the next page",
								"text": "Does not transition state. To transition state call `next` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 446,
								"name": "default.nextState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 445,
						"name": "default.nextState"
					}
				},
				{
					"id": 294,
					"name": "offsetState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 295,
							"name": "offsetState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the specified offset",
								"text": "Does not transition state. To transition state call `offsetState` instead.\n"
							},
							"parameters": [
								{
									"id": 296,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 632,
								"name": "LimitOffsetPaginationState"
							}
						}
					]
				},
				{
					"id": 306,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 148,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 307,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the previous page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 448,
								"name": "default.previous"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 447,
						"name": "default.previous"
					}
				},
				{
					"id": 304,
					"name": "previousState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 138,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "previousState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the previous page",
								"text": "Does not transition state. To transition state call `previous` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 632,
										"name": "LimitOffsetPaginationState"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 450,
								"name": "default.previousState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 449,
						"name": "default.previousState"
					}
				},
				{
					"id": 338,
					"name": "replaceStateControllers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 151,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "replaceStateControllers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
								"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
							},
							"parameters": [
								{
									"id": 340,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 341,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 430,
								"name": "default.replaceStateControllers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "default.replaceStateControllers"
					}
				},
				{
					"id": 291,
					"name": "setLimit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 83,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 292,
							"name": "setLimit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the limit"
							},
							"parameters": [
								{
									"id": 293,
									"name": "limit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "setOffset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 107,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "setOffset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 299,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 319,
					"name": "setResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 224,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 320,
							"name": "setResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the internal data based on response. Expects `limit` to be in response data.",
								"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
							},
							"parameters": [
								{
									"id": 321,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 437,
								"name": "default.setResponse"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 436,
						"name": "default.setResponse"
					}
				},
				{
					"id": 275,
					"name": "getPaginationState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 241,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "getPaginationState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 277,
									"name": "requestDetails",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 549,
										"name": "PaginationRequestDetails"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						278
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						324,
						325,
						328,
						332
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						284,
						286,
						336,
						282
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						310,
						308,
						316,
						322,
						314,
						312,
						288,
						302,
						300,
						294,
						306,
						304,
						338,
						291,
						297,
						319,
						275
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
					"line": 22,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 406,
					"typeArguments": [
						{
							"type": "reference",
							"id": 632,
							"name": "LimitOffsetPaginationState"
						},
						{
							"type": "reference",
							"name": "InternalLimitOffsetPaginationState"
						}
					],
					"name": "default"
				}
			]
		},
		{
			"id": 201,
			"name": "PageNumberPaginator",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Page number based paginator",
				"text": "Expects a `total` or `count` key and optional `pageSize` key in the response. `total` or `count` should be the total\nnumber of records available.\n\nIf your backend differs from this (for example by storing the values in different named keys or in headers instead of\nthe response body) you can handle that by extending this class and implementing `getPaginationState` or\nby passing `getPaginationState` to [usePaginator](doc:usePaginator).\n",
				"tags": [
					{
						"tag": "menu-group",
						"text": "Pagination"
					},
					{
						"tag": "extract-docs",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 205,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 206,
							"name": "new PageNumberPaginator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "see",
										"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
									}
								]
							},
							"parameters": [
								{
									"id": 207,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								},
								{
									"id": 208,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 201,
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 408,
								"name": "default.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "default.constructor"
					}
				},
				{
					"id": 256,
					"name": "currentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 100,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 624,
						"name": "PageNumberPaginationState"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "default.currentState"
					}
				},
				{
					"id": 257,
					"name": "internalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 101,
							"character": 4
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "InternalPageNumberPaginationState"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 258,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259,
											"name": "responseIsSet",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 101,
													"character": 37
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "default.internalState"
					}
				},
				{
					"id": 260,
					"name": "setCurrentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 102,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 261,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 262,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 263,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 624,
												"name": "PageNumberPaginationState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "default.setCurrentState"
					}
				},
				{
					"id": 264,
					"name": "setInternalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 103,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 265,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 266,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 267,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "InternalPageNumberPaginationState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "default.setInternalState"
					}
				},
				{
					"id": 213,
					"name": "page",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 51,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 214,
							"name": "page",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current page"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 215,
					"name": "pageSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 68,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 216,
							"name": "pageSize",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current page size (if known)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 268,
					"name": "responseIsSet",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 108,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 269,
							"name": "responseIsSet",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Paginator.responseIsSet"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "default.responseIsSet"
					}
				},
				{
					"id": 209,
					"name": "total",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 31,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 210,
							"name": "total",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The total number of results available on the backend"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 211,
					"name": "totalPages",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 41,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 212,
							"name": "totalPages",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The total number of pages"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 239,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 171,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the first page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 440,
								"name": "default.first"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 439,
						"name": "default.first"
					}
				},
				{
					"id": 237,
					"name": "firstState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 164,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "firstState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page",
								"text": "Does not transition state. To transition state call `first` instead.\n"
							},
							"type": {
								"type": "reference",
								"id": 624,
								"name": "PageNumberPaginationState"
							},
							"overwrites": {
								"type": "reference",
								"id": 442,
								"name": "default.firstState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 441,
						"name": "default.firstState"
					}
				},
				{
					"id": 245,
					"name": "getRequestInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 204,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "getRequestInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds `page` and `pageSize` into query options passed through to the endpoint"
							},
							"parameters": [
								{
									"id": 247,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PaginatorRequestOptions"
							},
							"overwrites": {
								"type": "reference",
								"id": 434,
								"name": "default.getRequestInit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 433,
						"name": "default.getRequestInit"
					}
				},
				{
					"id": 254,
					"name": "hasNextPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 235,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "hasNextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if there's more results after the current page"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 452,
								"name": "default.hasNextPage"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 451,
						"name": "default.hasNextPage"
					}
				},
				{
					"id": 243,
					"name": "last",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 194,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
								"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 241,
					"name": "lastState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 180,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 242,
							"name": "lastState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page",
								"text": "Does not transition state. To transition state call `last` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 624,
										"name": "PageNumberPaginationState"
									}
								]
							}
						}
					]
				},
				{
					"id": 231,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 139,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the next page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 444,
								"name": "default.next"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 443,
						"name": "default.next"
					}
				},
				{
					"id": 229,
					"name": "nextState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 132,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 230,
							"name": "nextState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the next page",
								"text": "Does not transition state. To transition state call `next` instead.\n"
							},
							"type": {
								"type": "reference",
								"id": 624,
								"name": "PageNumberPaginationState"
							},
							"overwrites": {
								"type": "reference",
								"id": 446,
								"name": "default.nextState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 445,
						"name": "default.nextState"
					}
				},
				{
					"id": 223,
					"name": "pageSizeState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 224,
							"name": "pageSizeState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the specified page size",
								"text": "Does not transition state. To transition state call `setPageSize` instead.\n"
							},
							"parameters": [
								{
									"id": 225,
									"name": "pageSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 624,
								"name": "PageNumberPaginationState"
							}
						}
					]
				},
				{
					"id": 217,
					"name": "pageState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 81,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 218,
							"name": "pageState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the specified page number",
								"text": "Does not transition state. To transition state call `setPage` instead.\n"
							},
							"parameters": [
								{
									"id": 219,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 624,
								"name": "PageNumberPaginationState"
							}
						}
					]
				},
				{
					"id": 235,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 155,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the previous page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 448,
								"name": "default.previous"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 447,
						"name": "default.previous"
					}
				},
				{
					"id": 233,
					"name": "previousState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 148,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 234,
							"name": "previousState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the previous page",
								"text": "Does not transition state. To transition state call `previous` instead.\n"
							},
							"type": {
								"type": "reference",
								"id": 624,
								"name": "PageNumberPaginationState"
							},
							"overwrites": {
								"type": "reference",
								"id": 450,
								"name": "default.previousState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 449,
						"name": "default.previousState"
					}
				},
				{
					"id": 270,
					"name": "replaceStateControllers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 151,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 271,
							"name": "replaceStateControllers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
								"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
							},
							"parameters": [
								{
									"id": 272,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 273,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 430,
								"name": "default.replaceStateControllers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "default.replaceStateControllers"
					}
				},
				{
					"id": 220,
					"name": "setPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "setPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change to the specified page"
							},
							"parameters": [
								{
									"id": 222,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 226,
					"name": "setPageSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 123,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "setPageSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Change to the specified page size"
							},
							"parameters": [
								{
									"id": 228,
									"name": "pageSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 248,
					"name": "setResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 225,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "setResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the internal data based on response. Expects `total` and optionally `pageSize` to be in\nresponse data.",
								"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
							},
							"parameters": [
								{
									"id": 250,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 251,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 253,
													"name": "pageSize",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
															"line": 225,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 252,
													"name": "total",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
															"line": 225,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														253,
														252
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 437,
								"name": "default.setResponse"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 436,
						"name": "default.setResponse"
					}
				},
				{
					"id": 202,
					"name": "getPaginationState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 250,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 203,
							"name": "getPaginationState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Expects `decodedBody` to include a key `results` which should be an array of return records and a variable\n`count` or `total` that contains the total number of records available."
							},
							"parameters": [
								{
									"id": 204,
									"name": "requestDetails",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 549,
										"name": "PaginationRequestDetails"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						205
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						256,
						257,
						260,
						264
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						213,
						215,
						268,
						209,
						211
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						239,
						237,
						245,
						254,
						243,
						241,
						231,
						229,
						223,
						217,
						235,
						233,
						270,
						220,
						226,
						248,
						202
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
					"line": 24,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 406,
					"typeArguments": [
						{
							"type": "reference",
							"id": 624,
							"name": "PageNumberPaginationState"
						},
						{
							"type": "reference",
							"name": "InternalPageNumberPaginationState"
						}
					],
					"name": "default"
				}
			]
		},
		{
			"id": 406,
			"name": "Paginator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"shortText": "Base class for a paginator.",
				"tags": [
					{
						"tag": "menu-group",
						"text": "Pagination"
					},
					{
						"tag": "extract-docs",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 407,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 115,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 408,
							"name": "new Paginator",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "see",
										"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 410,
									"name": "State",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 409,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								},
								{
									"id": 412,
									"name": "InternalState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 411,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"parameters": [
								{
									"id": 413,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								},
								{
									"id": 414,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 406,
								"typeArguments": [
									{
										"type": "reference",
										"id": 410,
										"name": "State"
									},
									{
										"type": "reference",
										"id": 412,
										"name": "InternalState"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 415,
					"name": "currentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 100,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 410,
						"name": "State"
					},
					"implementationOf": {
						"type": "reference",
						"id": 557,
						"name": "PaginatorInterface.currentState"
					}
				},
				{
					"id": 416,
					"name": "internalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 101,
							"character": 4
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 412,
								"name": "InternalState"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 417,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 418,
											"name": "responseIsSet",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 101,
													"character": 37
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												418
											]
										}
									]
								}
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"id": 558,
						"name": "PaginatorInterface.internalState"
					}
				},
				{
					"id": 419,
					"name": "setCurrentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 102,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 420,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 421,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 422,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 410,
												"name": "State"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"id": 559,
						"name": "PaginatorInterface.setCurrentState"
					}
				},
				{
					"id": 423,
					"name": "setInternalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 103,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 424,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 425,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 426,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 412,
												"name": "InternalState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"implementationOf": {
						"type": "reference",
						"id": 562,
						"name": "PaginatorInterface.setInternalState"
					}
				},
				{
					"id": 427,
					"name": "responseIsSet",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 108,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 428,
							"name": "responseIsSet",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 565,
								"name": "PaginatorInterface.responseIsSet"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 565,
						"name": "PaginatorInterface.responseIsSet"
					}
				},
				{
					"id": 439,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 202,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 440,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the first page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 569,
								"name": "PaginatorInterface.first"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 568,
						"name": "PaginatorInterface.first"
					}
				},
				{
					"id": 441,
					"name": "firstState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 211,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "firstState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the first page",
								"text": "Does not transition state. To transition state call `first` instead.\n"
							},
							"type": {
								"type": "reference",
								"id": 410,
								"name": "State"
							},
							"implementationOf": {
								"type": "reference",
								"id": 571,
								"name": "PaginatorInterface.firstState"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 570,
						"name": "PaginatorInterface.firstState"
					}
				},
				{
					"id": 433,
					"name": "getRequestInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 184,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 434,
							"name": "getRequestInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
							},
							"parameters": [
								{
									"id": 435,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The existing options for the endpoint\n"
									},
									"type": {
										"type": "reference",
										"name": "PaginatorRequestOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PaginatorRequestOptions"
							},
							"implementationOf": {
								"type": "reference",
								"id": 581,
								"name": "PaginatorInterface.getRequestInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 580,
						"name": "PaginatorInterface.getRequestInit"
					}
				},
				{
					"id": 451,
					"name": "hasNextPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 250,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "hasNextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if there's more results after the current page"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 567,
								"name": "PaginatorInterface.hasNextPage"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 566,
						"name": "PaginatorInterface.hasNextPage"
					}
				},
				{
					"id": 443,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 218,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 444,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the next page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 573,
								"name": "PaginatorInterface.next"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 572,
						"name": "PaginatorInterface.next"
					}
				},
				{
					"id": 445,
					"name": "nextState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 227,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 446,
							"name": "nextState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the next page",
								"text": "Does not transition state. To transition state call `next` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 410,
										"name": "State"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 575,
								"name": "PaginatorInterface.nextState"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 574,
						"name": "PaginatorInterface.nextState"
					}
				},
				{
					"id": 447,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 234,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 448,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Go to the previous page."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 577,
								"name": "PaginatorInterface.previous"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 576,
						"name": "PaginatorInterface.previous"
					}
				},
				{
					"id": 449,
					"name": "previousState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 243,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 450,
							"name": "previousState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the state for the previous page",
								"text": "Does not transition state. To transition state call `previous` instead.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 410,
										"name": "State"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 579,
								"name": "PaginatorInterface.previousState"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 578,
						"name": "PaginatorInterface.previousState"
					}
				},
				{
					"id": 429,
					"name": "replaceStateControllers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 151,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 430,
							"name": "replaceStateControllers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
								"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
							},
							"parameters": [
								{
									"id": 431,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 432,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 587,
								"name": "PaginatorInterface.replaceStateControllers"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 586,
						"name": "PaginatorInterface.replaceStateControllers"
					}
				},
				{
					"id": 436,
					"name": "setResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 195,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 437,
							"name": "setResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This is called when an `Endpoint` has resolved and is passed the response from the\nendpoint. This is used to update the relevant paginator state  - eg. the total\nnumber of records, next & previous cursors etc."
							},
							"parameters": [
								{
									"id": 438,
									"name": "response",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The response as returned by the endpoint this paginator is used with.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 584,
								"name": "PaginatorInterface.setResponse"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 583,
						"name": "PaginatorInterface.setResponse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						407
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						415,
						416,
						419,
						423
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						427
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						439,
						441,
						433,
						451,
						443,
						445,
						447,
						449,
						429,
						436
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
					"line": 98,
					"character": 30
				}
			],
			"typeParameter": [
				{
					"id": 454,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 453,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 98,
									"character": 54
								}
							]
						}
					}
				},
				{
					"id": 456,
					"name": "InternalState",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 455,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 98,
									"character": 80
								}
							]
						}
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 201,
					"name": "PageNumberPaginator"
				},
				{
					"type": "reference",
					"id": 274,
					"name": "LimitOffsetPaginator"
				},
				{
					"type": "reference",
					"id": 342,
					"name": "CursorPaginator"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 556,
					"typeArguments": [
						{
							"type": "reference",
							"id": 410,
							"name": "State"
						},
						{
							"type": "reference",
							"id": 412,
							"name": "InternalState"
						}
					],
					"name": "PaginatorInterface"
				}
			]
		},
		{
			"id": 637,
			"name": "Identifiable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Interface for types that we can automatically extract a unique identifier from.",
				"text": "To confirm to the interface provide a `_key` property or getter.\n\n[ViewModelFactory](doc:viewModelFactory) conforms to this so anything that expects an Identifiable\nwill accept a ViewModel.\n\nImplementing this can save you having to pass explicit functions to identify an item in other parts of the system\n(eg. for [AsyncChoices](doc:AsyncChoices) or [useAsyncValue](doc:useAsyncValue))\n",
				"tags": [
					{
						"tag": "extract-docs",
						"text": ""
					},
					{
						"tag": "menu-group",
						"text": "Identifiable\n"
					}
				]
			},
			"children": [
				{
					"id": 638,
					"name": "_key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 639,
						"name": "Id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						638
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 19,
					"character": 17
				}
			]
		},
		{
			"id": 498,
			"name": "NodeLabeled",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Interface for items that provide a React node label (anything that React can render). Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
				"text": "See [isNodeLabeled](doc:isNodeLabeled) and [getNodeLabel](doc:getNodeLabel).\n",
				"tags": [
					{
						"tag": "extract-docs",
						"text": ""
					},
					{
						"tag": "menu-group",
						"text": "Labeled\n"
					}
				]
			},
			"children": [
				{
					"id": 499,
					"name": "getNodeLabel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 500,
							"name": "getNodeLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the node label for this item. This can be anything renderable by React.",
								"text": "See [isNodeLabeled](doc:isNodeLabeled) to test for support and [getNodeLabel](doc:getNodeLabel) for easiest way\nto get the label.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						499
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 556,
			"name": "PaginatorInterface",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 557,
					"name": "currentState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 591,
						"name": "State"
					}
				},
				{
					"id": 558,
					"name": "internalState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 593,
						"name": "InternalState"
					}
				},
				{
					"id": 565,
					"name": "responseIsSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 70,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 568,
					"name": "first",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 569,
							"name": "first",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 570,
					"name": "firstState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 571,
							"name": "firstState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 591,
										"name": "State"
									}
								]
							}
						}
					]
				},
				{
					"id": 580,
					"name": "getRequestInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 581,
							"name": "getRequestInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 582,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "PaginatorRequestOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "PaginatorRequestOptions"
							}
						}
					]
				},
				{
					"id": 566,
					"name": "hasNextPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 567,
							"name": "hasNextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 572,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 573,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 574,
					"name": "nextState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 575,
							"name": "nextState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 591,
										"name": "State"
									}
								]
							}
						}
					]
				},
				{
					"id": 576,
					"name": "previous",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 577,
							"name": "previous",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 578,
					"name": "previousState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 579,
							"name": "previousState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 591,
										"name": "State"
									}
								]
							}
						}
					]
				},
				{
					"id": 586,
					"name": "replaceStateControllers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 587,
							"name": "replaceStateControllers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 588,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 589,
									"name": "internalStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 559,
					"name": "setCurrentState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 560,
							"name": "setCurrentState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 561,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 591,
										"name": "State"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 562,
					"name": "setInternalState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 69,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 563,
							"name": "setInternalState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 564,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 593,
										"name": "InternalState"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 583,
					"name": "setResponse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 584,
							"name": "setResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 585,
									"name": "response",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						557,
						558,
						565
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						568,
						570,
						580,
						566,
						572,
						574,
						576,
						578,
						586,
						559,
						562,
						583
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 591,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 590,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 65,
									"character": 44
								}
							]
						}
					}
				},
				{
					"id": 593,
					"name": "InternalState",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 592,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 65,
									"character": 64
								}
							]
						}
					}
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 103,
					"name": "InferredPaginator"
				},
				{
					"type": "reference",
					"id": 406,
					"name": "Paginator"
				}
			]
		},
		{
			"id": 594,
			"name": "PaginatorInterfaceClass",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 621,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 622,
							"name": "new PaginatorInterfaceClass",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 623,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 620,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.constructor"
					}
				},
				{
					"id": 614,
					"name": "arguments",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 304,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.arguments"
					}
				},
				{
					"id": 615,
					"name": "caller",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 305,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Function",
						"package": "typescript",
						"name": "Function"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.caller"
					}
				},
				{
					"id": 613,
					"name": "length",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 301,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.length"
					}
				},
				{
					"id": 616,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Returns the name of the function. Function names are read-only and can not be changed."
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 97,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.name"
					}
				},
				{
					"id": 612,
					"name": "prototype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 300,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.prototype"
					}
				},
				{
					"id": 617,
					"name": "[hasInstance]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 618,
							"name": "[hasInstance]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
								"text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
							},
							"parameters": [
								{
									"id": 619,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@71"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.__@hasInstance@71"
					}
				},
				{
					"id": 598,
					"name": "apply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 599,
							"name": "apply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
							},
							"parameters": [
								{
									"id": 600,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The object to be used as the this object."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 601,
									"name": "argArray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A set of arguments to be passed to the function.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.apply"
					}
				},
				{
					"id": 606,
					"name": "bind",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 607,
							"name": "bind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
							},
							"parameters": [
								{
									"id": 608,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "An object to which the this keyword can refer inside the new function."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 609,
									"name": "argArray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"shortText": "A list of arguments to be passed to the new function.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.bind"
					}
				},
				{
					"id": 602,
					"name": "call",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 603,
							"name": "call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Calls a method of an object, substituting another object for the current object."
							},
							"parameters": [
								{
									"id": 604,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The object to be used as the current object."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 605,
									"name": "argArray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"shortText": "A list of arguments to be passed to the method.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.call"
					}
				},
				{
					"id": 595,
					"name": "getPaginationState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 596,
							"name": "getPaginationState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 597,
									"name": "requestDetails",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 549,
										"name": "PaginationRequestDetails"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								]
							}
						}
					]
				},
				{
					"id": 610,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 611,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a string representation of a function."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Function.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						621
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						614,
						615,
						613,
						616,
						612
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						617,
						598,
						606,
						602,
						595,
						610
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
					"line": 85,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 620,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 556,
						"name": "PaginatorInterface"
					},
					"default": {
						"type": "reference",
						"id": 556,
						"name": "PaginatorInterface"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Function",
					"package": "typescript",
					"name": "Function"
				}
			]
		},
		{
			"id": 495,
			"name": "TextLabeled",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Interface for items that provide a plain text label. Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
				"text": "See [isTextLabeled](doc:isTextLabeled) and [getTextLabel](doc:getTextLabel).\n",
				"tags": [
					{
						"tag": "extract-docs",
						"text": ""
					},
					{
						"tag": "menu-group",
						"text": "Labeled\n"
					}
				]
			},
			"children": [
				{
					"id": 496,
					"name": "getLabel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 497,
							"name": "getLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the plain text label for this item. This must return a string",
								"text": "See [isTextLabeled](doc:isTextLabeled) to test for support and [getTextLabel](doc:getTextLabel) for easiest way\nto get the label.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						496
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 10,
					"character": 17
				}
			]
		},
		{
			"id": 628,
			"name": "CursorPaginationState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
					"line": 4,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 629,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 631,
							"name": "cursor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 630,
							"name": "pageSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								631,
								630
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 4,
							"character": 36
						}
					]
				}
			}
		},
		{
			"id": 639,
			"name": "Id",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "SingleId"
					},
					{
						"type": "reference",
						"name": "CompoundId"
					}
				]
			}
		},
		{
			"id": 632,
			"name": "LimitOffsetPaginationState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
					"line": 4,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 633,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 634,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 635,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								634,
								635
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 4,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 624,
			"name": "PageNumberPaginationState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 625,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 626,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 627,
							"name": "pageSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								626,
								627
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 3,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 549,
			"name": "PaginationRequestDetails",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": "eg. the return value from [Endpoint.execute](doc:Endpoint#method-execute)\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 550,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 555,
							"name": "decodedBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The value returned by `decodedBody`. See [Endpoint.execute](doc:Endpoint#method-execute).",
								"text": "This may be a sub-key of the data returned by `Endpoint.execute`, eg. if the `path` option is used in\n[paginationMiddleware](doc:paginationMiddleware). eg. If `decodedBody` from the `Endpoint` was\n\n```json\n{\n    users: {\n        count: 10,\n        results: [...],\n    }\n    extraDetails: {...}\n}\n```\n\nand `paginationMiddleware` was used with `path: 'users'` then `decodedBody` would be:\n\n```json\n{\n    count: 10,\n    results: [...]\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 551,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any query string parameters"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 554,
							"name": "response",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The `Response` object, if available"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Response",
								"package": "typescript",
								"name": "Response"
							}
						},
						{
							"id": 553,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Resolved URL"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 552,
							"name": "urlArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any arguments used to resolve URL"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								555,
								551,
								554,
								553,
								552
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 20,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 636,
			"name": "PaginatorState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 624,
						"name": "PageNumberPaginationState"
					},
					{
						"type": "reference",
						"id": 628,
						"name": "CursorPaginationState"
					},
					{
						"type": "reference",
						"id": 632,
						"name": "LimitOffsetPaginationState"
					}
				]
			}
		},
		{
			"id": 501,
			"name": "UseAsyncListingProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 23,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 510,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 502,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 505,
							"name": "accumulatePages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to accumulate pages as more results are fetched. For example\nif the first page of results is returned, then the next page is fetched\nthen the combined results for the first two pages will be resolved.",
								"text": "This resets whenever `query` changes or if pagination state changes\nto anything other than the next page.\n\nIf this is true you must specify `paginator`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 506,
							"name": "paginator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional paginator if result is paginated. This will be monitored for\nany state changes which will trigger a call to `execute`.",
								"text": "Required if `accumulatePages` is true.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 556,
										"name": "PaginatorInterface"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 504,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any query string parameters for the request"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 503,
							"name": "trigger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When to trigger the fetch. Defaults to `DEEP` which means whenever a deep\nequality check on `query` or `paginator` state fails it will refetch.",
								"text": "If set to `MANUAL` nothing will happen until it changes to `DEEP` or you\ncall the returned `run` function. You can use this to defer execution until\nthe value is required.\n\nDefaults to 'DEEP'.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "MANUAL"
									},
									{
										"type": "literal",
										"value": "DEEP"
									}
								]
							}
						},
						{
							"id": 507,
							"name": "execute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 65,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 508,
									"name": "execute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronous function that returns the result for the query. Passed an\nobject with `query` and `paginator` keys.",
										"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
									},
									"parameters": [
										{
											"id": 509,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "UseAsyncListingExecuteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 510,
												"name": "T"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								505,
								506,
								504,
								503
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								507
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 23,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 511,
			"name": "UseAsyncListingReturn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 93,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 521,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 521,
										"name": "T"
									}
								],
								"name": "UseAsyncListingReturnCommon"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 512,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 513,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Until first call has resolved neither error nor result will be set"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 98,
													"character": 10
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										},
										{
											"id": 514,
											"name": "result",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 99,
													"character": 10
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												513,
												514
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 94,
											"character": 40
										}
									]
								}
							}
						]
					},
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 521,
										"name": "T"
									}
								],
								"name": "UseAsyncListingReturnCommon"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 515,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 516,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 107,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 517,
											"name": "result",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Result will not be set when error is set"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 111,
													"character": 10
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												516,
												517
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 101,
											"character": 40
										}
									]
								}
							}
						]
					},
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 521,
										"name": "T"
									}
								],
								"name": "UseAsyncListingReturnCommon"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 518,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 519,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Error will not be set when result is set"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 117,
													"character": 10
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										},
										{
											"id": 520,
											"name": "result",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The value returned from execute"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 121,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"id": 521,
												"name": "T"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												519,
												520
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 113,
											"character": 40
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 522,
			"name": "UseAsyncValuePropsMulti",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
					"line": 83,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 528,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 529,
					"name": "U",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 639,
						"name": "Id"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 528,
								"name": "T"
							},
							{
								"type": "reference",
								"id": 529,
								"name": "U"
							}
						],
						"name": "CommonProps"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 523,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 524,
									"name": "ids",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Array of ids to resolve values for or null if nothing yet to resolve",
										"text": "If you need to resolve a single value use the other form documented above\npassing `id` instead\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 90,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 529,
													"name": "U"
												}
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 525,
									"name": "resolve",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 95,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 526,
											"name": "resolve",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Resolve the value for the provided IDs. Function is passed a single parameter\nbeing `ids`"
											},
											"parameters": [
												{
													"id": 527,
													"name": "ids",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 529,
															"name": "U"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 528,
															"name": "T"
														}
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										524
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										525
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 83,
									"character": 75
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 530,
			"name": "UseAsyncValuePropsSingle",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
					"line": 61,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 536,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 537,
					"name": "U",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 639,
						"name": "Id"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 536,
								"name": "T"
							},
							{
								"type": "reference",
								"id": 537,
								"name": "U"
							}
						],
						"name": "CommonProps"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 531,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 532,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Single `id` for value to fetch or null if nothing yet to resolve.",
										"text": "If you need to resolve multiple values use the other form documented\nbelow passing `ids` instead.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 68,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 537,
												"name": "U"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 533,
									"name": "resolve",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 77,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 534,
											"name": "resolve",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Resolve the value for the provided ID. Function is passed a single parameter\nbeing `id`.",
												"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
											},
											"parameters": [
												{
													"id": 535,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 537,
														"name": "U"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 536,
														"name": "T"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										532
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										533
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 61,
									"character": 76
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 538,
			"name": "UseAsyncValueReturn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
					"line": 98,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 548,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 539,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 540,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Set to the rejected value of the promise. Only one of `error` and `value` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 104,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Error",
										"package": "typescript",
										"name": "Error"
									}
								]
							}
						},
						{
							"id": 541,
							"name": "isLoading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "True while `resolve` call is in progress."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 108,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 542,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The resolved value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 548,
										"name": "T"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 546,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 130,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 547,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`.",
										"text": "If value is found in `existingValues` then it will still be returned even if\nyou call `reset` - `reset` only clears values that are returned from `resolve`.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 543,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 121,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 544,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
										"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
									},
									"parameters": [
										{
											"id": 545,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								540,
								541,
								542
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								546,
								543
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 98,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 38,
			"name": "useAsync",
			"kind": 1024,
			"kindString": "Property",
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "useAsync"
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 39,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 41,
									"name": "DEEP",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 462,
											"character": 13
										}
									],
									"type": {
										"type": "literal",
										"value": "DEEP"
									}
								},
								{
									"id": 40,
									"name": "MANUAL",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 461,
											"character": 13
										}
									],
									"type": {
										"type": "literal",
										"value": "MANUAL"
									}
								},
								{
									"id": 42,
									"name": "SHALLOW",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 463,
											"character": 13
										}
									],
									"type": {
										"type": "literal",
										"value": "SHALLOW"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										41,
										40,
										42
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 475,
			"name": "formatTime",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/time.ts",
					"line": 116,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 476,
					"name": "formatTime",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Format the parts of a time - as returned by [parseTime](doc:parseTime) - as a string using\n[toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_options).",
						"text": "Note that while you can pass through `options.timeZone` this may be inaccurate if `parts.timezoneOffset` isn't\nsupplied.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Time\n"
							}
						]
					},
					"parameters": [
						{
							"id": 477,
							"name": "parts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reference",
										"name": "TimeParts"
									}
								]
							}
						},
						{
							"id": 478,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TimeFormatOptions"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 17,
			"name": "getId",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 45,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 18,
					"name": "getId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get the id for an object. If object doesn't implement Identifiable then `fallbackGetId`\nmust be provided or an error will be thrown.",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Identifiable\n"
							}
						]
					},
					"parameters": [
						{
							"id": 19,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Any value to get ID for"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20,
							"name": "fallbackGetId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function to return id for `item` if it doesn't implement Identifiable\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 22,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 23,
													"name": "item",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 639,
												"name": "Id"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 639,
						"name": "Id"
					}
				}
			]
		},
		{
			"id": 457,
			"name": "getNodeLabel",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 82,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 458,
					"name": "getNodeLabel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get a React node label from an item",
						"text": "If item implements `getNodeLabel` that will be used otherwise `getLabel` will be used.\n\nIf neither are defined an error is thrown. To conditional call this check if labeled first\nwith `isLabeled`.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"parameters": [
						{
							"id": 459,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "React.ReactNode",
						"package": "@types/react",
						"name": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 469,
			"name": "getTextLabel",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 103,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 470,
					"name": "getTextLabel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get a plain text label from an item",
						"text": "If does not implement TextLabeled an error is thrown. To conditional call this check if labeled first\nwith `isTextLabeled`.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"parameters": [
						{
							"id": 471,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 24,
			"name": "hashId",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 64,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 25,
					"name": "hashId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Create string representation of ID suitable for strict equality\nchecking or as a key into an object / map.",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Identifiable\n"
							}
						]
					},
					"parameters": [
						{
							"id": 26,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 639,
								"name": "Id"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 67,
			"name": "isDeepEqual",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/comparison.ts",
					"line": 37,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 68,
					"name": "isDeepEqual",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Compare values deeply for equality. If an object has an `isEqual` method this\nwill be called otherwise values will be compared deeply."
					},
					"parameters": [
						{
							"id": 69,
							"name": "a",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 70,
							"name": "b",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 71,
			"name": "isEqual",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/comparison.ts",
					"line": 29,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 72,
					"name": "isEqual",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Compare to values for equality. If has an `isEqual` method this will be called\notherwise values will be compared shallowly."
					},
					"parameters": [
						{
							"id": 73,
							"name": "a",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 74,
							"name": "b",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 35,
			"name": "isIdentifiable",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 29,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 36,
					"name": "isIdentifiable",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check if a value conforms to Identifiable",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Identifiable\n"
							}
						]
					},
					"parameters": [
						{
							"id": 37,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "item",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 637,
							"name": "Identifiable"
						}
					}
				}
			]
		},
		{
			"id": 463,
			"name": "isLabeled",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 67,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 464,
					"name": "isLabeled",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check if item supports either text or React node labels",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"parameters": [
						{
							"id": 465,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "item",
						"asserts": false,
						"targetType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"id": 495,
									"name": "TextLabeled"
								},
								{
									"type": "reference",
									"id": 498,
									"name": "NodeLabeled"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 466,
			"name": "isNodeLabeled",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 55,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 467,
					"name": "isNodeLabeled",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check if a value conforms to NodeLabeled",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"parameters": [
						{
							"id": 468,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "item",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 498,
							"name": "NodeLabeled"
						}
					}
				}
			]
		},
		{
			"id": 64,
			"name": "isPromise",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/misc.ts",
					"line": 4,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 65,
					"name": "isPromise",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Utility to check if a value is a promise"
					},
					"parameters": [
						{
							"id": 66,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"qualifiedName": "Promise",
							"package": "typescript",
							"name": "Promise"
						}
					}
				}
			]
		},
		{
			"id": 27,
			"name": "isSameById",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 89,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 28,
					"name": "isSameById",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check if two objects share the same ID.",
						"text": "NOTE: Doesn't compare objects for equality; only their id\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Identifiable\n"
							}
						]
					},
					"parameters": [
						{
							"id": 29,
							"name": "item1",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 30,
							"name": "item2",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 31,
							"name": "fallbackGetId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 33,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 34,
													"name": "item",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 639,
												"name": "Id"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 460,
			"name": "isTextLabeled",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 43,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 461,
					"name": "isTextLabeled",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check if a value conforms to TextLabeled",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"parameters": [
						{
							"id": 462,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "item",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 495,
							"name": "TextLabeled"
						}
					}
				}
			]
		},
		{
			"id": 472,
			"name": "parseTime",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/time.ts",
					"line": 49,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 473,
					"name": "parseTime",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Parse a string into its constituent time parts",
						"text": "Returns an object containing the `hour`, `minute`, `second`, `millisecond` and optional `timezone` values.\n\nAccepts input of the form `H:MM[:SS[:.mmm:[+TZ]]]` where `H` is hours, `MM` is minutes, `SS` is seconds, `mmm` is\nmilliseconds and `+TZ` is the timezone (eg. +10:00).\n\nSeconds & milliseconds are optional and will default to 0 if not in the string, timezone is optional and will be\nleft as undefined if not specified.\n\nNOTE: If you pass a `Date` object then the timezone offset will always be whatever the local browser/env timezone\nis (ie. it's not possible to have a javascript `Date` object in another timezone).\n\n```js\nparseTime(\"3:55\")\n// { hour: 3, minute: 55, seconds: 0, milliseconds: 0 }\nparseTime(\"03:55:20\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 0 }\nparseTime(\"03:55:20.600\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600 }\nparseTime(\"03:55:20.600+10:00\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600, timezoneOffset: -600 }\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Time\n"
							}
						]
					},
					"parameters": [
						{
							"id": 474,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The string value to parse\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "TimeParts"
					}
				}
			]
		},
		{
			"id": 52,
			"name": "useAsyncListing",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 135,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 53,
					"name": "useAsyncListing",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Execute an asynchronous call and return the value which can optionally be paginated.",
						"text": "If the result is paginated you can pass `paginator`. Whenever the paginator state\nis changed the function will be called unless `trigger` is `MANUAL`. You can pass\n`accumulatePages` to accumulate results for sequential pages returned from `execute`.\nThis is useful to implement things like infinite scroll. If a non-sequential page\nis accessed or `query` changes then accumulated results will be cleared.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 54,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 55,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 501,
								"typeArguments": [
									{
										"type": "reference",
										"id": 54,
										"name": "T"
									}
								],
								"name": "UseAsyncListingProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 511,
						"typeArguments": [
							{
								"type": "reference",
								"id": 54,
								"name": "T"
							}
						],
						"name": "UseAsyncListingReturn"
					}
				}
			]
		},
		{
			"id": 43,
			"name": "useAsyncValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
					"line": 148,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 44,
					"name": "useAsyncValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Resolve a value from an id using an async function.",
						"text": "For the specified `id` the `resolve` function will be called and should\nreturn the value for the specified id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the value will\nbe returned immediately.\n\nFor multiple values see documentation below.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 45,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 46,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 639,
								"name": "Id"
							}
						}
					],
					"parameters": [
						{
							"id": 47,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 530,
								"typeArguments": [
									{
										"type": "reference",
										"id": 45,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 46,
										"name": "U"
									}
								],
								"name": "UseAsyncValuePropsSingle"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 538,
						"typeArguments": [
							{
								"type": "reference",
								"id": 45,
								"name": "T"
							}
						],
						"name": "UseAsyncValueReturn"
					}
				},
				{
					"id": 48,
					"name": "useAsyncValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Resolve values from an array of ids using an async function.",
						"text": "For the specified array of `ids` the `resolve` function will be called\nand should return an array of the same size with each entry being the resolved\nvalue for the corresponding id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the values will\nbe returned immediately. Note that if any of the ids are missing from\n`existingValues` then it will be ignored and a call to `resolve` will be made\nrequesting values for all `ids`.\n"
					},
					"typeParameter": [
						{
							"id": 49,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 50,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 639,
								"name": "Id"
							}
						}
					],
					"parameters": [
						{
							"id": 51,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 522,
								"typeArguments": [
									{
										"type": "reference",
										"id": 49,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 50,
										"name": "U"
									}
								],
								"name": "UseAsyncValuePropsMulti"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 538,
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 49,
									"name": "T"
								}
							}
						],
						"name": "UseAsyncValueReturn"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "useChangeObserver",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
					"line": 57,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "useChangeObserver",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Call a function whenever a value changes.",
						"text": "This works by monitoring a value passed in and tracking it's last value. Whenever\nthe value changes the provided callback will be called with the last and current\nvalue.\n\n```jsx\nexport default function Example() {\n  const [count, setCount] = useState(0);\n  useChangeObserver(count, () => {\n    console.log(`Changed from ${prev} to ${next}.`));\n  }\n  return <>\n    Count: {count}\n    <button onClick={() => setCount(c => c+1)}>+1</button>\n  </>;\n}\n```\n",
						"returns": "Has no return value\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 3,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 4,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The value to monitor for changes. This can be any type but for complex\ntypes you will need to provide your own `isEqual` function. For simple shallow\ncomparisons the default function will suffice (eg. it will compare each element in\nan array or each value on an object 1 level deep)."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "T"
							}
						},
						{
							"id": 5,
							"name": "onChange",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The function to call when `value` changes. This is passed the previous\nvalue and the current value.\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 7,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 8,
													"name": "lastValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3,
														"name": "T"
													}
												},
												{
													"id": 9,
													"name": "nextValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3,
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 10,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3,
										"name": "T"
									}
								],
								"name": "ChangeObserverOptions"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 11,
			"name": "useListChangeObserver",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
					"line": 121,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 12,
					"name": "useListChangeObserver",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Call a function whenever values in a list change. This differs from `useChangeObserver` by\nallowing you to choose what changes you get (additions, updates, deletions) and to be passed the\nchanged items in the callback. In order to achieve this each item in the array needs to have a\nunique ID which is obtained by calling the `options.getId` function. The default implementation will\nlook for a `_key` or `id` property and return this, otherwise it return the value as is. This default\nimplementation is compatible with [ViewModel](doc:viewModelFactory) so you can pass lists of\nrecords returned from [useViewModelCache](doc:useViewModelCache).",
						"text": "```jsx\nexport default function UserListView() {\n  const { data, revalidate, isValidating } = useEndpoint(User.endpoints.list);\n  // Refetch data whenever underlying cache changes\n  const allRecords = useViewModelCache(User, cache => cache.getAll(fieldList));\n  // NOTE: Usually you don't want multiple useListChangeObserver's on the exact same\n  // subset of data as you will trigger redundant ajax queries.\n  // if a record is updated & saved elsewhere, then useViewModelCache will return new\n  // data which triggers useListChangeObserver. We still want useListChangeObserver()\n  // to trigger the useEndpoint() revalidate because that record update may have changed the\n  // order of records or caused it to [no longer] appear in a filtered list of data.\n  // Also note that we pass false while data is being fetched from the backend\n  useListChangeObserver(!isValidating && allRecords, revalidate);\n  return <ListView records={data} />;\n}\n```\n",
						"returns": "No return value\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 13,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 14,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "An array of values to monitor for changes. A falsey value can be passed to disable\nchecks. This is the same as passing `options.disabled`. This is convenient for cases where no value\nis available yet (eg. when waiting for initial response from an API endpoint)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"id": 13,
										"name": "T"
									}
								]
							}
						},
						{
							"id": 15,
							"name": "onChange",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "A method that will be called on any changes. This is passed an object of changes in the form:\n\n```\n{\n    ADD: [...],\n    UPDATE: [[<prev value>, <updated value>]...],\n    DELETE: [...],\n}\n```\nEach change type (ADD, UPDATE, DELETE) will be `false` if no value has changed.\n\nThe last and next list of records are also passed.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 13,
										"name": "T"
									}
								],
								"name": "OnChange"
							}
						},
						{
							"id": 16,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 13,
										"name": "T"
									}
								],
								"name": "ListChangeObserverOptions"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 56,
			"name": "useMemoOne",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
					"line": 47,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 57,
					"name": "useMemoOne",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "useMemo but with a stable cache and support for custom comparison operator",
						"text": "Based on https://github.com/alexreardon/use-memo-one but supports custom\ncomparison operator. See https://github.com/alexreardon/use-memo-one/issues/11\n",
						"returns": "\n"
					},
					"typeParameter": [
						{
							"id": 58,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 59,
							"name": "getResult",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Function that returns value to memoize"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 61,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 58,
												"name": "T"
											}
										}
									]
								}
							}
						},
						{
							"id": 62,
							"name": "inputs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Dependency array. When values in this change getResult is called again"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 63,
							"name": "compare",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Custom comparision operator. Defaults to shallow strict equality."
							},
							"type": {
								"type": "reference",
								"name": "ComparisonFn"
							},
							"defaultValue": "isEqual"
						}
					],
					"type": {
						"type": "reference",
						"id": 58,
						"name": "T"
					}
				}
			]
		},
		{
			"id": 75,
			"name": "usePaginator",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
					"line": 28,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 76,
					"name": "usePaginator",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Hook to help manage paginator state. An instance of the specified paginator is created with provided\nstate setter or a default setter if none provided. You only need to provide a state setter if you\nwant to store the state somewhere external eg. from URL query parameters.",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 79,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 556,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 77,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 78,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"id": 79,
										"name": "T"
									}
								],
								"name": "PaginatorInterface"
							}
						},
						{
							"id": 80,
							"name": "PaginatorState",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 81,
							"name": "paginatorClassOrProvider",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Must either be an object with a `getPaginatorClass` method (eg.\n[Endpoint](doc:Endpoint)) or a [Paginator](doc:Paginator) class. This class defines how pagination is\nhandled."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 594,
										"typeArguments": [
											{
												"type": "reference",
												"id": 79,
												"name": "T"
											}
										],
										"name": "PaginatorInterfaceClass"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 79,
												"name": "T"
											}
										],
										"name": "PaginatorClassProvider"
									}
								]
							}
						},
						{
							"id": 82,
							"name": "currentStatePair",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A tuple of current state and a state setter function. If not provided state\nis handled internally in usePaginator. You can pass `useState()` to this parameter.\n"
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 80,
												"name": "PaginatorState"
											}
										]
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 83,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 84,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 85,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 80,
																"name": "PaginatorState"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 79,
						"name": "T"
					}
				},
				{
					"id": 86,
					"name": "usePaginator",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 87,
							"name": "PaginatorState",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 88,
							"name": "paginatorClassOrProvider",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 89,
							"name": "currentStatePair",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 87,
												"name": "PaginatorState"
											}
										]
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 90,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 91,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 92,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 87,
																"name": "PaginatorState"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 93,
					"name": "usePaginator",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 96,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 556,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 94,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 95,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"id": 96,
										"name": "T"
									}
								],
								"name": "PaginatorInterface"
							}
						},
						{
							"id": 97,
							"name": "PaginatorState",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 98,
							"name": "paginatorClassOrProvider",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 594,
										"typeArguments": [
											{
												"type": "reference",
												"id": 96,
												"name": "T"
											}
										],
										"name": "PaginatorInterfaceClass"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 96,
												"name": "T"
											}
										],
										"name": "PaginatorClassProvider"
									}
								]
							}
						},
						{
							"id": 99,
							"name": "currentStatePair",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 97,
												"name": "PaginatorState"
											}
										]
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 100,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 101,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 102,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 97,
																"name": "PaginatorState"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 96,
								"name": "T"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				342,
				103,
				479,
				274,
				201,
				406
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				637,
				498,
				556,
				594,
				495
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				628,
				639,
				632,
				624,
				549,
				636,
				501,
				511,
				522,
				530,
				538
			]
		},
		{
			"title": "Properties",
			"kind": 1024,
			"children": [
				38
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				475,
				17,
				457,
				469,
				24,
				67,
				71,
				35,
				463,
				466,
				64,
				27,
				460,
				472,
				52,
				43,
				1,
				11,
				56,
				75
			]
		}
	],
	"sources": [
		{
			"fileName": "js-packages/@prestojs/util/src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}